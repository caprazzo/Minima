/*

 jQuery JavaScript Library v1.6.2
 http://jquery.com/

 Copyright 2011, John Resig
 Dual licensed under the MIT or GPL Version 2 licenses.
 http://jquery.org/license

 Includes Sizzle.js
 http://sizzlejs.com/
 Copyright 2011, The Dojo Foundation
 Released under the MIT, BSD, and GPL Licenses.

 Date: Thu Jun 30 14:16:56 2011 -0400

 Sizzle CSS Selector Engine
 Copyright 2011, The Dojo Foundation
 Released under the MIT, BSD, and GPL Licenses.
 More information: http://sizzlejs.com/

 jQuery UI 1.8.14

 Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 Dual licensed under the MIT or GPL Version 2 licenses.
 http://jquery.org/license

 http://docs.jquery.com/UI

 jQuery UI Widget 1.8.14

 Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 Dual licensed under the MIT or GPL Version 2 licenses.
 http://jquery.org/license

 http://docs.jquery.com/UI/Widget

 jQuery UI Mouse 1.8.14

 Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 Dual licensed under the MIT or GPL Version 2 licenses.
 http://jquery.org/license

 http://docs.jquery.com/UI/Mouse

 Depends:
 jquery.ui.widget.js
: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. 
 @website: http://www.datejs.com/

 This application uses other third-party javascript components
 distributed under appropriate licenses. For more information,
 see the following files at http://trello.com/js/lib/
 backbone.js
 highcharts.js
 json2.js
 markdown.js
 socket.io.js
 underscore.js
*/
 (function(q) {
    function A(d, c) {
        return ! c && !q.load || q.load && q.load.indexOf(d) != -1
    }
    if (!q.preloading) {
        q.Api = {
            methodMap: {
                Board: ["create", "update", "get", "actions", "setOrganization", "removeMember", "addAdmin", "removeAdmin", "clone"],
                Api: [],
                App: ["login", "search"],
                OrganizationInvitation: ["create", "update", "delete"],
                BoardInvitation: ["create", "update", "delete"],
                BoardPreference: ["create", "update"],
                BoardSubDoc: ["create", "update"],
                Card: ["create", "update", "get", "actions", "getVoterDisplayData", "addComment", "setDueDate",
                "setChecklistTaskState", "attachFile", "deleteAttachment"],
                CheckItem: ["create", "update", "delete", "changeName", "convertToCard"],
                Checklist: ["create", "update", "addTask"],
                Doc: ["create", "update"],
                List: ["create", "update", "get"],
                Member: ["create", "update", "get", "actions", "updatePassword", "markNotificationRead", "notifications", "checkValidators", "respondToInvitation", "recordUses"],
                Organization: ["create", "update", "removeMember", "addAdmin", "removeAdmin", "addBoard", "removeBoard"],
                OrganizationSubDoc: ["create", "update"],
                SubDoc: ["create", "update"]
            }
        };
        var w = {
            archive: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header"> <span class="app-icon archive-icon"></span> <h2 class="window-title">{{name}}</h2> </div> <div class="window-main-col"> {{^empty}} <div class="window-module clearfix"> <ul class="archive-items bold-list gutter"></ul> </div> {{/empty}} {{#empty}} <p class="empty-list">{{emptyMessage}}</p> {{/empty}} </div> <div class="window-sidebar"> <p class="helper">You have to have been a board owner to re-open a closed board.</p> </div> ',
            action: '<div class="phenom clearfix {{#grouped}}grouped{{/grouped}} {{#actionClass}}type-{{actionClass}}{{/actionClass}}"> <div class="action-member-placeholder"></div> <div class="phenom-desc" {{#type}}actionType="{{type}}"{{/type}}> {{#entities}} {{>entity}} {{/entities}} {{#hasChildren}} <ul> {{#children}} <li>{{#entities}}{{>entity}}{{/entities}}</li> {{/children}} </ul> {{/hasChildren}} </div> <div class="phenom-meta quiet"> {{#date}}<p class="date" dt="{{date}}"></p>{{/date}} {{^date}}<p>Sending...</p>{{/date}} {{#board}} <p>- on board <a href="{{url}}"><strong>{{name}}</strong></a> {{#permissionLevel_private}} <span title="This board is private. The board (and board actions) are only visible to members of this board." class="app-icon small-icon private-icon"></span> {{/permissionLevel_private}} {{#permissionLevel_org}} <span title="This board visible to an organization. The board (and board actions) are only visible to members of the organization" class="app-icon small-icon org-private-icon"></span> {{/permissionLevel_org}} {{#permissionLevel_public}} <span title="This board is public. The board (and board actions) are visible to the whole Internet." class="app-icon small-icon public-icon"></span> {{/permissionLevel_public}} </p> {{/board}} {{#organization}} <p>- on organization <a href="{{url}}"><strong>{{name}}</strong></a> {{#permissionLevel_private}} <span title="This organization is private. The organization (and organization actions) are only visible to members of this organization." class="app-icon small-icon private-icon"></span> {{/permissionLevel_private}} {{#permissionLevel_public}} <span title="This organization is public. The organization (and organization actions) are visible to the whole Internet." class="app-icon small-icon public-icon"></span> {{/permissionLevel_public}} </p> {{/organization}} </div> </div> ',
            board_email_search_result: '<li class="member-list-item {{className}} {{#isInvitable}}invitable{{/isInvitable}}"> <span class="email">{{email}}</span> <div class="status"></div> </li> ',
            add_board_button: '<li class="add-board-list-item"> <a class="button-link highlight-icon js-add-board" href="#"> <span class="app-icon small-icon board-icon"></span> Add Board </a> </li> ',
            archive_base: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon archive-icon"></span> <div class="member-title"> <h2 class="window-title"> {{name}} Archive </h2> </div> </div> <div class="window-main-col clearfix"> {{{content}}} </div> <div class="window-sidebar"> <div class="window-module sidebar-nav"> <ul> <li> <a class="js-archive-cards{{#section_cards}} active{{/section_cards}}" href="#">Cards</a> </li> <li> <a class="js-archive-lists{{#section_lists}} active{{/section_lists}}" href="#">Lists</a> </li> <ul> </div> </div> ',
            archive_item: '<p class="item-name float-link"> {{#url}} <a href="{{url}}">{{name}}</a> {{/url}} {{^url}} <span>{{name}}</span> {{/url}} </p> {{#__ed}} <div class="options"> <a href="#" class="button-link highlight-icon js-reopen"> <span class="app-icon light-hover small-icon reopen-icon"></span> {{reOpenText}} </a> </div> {{/__ed}} ',
            archive_items: '{{^empty}} <div class="window-module clearfix"> <ul class="archive-items bold-list gutter"> </ul> </div> {{/empty}} {{#loading}} <p class="loading">Loading...</p> {{/loading}} {{#empty}} <p class="empty-list">{{emptyMessage}}</p> {{/empty}} {{#hasMoreCards}} <a class="show-more js-more-archive-cards" href="#">Load More Cards</a> {{/hasMoreCards}} ',
            attachment: '<li> <a href="{{url}}" target="_blank">{{name}}</a> {{#size}}<span class="quiet size">{{size}}</span>{{/size}} <p class="meta quiet"> {{#date}}<span class="date" dt="{{date}}"></span>{{/date}} <span> - </span> {{#__ed}}<a href="#" class="js-delete-attachment">Delete</a>{{/__ed}} </p> </li> ',
            badges: '{{#hasUnreadNotifications}} <span class="app-icon small-icon light notification-icon badge-image"></span> <p class="badge-count">{{count}}</p> {{/hasUnreadNotifications}} {{#hasUnansweredAtComments}} <div class="badge-image"> <img width="14" height="14" style="margin: 2px;" src="https://d2k1ftgv7pobq7.cloudfront.net/images/badges/084227c9facee1c69b90507c794b2017/badge-unansweredAtComments.png" alt="There {{#single}}is a comment {{/single}}{{^single}}are {{count}} comments {{/single}} that you haven\'t responded to" title="There {{#single}}is a comment {{/single}}{{^single}}are {{count}} comments {{/single}} that you haven\'t responded to"> </div> {{/hasUnansweredAtComments}} {{#hasDesc}} <span class="app-icon small-icon light edit-icon badge-image"><span> {{/hasDesc}} {{#hasComments}} <span class="app-icon small-icon light comment-icon badge-image"></span> <p class="badge-count">{{count}}</p> {{/hasComments}} {{#hasAttachments}} <span class="app-icon small-icon light attachment-icon badge-image"></span> <p class="badge-count">{{count}}</p> {{/hasAttachments}} {{#hasLinks}} <div class="badge-image"> <img width="14" height="14" style="margin: 2px;" src="https://d2k1ftgv7pobq7.cloudfront.net/images/badges/3c8df284438e4261f826d8318545e1e9/badge-links.png" alt="There {{#single}}is a link {{/single}}{{^single}}are {{count}} links {{/single}} in this card\'s comments" title="There {{#single}}is a link {{/single}}{{^single}}are {{count}} links {{/single}} in this card\'s comments"> </div> <p class="badge-count">{{count}}</p> {{/hasLinks}} {{#hasTasks}} <span class="app-icon small-icon light checklist-icon badge-image"></span> <p class="badge-count{{#complete}} complete{{/complete}}">{{count}}{{#hasTotal}}/{{total}}{{/hasTotal}}</p> {{/hasTasks}} {{#hasDueDate}} <span class="app-icon small-icon light date-icon badge-image"></span> <p class="badge-date">{{shortDueDate}}</p> {{/hasDueDate}} {{#hasFogBugzLink}} <span class="app-icon small-icon light kiwi-icon badge-image"></span> {{/hasFogBugzLink}} {{#hasVotes}} <span class="app-icon small-icon light vote-icon badge-image"></span> <p class="badge-count">{{count}}</p> {{/hasVotes}} {{#isArchived}} <span class="app-icon small-icon light archive-icon badge-image" title="This card is in the archive."></span> {{/isArchived}} ',
            board: ' <div id="board-header"> <a class="app-icon dark-hover board-icon js-open-board-menu"></a> <div class="board-title {{#__own}} editable {{/__own}} non-empty" attr="name"> <h2 class="hide-on-edit current">{{name}}</h2> {{#__own}} <div class="edit edit-heavy"> <input type="text" class="field" /> </div> {{/__own}} <h4 class="quiet org-name"></h4> <div id="permission-level"></div> </div> </div> <div class="board-widgets{{#showSidebar_false}} disabled{{/showSidebar_false}}"> <div class="master-board-widget-menu"> <span class="app-icon small-icon dark-hover menu-icon js-show-all-widgets" name="showSidebar"></span> </div> {{#__invited}} <div class="board-widget clearfix{{#showSidebarMembers_false}} disabled{{/showSidebarMembers_false}}"> <p class="helper" style="margin-bottom: 8px;"> {{#permissionLevel_private}} This is a private board. You can see it because you\'ve been invited. {{/permissionLevel_private}} {{#permissionLevel_org}} This board is private to an organization. You can see it because you\'ve been invited. {{/permissionLevel_org}} {{#permissionLevel_public}} This board is a public. {{/permissionLevel_public}} Accept the invite to make changes. </p> {{#__loggedIn}} <a class="button primary left js-accept-invite" style="margin-top: 0; padding: 6px 10px;" href="">Accept Invite</a> <a class="button left js-reject-invite" style="margin-top: 0; padding: 6px 10px;" href="">Reject</a> {{/__loggedIn}} {{^__loggedIn}} <a class="button primary left js-accept-invite" style="margin-top: 0; padding: 6px 10px;" href="/signup?returnUrl={{url}}">Sign up for Trello</a> {{/__loggedIn}} </div> {{/__invited}} <div class="board-widget clearfix{{#showSidebarMembers_false}} disabled{{/showSidebarMembers_false}}"> <div class="board-widget-title"> <h3>Members</h3> <span class="app-icon small-icon dark-hover menu-icon js-board-widget-vis" name="showSidebarMembers"></span> </div> <div class="board-widget-content"> <div class="board-widget-members clearfix"> <div class="list-board-members {{#__ed}} assignable-members {{/__ed}} clearfix"> </div> </div> {{#__ed}} <a class="button-link highlight-icon js-manage-board-members"> <span class="app-icon small-icon light-hover member-icon"></span> Add Members&hellip; </a> {{/__ed}} <span id="watchers"></span> </div> </div> <div class="board-widget clearfix{{#showSidebarBoardActions_false}} disabled{{/showSidebarBoardActions_false}}"> <div class="board-widget-title"> <h3>Board</h3> <span class="app-icon small-icon dark-hover menu-icon js-board-widget-vis" name="showSidebarBoardActions"></span> </div> <div class="board-widget-content"> {{#__ed}} <a class="button-link highlight-icon js-add-list"> <span class="app-icon small-icon light-hover list-icon"></span> Add List </a> {{/__ed}} <a class="button-link highlight-icon js-filter-cards"> <span class="app-icon small-icon light-hover card-icon"></span> Filter Cards&hellip; <span class="on">ON</span> </a> <a class="button-link highlight-icon js-view-archive"> <span class="app-icon small-icon light-hover archive-icon"></span> View Archive&hellip; </a> <a class="button-link highlight-icon js-view-preferences"> <span class="app-icon small-icon light-hover preferences-icon"></span> Preferences&hellip; </a> </div> </div> <div class="board-widget board-widget-actions clearfix{{#showSidebarActivity_false}} disabled{{/showSidebarActivity_false}}"> <div class="board-widget-title"> <h3 class="inline-block">Activity</h3> <a href="#" style="margin-left: 3px;" class="js-view-all-activity quiet"> View all&hellip; </a> <span class="app-icon small-icon dark-hover menu-icon js-board-widget-vis" name="showSidebarActivity"></span> </div> <div class="board-widget-content"> <div class="board-actions-list-wrapper"> <div class="activity-gradient-t"></div> <div class="activity-gradient-b"></div> <div class="board-actions-list fancy-scrollbar"> <div class="list-actions board-list-actions"></div> <a href="#" class="show-more js-view-all-activity js-end-of-list"> View all&hellip; </a> {{#__ed}} <a href="#" style="padding: 6px 6px 6px 40px; font-weight: bold;" class="js-allow-notifications quiet"> Allow Notifications </a> {{/__ed}} </div> </div> </div> </div> </div> <div class="list-guide{{#showListGuide_false}} disabled{{/showListGuide_false}}"> <div class="list-guide-wrapper fancy-scrollbar"></div> </div> <div id="board" class="clearfix{{^__ed}} permission-public{{/__ed}}{{#showSidebar_false}} disabled-board-widgets{{/showSidebar_false}}{{#showListGuide_false}} disabled-list-guide{{/showListGuide_false}}"> <div class="list-area-wrapper fancy-scrollbar"> <div class="list-area {{#__ed}} js-list-sortable {{/__ed}} no-edits"> </div> </div> </div> ',
            board_activity: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon activity-icon"></span> <h2 class="window-title">{{name}} Activity</h2> </div> <div class="window-fill fancy-scrollbar clearfix"> <div class="list-activity"></div> <a class="show-more js-more-actions" href="#">Load More Activity</a> </div> ',
            board_closed: '<div class="big-message"> <p> {{name}} is closed. </p> </div> ',
            board_member_profile: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon member-icon" href="#"></span> <h2 class="window-title"> {{fullName}} {{#username}} <span class="quiet" style="margin-left: 3px">({{username}})</span> {{/username}} </h2> </div> <div class="window-main-col"> <div class="window-main-col-content clearfix"> <div class="list-actions"></div> <a class="show-more js-more-actions" href="#">Load More Activity</a> </div> </div> <div class="window-sidebar"> <div class="profile-member"> <p class="profile-member-initials"> {{initials}} </p> <img class="profile-member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=170&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}"> </div> <div class="window-module"> <h3>Actions</h3> <a href="/{{username}}" class="button-link highlight-icon"> <span class="app-icon light-hover small-icon member-icon"></span> View Profile </a> {{#canMakeAdmin}} <a class="button-link highlight-icon js-make-admin"> <span class="app-icon light-hover small-icon board-icon"></span> Make Co-owner </a> {{/canMakeAdmin}} </div> <div class="window-module"> <ul class="options-list"> {{#canRemove}} <li> <a href="#" class="js-remove-member"> Remove from Board </a> </li> {{/canRemove}} {{#canRemoveAdmin}} <li> <a href="#" class="js-remove-admin"> Give up co-ownership </a> </li> {{/canRemoveAdmin}} </ul> </div> </div> ',
            board_inline: '<span>the board</span> <a href="{{boardUrl}}" class="inline-object"> {{name}} </a> ',
            board_menu_item: '<a href="{{url}}" class="clearfix highlight-icon"> <span class="item-name"> {{name}} {{#orgName}}<span class="sub-name org-name">{{orgName}}</span>{{/orgName}} </span> <span class="counts" style="display:none"> <span class="count"> <span class="app-icon small-icon activity-icon"></span> <span class="number"></span> </span> </span> </a> ',
            board_menu: '<li><a class="js-board-preferences" href="#">Preferences</a></li> {{#__ed}} <li><a class="js-add-list" href="#">Add List</a></li> {{/__ed}} {{#showManageMembers}} <li><a class="js-manage-board-members" href="#">Add Members</a></li> {{/showManageMembers}} <li><a class="js-view-board-activity" href="#">View Board Activity</a></li> {{#__loggedIn}} {{#pinned}}<li><a class="js-board-unpin" href="#">Unpin from Header Menu</a></li>{{/pinned}} {{^pinned}}<li><a class="js-board-pin" href="#">Pin to Header Menu</a></li>{{/pinned}} {{/__loggedIn}} {{#__own}} <li><a class="js-close-board" href="#">Close Board</a></li> {{/__own}} ',
            browse: '<h1>Public Boards</h1> <div id="boards" class="bold-list"> </div> ',
            board_member_search_result: '<li class="member-list-item clearfix {{className}} {{#isInvitable}}invitable{{/isInvitable}} "> <div class="member"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="member-initials">{{initials}}</span> </div> <span class="name">{{fullName}} {{#username}}<span class="quiet">({{username}})</span>{{/username}}</span> <div class="status"></div> </li> ',
            board_members_manage: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon member-icon"></span> <h2 class="window-title">Add Members to Board</h2> </div> <div class="window-main-col"> <div class="gutter clearfix"> <input type="text" class="search-members" placeholder="Search by name or add email addresses" autofocus /> </div> <div class="gutter window-module"> <p class="helper"> Search for one or more existing users or add email addresses for new users, separating entries with a comma. Select users by clicking one or more and adding to the list. Click the green Invite button beneath the list to send the invitation or invitations. </p> </div> <div class="no-results gutter quiet">No results.</div> <ul class="search-results"></ul> <div class="window-module gutter"> <input type="submit" value="Invite" class="primary js-send-invitations"/> </div> <div class="window-module clearfix"> <div class="window-module-title"> <span class="app-icon invitation-icon"></span> <h3>Pending Invitations</h3> </div> <div class="invited-members"> </div> </div> </div> <div class="window-sidebar"> <div class="window-module clearfix"> <h3>Members</h3> <div class="active-members clearfix"> </div> </div> </div> ',
            board_permissions: '<span title="{{altText}}" class="app-icon small-icon public-status {{permissionLevel}}-icon"></span> ',
            board_new: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon board-icon" href="#"></span> <h2 class="window-title">New Board</h2> </div> <div class="window-main-col"> <form class="gutter"> <h3>Title</h3> <input type="text" name="board-title" class="non-empty" placeholder="Untitled Board" autofocus> <h3>Add to Organization</h3> {{^canAddToOrgs}} <p style="margin-bottom: 16px;" class="quiet"> Organizations make sharing and working within a group even easier. It doesn\'t look like you are a member of any organizations. <a href="/org/create">Create an organization?</a> </p> {{/canAddToOrgs}} {{#canAddToOrgs}} <select name="org-id"> <option value="">(none)</option> {{#orgs}} <option value="{{_id}}"{{#select}} selected{{/select}}>{{displayName}}</option> {{/orgs}} </select> <p style="margin-bottom: 16px;" class="clear helper"> Organizations make sharing and working within a group even easier. <a href="/org/create">Create an organization.</a> </p> {{/canAddToOrgs}} <h3>Visibility</h3> <div class="pref clearfix" style="margin-left: 0;"> <input type="hidden" name="permissionLevel" value="{{^hasOrg}}private{{/hasOrg}}{{#hasOrg}}org{{/hasOrg}}" /> <ul class="pref-options left user clearfix"> <li> <a class="first {{^hasOrg}}active{{/hasOrg}}" value="private">Members</a> </li> {{#canAddToOrgs}} <li> <a class="{{^hasOrg}}disabled{{/hasOrg}} {{#hasOrg}}active{{/hasOrg}}" value="org">Organization</a> </li> {{/canAddToOrgs}} <li> <a class="last" value="public">Public</a> </li> </ul> </div> <p style="margin-bottom: 16px;" class="clear helper"> Choosing \'Members\' will make the board visible only to those invited to the board. {{#canAddToOrgs}} If you select an organization in the above section, choosing \'Organization\' here will make the board visible to those in the selected organization. {{/canAddToOrgs}} Choosing \'Public\' will make the board visible to all Trello users. </p> <div class="clear"> <input type="submit" class="primary js-submit-okay" value="Create New Board"> <input type="submit" class="cancel js-submit-cancel" value="Cancel"> </div> </form> </div> <div class="window-sidebar"> </div> ',
            board_widget_menu: '{{#visible}} <li><a class="js-hide" href="#">Hide</a></li> {{/visible}} {{^visible}} <li><a class="js-show" href="#">Show{{#isShowAll}} All{{/isShowAll}}</a></li> {{/visible}} {{^isShowAll}} <li><a class="js-hide-all" href="#">Hide All</a></li> {{/isShowAll}} ',
            board_prefs: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon preferences-icon" href="#"></span> <h2 class="window-title">Preferences</h2> </div> <div class="window-main-col"> <div class="window-module{{^__own}} js-disabled {{/__own}}"> <div class="window-module-title"> <h3>Features</h3> </div> <div class="pref clearfix" name="voting"> <h4>Voting</h4> <ul class="pref-options {{#__own}} own {{/__own}} clearfix"> <li> <a class="first{{#voting_none}} active{{/voting_none}}" value="none">Disabled</a> </li> <li> <a class="{{#voting_members}} active{{/voting_members}}" value="members">Members</a> </li> {{#hasOrg}} <li> <a class="{{#voting_org}} active{{/voting_org}} {{#permissionLevel_private}} disabled{{/permissionLevel_private}}" value="org">Organization</a> </li> {{/hasOrg}} <li> <a class="last{{#voting_public}} active{{/voting_public}} {{#permissionLevel_private}} disabled{{/permissionLevel_private}} {{#permissionLevel_org}} disabled{{/permissionLevel_org}}" value="public">Public</a> </li> </ul> </div> <div class="pref clearfix" name="comments"> <h4>Comments</h4> <ul class="pref-options {{#__own}} own {{/__own}} clearfix"> <li> <a class="first {{#comments_none}} active{{/comments_none}}" value="none">Disabled</a> </li> <li> <a class="{{#comments_members}} active{{/comments_members}}" value="members">Members</a> </li> {{#hasOrg}} <li> <a class="{{#comments_org}} active{{/comments_org}} {{#permissionLevel_private}} disabled{{/permissionLevel_private}}" value="org">Organization</a> </li> {{/hasOrg}} <li> <a class="last{{#comments_public}} active{{/comments_public}} {{#permissionLevel_private}} disabled{{/permissionLevel_private}} {{#permissionLevel_org}} disabled{{/permissionLevel_org}}" value="public">Public</a> </li> </ul> </div> <div class="pref clearfix" name="invitations"> <h4>Invitations</h4> <ul class="pref-options {{#__own}} own {{/__own}} clearfix"> <li> <a class="first {{#invitations_owners}}active{{/invitations_owners}}" value="owners">Owners</a> </li> <li> <a class="last {{#invitations_members}}active{{/invitations_members}}" value="members">Members</a> </li> </ul> </div> <div class="pref clearfix" name="permissionLevel"> <h4>Visibility</h4> <ul class="pref-options {{#__own}} own {{/__own}} clearfix"> <li> <a class="first{{#permissionLevel_private}} active{{/permissionLevel_private}}" value="private">Members</a> </li> {{#hasOrg}} <li> <a class="{{#permissionLevel_org}} active{{/permissionLevel_org}}" value="org">Organization</a> </li> {{/hasOrg}} <li> <a class="last{{#permissionLevel_public}} active{{/permissionLevel_public}}" value="public">Public</a> </li> </ul> </div> {{^__own}} <p class="helper gutter"> You need to be a board owner to edit the feature preferences. </p> {{/__own}} </div> <div class="window-module set-org"> <div class="window-module-title"> <h3>Organization</h3> </div> {{#hasOrg}} <div class="pref {{#__own}} own {{/__own}} clearfix" name="organization"> <p style="margin: 12px 0 8px;">{{#org}}{{displayName}}{{/org}}</p> </div> {{/hasOrg}} {{#__own}} {{^hasOrg}} <div class="pref clearfix" name="organization"> <h4>Add to Organization</h4> <select style="float: right; margin: 6px 0 0;"> <option value="----">(none)</option> {{#orgs}} <option value="{{id}}">{{displayName}}</option> {{/orgs}} </select> </div> {{/hasOrg}} {{/__own}} {{^hasOrg}} {{^__own}} <div class="pref"> <p style="padding-top: 8px;">This board is not part of an organization.</p> </div> {{/__own}} {{/hasOrg}} {{^__own}} <p class="helper gutter"> You need to be a board owner and a member of an organization to add a board to an organization. </p> {{/__own}} </div> <div class="window-module card-labels-pref-section {{#__own}} own {{/__own}}"> <div class="window-module-title"> <h3>Labels</h3> </div> {{#labelNames}} <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="green"> {{#green}}<h4 class="current hide-on-edit">{{green}}</h4>{{/green}} {{^green}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Green {{#__own}}(default){{/__own}}</a></h4>{{/green}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{green}}"> </div> {{/__own}} </div> <div class="card-label green-label"></div> </div> <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="yellow"> {{#yellow}}<h4 class="current hide-on-edit">{{yellow}}</h4>{{/yellow}} {{^yellow}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Yellow {{#__own}}(default){{/__own}}</a></h4>{{/yellow}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{yellow}}"> </div> {{/__own}} </div> <div class="card-label yellow-label"></div> </div> <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="orange"> {{#orange}}<h4 class="current hide-on-edit">{{orange}}</h4>{{/orange}} {{^orange}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Orange {{#__own}}(default){{/__own}}</a></h4>{{/orange}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{orange}}"> </div> {{/__own}} </div> <div class="card-label orange-label"></div> </div> <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="red"> {{#red}}<h4 class="current hide-on-edit">{{red}}</h4>{{/red}} {{^red}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Red {{#__own}}(default){{/__own}}</a></h4>{{/red}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{red}}"> </div> {{/__own}} </div> <div class="card-label red-label"></div> </div> <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="purple"> {{#purple}}<h4 class="current hide-on-edit">{{purple}}</h4>{{/purple}} {{^purple}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Purple {{#__own}}(default){{/__own}}</a></h4>{{/purple}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{purple}}"> </div> {{/__own}} </div> <div class="card-label purple-label"></div> </div> <div class="pref clearfix"> <div class="{{#__own}} editable {{/__own}}" attr="blue"> {{#blue}}<h4 class="current hide-on-edit">{{blue}}</h4>{{/blue}} {{^blue}}<h4 class="current hide-on-edit"><a class="quiet" {{#__own}}href="#"{{/__own}}>Blue {{#__own}}(default){{/__own}}</a></h4>{{/blue}} {{#__own}} <div class="edit"> <input type="text" class="field" value="{{blue}}"> </div> {{/__own}} </div> <div class="card-label blue-label"></div> </div> {{/labelNames}} {{^__own}} <p class="helper gutter"> You need to be a board owner to edit card label names. </p> {{/__own}} </div> <div class="window-module"> <div class="window-module-title"> <h3>Layout</h3> </div> <div class="pref clearfix" name="showSidebar"> <h4>Sidebar Widgets</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{#showSidebar_false}} active{{/showSidebar_false}}" value="false">Hide</a> </li> <li> <a class="last{{#showSidebar_true}} active{{/showSidebar_true}}" value="true">Show</a> </li> </ul> </div> <div class="pref clearfix" name="showSidebarMembers"> <h4 style="padding-left: 20px;">Members</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{#showSidebarMembers_false}} active{{/showSidebarMembers_false}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="false">Hide</a> </li> <li> <a class="last{{#showSidebarMembers_true}} active{{/showSidebarMembers_true}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="true">Show</a> </li> </ul> </div> {{#__ed}} <div class="pref clearfix" name="showSidebarBoardActions"> <h4 style="padding-left: 20px;">Board Actions</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{#showSidebarBoardActions_false}} active{{/showSidebarBoardActions_false}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="false">Hide</a> </li> <li> <a class="last{{#showSidebarBoardActions_true}} active{{/showSidebarBoardActions_true}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="true">Show</a> </li> </ul> </div> {{/__ed}} <div class="pref clearfix" name="showSidebarActivity"> <h4 style="padding-left: 20px;">Activity</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{#showSidebarActivity_false}} active{{/showSidebarActivity_false}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="false">Hide</a> </li> <li> <a class="last{{#showSidebarActivity_true}} active{{/showSidebarActivity_true}}{{#showSidebar_false}} disabled{{/showSidebar_false}}" value="true">Show</a> </li> </ul> </div> <div class="pref clearfix" name="showListGuide"> <h4>List Guide</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{#showListGuide_false}} active{{/showListGuide_false}}" value="false">Hide</a> </li> <li> <a class="last{{#showListGuide_true}} active{{/showListGuide_true}}" value="true">Show</a> </li> </ul> </div> <p class="helper gutter"> The List Guide is a collection of list titles that appears on the left side of the board when the total size of the lists is greater than the board size. It is intended to aid in navigation by visualizing all available lists when some lists on the board are hidden. Board layout preferences are per-user and per-board. </p> </div> </div> ',
            desktop_notification: '<div class="phenom"> <div class="member"> {{#member}} <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=20&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="member-initials">{{initials}}</span> {{/member}} </div> <div class="phenom-desc"> {{#entities}} {{>entity}} {{/entities}} </div> </div> ',
            boards_list_menu: '{{^pinned}}<li><a class="js-board-pin" href="#">Pin to Header Menu</a></li>{{/pinned}} {{#pinned}}<li><a class="js-board-unpin" href="#">Unpin from Header Menu</a></li>{{/pinned}} ',
            card_detail: '<div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> <div class="window-header clearfix"> <span class="app-icon card-icon" href="#"></span> <div class="card-detail-title {{#__ed}} editable {{/__ed}} " attr="name"> <h2 class="window-title current hide-on-edit"> {{name}} </h2> {{#__ed}} <div class="edit edit-heavy"> <textarea type="text" class="field single-line"></textarea> </div> {{/__ed}} </div> </div> <div class="window-main-col"> <div class="card-detail-metadata gutter"> <div class="quiet left js-current-list"></div> <div class="card-labels"> </div> <div class="clearfix"> <div class="badges"></div> </div> </div> <div class="window-main-col-content clearfix"> <div class="card-detail-desc window-module gutter clearfix {{#__ed}} editable {{/__ed}}" attr="desc"> <div class="current markeddown hide-on-edit bottom"{{^desc}} style="display:none"{{/desc}}></div> {{#__ed}} <p class="bottom"{{#desc}} style="display:none"{{/desc}}><a class="hide-on-edit js-edit-desc" href="#">Add card description.</a></p> <div class="card-detail-edit edit"> <p class="helper"><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank">Markdown</a> accepted</p> <textarea class="field" /> </div> {{/__ed}} </div> <div class="due-date window-module clearfix"></div> <div class="checklists window-module clearfix no-edits"></div> <div class="window-module"> <div class="window-module-title no-divider"> <span class="app-icon activity-icon"></span> <h3>Activity</h3> </div> {{#canComment}} <div class="comment"> <p class="helper">Control + Enter adds automatically</p> <textarea class="comment-text" placeholder="Add comment" /> <div class="add-controls clearfix"> <input type="submit" class="primary confirm js-add-comment" value="Add Comment"> <input type="submit" class="cancel js-cancel-comment app-icon close-icon" value="Cancel"> </div> </div> {{/canComment}} <div class="list-actions"></div> {{#loading}} <p class="loading js-loading-card-actions">Loading...</p> {{/loading}} </div> </div> </div> <div class="window-sidebar"> <div class="window-module vote-widget clearfix"> </div> <div class="window-module clearfix"> <h3>Members</h3> <div class="card-detail-members clearfix"></div> <p class="no-mems empty hide">No members assigned</p> {{#__ed}} <a class="button-link highlight-icon js-change-card-members"> <span class="app-icon light-hover small-icon member-icon"></span> Assign&hellip; </a> {{/__ed}} </div> <div class="window-module clearfix attachments"> <h3>Attachments</h3> <ul class="attachment-list"></ul> <p class="no-attachments empty hide">No attachments</p> {{#__ed}} <div class="uploader"> <form class="realfile" action="/api/card/{{id}}" method="post" enctype="multipart/form-data"> <input type="hidden" name="token" value="" /> <input type="hidden" name="method" value="attachFile" /> <input type="hidden" name="format" value="http" /> <input type="file" name="upload" class="js-attach-file" tabindex="-1" /> </form> <a class="fakefile button-link"> <span class="app-icon small-icon attachment-icon"></span> Upload </a> </div> <p class="error js-file-too-large" style="display:none; border-radius: 3px; -moz-border-radius: 3px; -webkit-border-radius: 3px; font-weight: bold; margin: 8px 0 0; padding: 6px; background: #e3e3e3; ">File too large. 10mb limit.</p> {{/__ed}} </div> {{#__ed}} <div class="window-module clearfix"> <h3>Actions</h3> <div class="clearfix"> <a class="button-link highlight-icon js-add-checklist"> <span class="app-icon light-hover small-icon checklist-icon"></span> Add checklist </a> <a class="button-link highlight-icon js-add-due-date"> <span class="app-icon light-hover small-icon date-icon"></span> Add due date&hellip; </a> <a class="button-link highlight-icon js-edit-labels"> <span class="app-icon light-hover small-icon label-icon"></span> Labels&hellip; </a> <a class="button-link highlight-icon js-move-card"> <span class="app-icon light-hover small-icon move-icon"></span> Move&hellip; </a> <a class="button-link highlight-icon js-close-card"> <span class="app-icon light-hover small-icon archive-icon"></span> Archive </a> <a class="button-link highlight-icon js-reopen-card"> <span class="app-icon light-hover small-icon reopen-icon"></span> Send to Board </a> </div> </div> {{/__ed}} </div> ',
            card_detail_date: '<div class="window-module-title no-divider"> <span class="app-icon date-icon"></span> {{#__ed}} <h3 class="inline">Due <a href="#" class="js-change-due-date">{{dateText}}</a></h3> {{/__ed}} {{^__ed}} <h3 class="inline">Due {{dateText}}</h3> {{/__ed}} {{#isDueSoon}} <span title="The card is due soon." class="due-status soon">due soon</span> {{/isDueSoon}} {{#isLate}} <span title="This card is late!" class="due-status late">late!</span> {{/isLate}} </div> ',
            card_detail_list: '<p class="inline-block" style="margin: 0 16px 10px 0;">in list <strong>{{listName}}</strong></p> ',
            card_edit_labels: '<ul class="edit-labels-pop-over{{#showShortcuts}} show-shortcuts{{/showShortcuts}}"> {{#labels}} <li> <a class="card-label {{color}}-label {{#isActive}}active{{/isActive}}" label="{{color}}"> {{#name}}<span>{{name}} </span>{{/name}} {{#shortcut}}<span class="shortcut"> ({{shortcut}}) </span>{{/shortcut}} <span class="app-icon small-icon label-icon"> </span> </a> </li> {{/labels}} </ul> <p class="helper"> Click label to add or remove. </p> ',
            card_in_list: '<div class="list-card-wrapper js-member-droppable"> <div class="card-labels"> {{#labels}} {{#isActive}} <div class="card-label {{color}}-label"> </div> {{/isActive}} {{/labels}} </div> {{#__ed}} <a class="card-operation js-card-menu" title="Card Menu" href="#"> <span class="app-icon dark-hover small-icon menu-icon"></span> </a> {{/__ed}} <h3 class="list-card-title"> <a href="{{url}}">{{name}}</a> <span class="list-card-votes hide"></span> <span class="card-complete app-icon small-icon vote-icon light hide"></span> </h3> <div class="badges clearfix"></div> <div class="list-card-members"></div> </div> ',
            card_inline: '<a href="{{cardUrl}}" class="inline-object"{{#nameTruncated}} title="{{name}}"{{/nameTruncated}}> {{#nameTruncated}}{{nameTruncated}}...{{/nameTruncated}} {{^nameTruncated}}{{name}}{{/nameTruncated}} </a> ',
            card_menu_popover: '<ul class="pop-over-list"> <li> <a class="js-change-card-members" href="#">Assign Members&hellip;</a> </li> <li> <a class="js-edit-labels" href="#">Labels&hellip;</a> </li> <li> <a class="js-move-card" href="#">Move&hellip;</a> </li> <li> <a class="js-close-card" href="#">Archive</a> </li> </ul> ',
            check_item: '<div class="checkbox {{#__ed}}enabled{{/__ed}}">&#x2713;</div> <div class="check_item_text {{#__ed}}editable{{/__ed}}" attr="name"> <p class="current hide-on-edit">{{name}}</p> {{#__ed}} <div class="edit delete convert"> <input type="text" class="field single-line"></input> </div> {{/__ed}} </div> ',
            checkitem_inline: ' checklist item "{{name}}" ',
            checklist: '<div class="window-module-title no-divider"> <span class="app-icon checklist-icon"></span> {{#__ed}} <div class="editable checklist-title" attr="name"> <h3 class="current hide-on-edit">{{name}}</h3> <div class="edit delete edit-heavy"> <input type="text" class="field single-line"></input> </div> </div> {{/__ed}} {{^__ed}} <h3>{{name}}</h3> {{/__ed}} </div> <div class="tasks no-edits"> <div class="task-progress-total gutter"> <div class="progress-current" style="width: 0%"> <span class="progress-percentage">0%</span> </div> </div> <div class="task-list"></div> {{#__ed}} <div class="new-task gutter"> <input type="text" class="new-task-text" placeholder="Add checklist item"> <div class="add-controls clearfix"> <input type="submit" class="primary confirm js-add-checklist-item" value="Add Checklist Item"> <input type="submit" class="cancel js-cancel-checklist-item app-icon close-icon" value="Cancel"> </div> </div> {{/__ed}} </div> ',
            checklist_add_menu: ' <h3>New Checklist</h3> <input class="filter filter-members" type="text" value="Checklist" autofocus> <input type="submit" class="primary confirm js-add-checklist" value="Add"> <input type="submit" class="cancel js-cancel-checklist close-icon" value="Cancel"> <div style="margin-top: 16px;"> <hr> <h3 style="margin-top: 16px;">Use a Saved Checklist</h3> <ul class="pop-over-list"> <li> <a> Checklist 1 </a> <p class="quiet" style="margin-top: 2px;"> {date} - <a href="#">(delete)</a> </p> </li> <li> <a> Checklist 2 </a> <p class="quiet" style="margin-top: 2px;"> {date} - <a href="#">(delete)</a> </p> </li> </ul> </div> ',
            checklist_inline: ' checklist "{{name}}" ',
            date_picker: '<form class="dpicker-widget clearfix"> <input type="text" class="hide js-fuzzy-dt" placeholder="Fuzzy dates like \'next week\' or \'tomorrow at 7pm\'"> <div class="dt clearfix"> <div class="date"> <p style="margin-bottom: 4px;"> <strong>Date</strong> </p> <input type="text" class="js-dpicker-date-input" placeholder="Enter date"> </div> <div class="time"> <p style="margin-bottom: 4px;"> <strong>Time</strong> </p> <input type="text" class="js-dpicker-time-input" placeholder="Enter time" value="12:00pm"> <select class="js-dpicker-time-select"></select> </div> </div> <div class="pickers"> <div class="js-dpicker-cal"></div> </div> <div class="dpicker-confirm-btns clearfix"> <input type="submit" class="primary confirm js-save-edit" value="Save"> <input type="submit" class="cancel js-cancel-edit" value="Cancel"> {{#hasDueDate}} <a href="#" class="button negate remove-date js-remove-date">Remove</a> {{/hasDueDate}} </div> </form> ',
            list_guide_link: '<div class="list-link"> <p class="list-link-header"> <span class="app-icon small-icon list-icon"></span> <span class="list-link-name">{{list_name}}</span> </p> <p class="list-link-sub"> <span class="list-link-count">{{list_card_count}}</span> cards </p> </div> ',
            edit_controls: '<div class="edit-controls clearfix"> <input type="submit" class="primary confirm js-save-edit" value="Save"> <input type="submit" class="cancel js-cancel-edit app-icon close-icon" value="Cancel"> <a href="#" class="option delete js-delete-item">Delete</a> <a href="#" class="option convert js-convert-item-to-card">Convert to Card</a> </div> ',
            embedly: '\ufeff<div class="embed embed-{{type}} embed-provider-{{provider_name}}"> {{^type_photo}} {{#requireHttps}}{{{htmlHttps}}}{{/requireHttps}}{{^requireHttps}}{{{html}}}{{/requireHttps}} {{/type_photo}} {{#type_photo}} <a href="{{originalUrl}}" target="_blank"><img src="{{url}}" /></a> {{/type_photo}} </div> ',
            entity: ' {{#textType}} {{#isContext}} {{^hideIfContext}} {{text}} {{/hideIfContext}} {{/isContext}} {{^isContext}} {{text}} {{/isContext}} {{/textType}} {{#cardType}} {{#isContext}} {{^hideIfContext}} this card {{/hideIfContext}} {{/isContext}} {{^isContext}} <a href="{{url}}" class="inline-object action-card">{{name}}</a> {{/isContext}} {{/cardType}} {{#boardType}} {{#isContext}} this board {{/isContext}} {{^isContext}} <a href="{{url}}" class="inline-object">{{name}}</a> {{/isContext}} {{/boardType}} {{#organizationType}} {{#isContext}} this organization {{/isContext}} {{^isContext}} <a href="{{url}}" class="inline-object">{{name}}</a> {{/isContext}} {{/organizationType}} {{#listType}} {{name}} {{/listType}} {{#checklistType}} {{name}} {{/checklistType}} {{#checkItemType}} {{name}} {{/checkItemType}} {{#commentType}} <div class="action-comment">{{{html}}}</div> {{/commentType}} {{#labelType}} <span class="card-label {{color}}-label"> {{#text}}{{text}}{{/text}} {{^text}}&nbsp;{{/text}} </span> {{/labelType}} {{#attachmentType}} {{#link}} <a href="{{url}}" target="_blank">{{name}}</a> {{/link}} {{^link}} <span class="attachment-deleted">{{name}}</span> {{/link}} {{/attachmentType}} {{#attachmentPreviewType}} {{#showAttachmentPreview}} {{#canPreview}} {{#isImage}}<img class="attachment-image-preview" src="{{url}}" />{{/isImage}} {{^isImage}}<iframe class="attachment-non-image-preview" src="{{url}}" ></iframe>{{/isImage}} {{/canPreview}} {{/showAttachmentPreview}} {{/attachmentPreviewType}} {{#memberType}} {{^noAvatar}} <span class="inline-member"> <img class="inline-member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=14&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="inline-member-initials">{{initials}}</span> </span> {{/noAvatar}} {{^compact}} <span class="bold">{{fullName}}</span> {{/compact}} {{/memberType}} ',
            error: '{{#notFound}} <div class="big-message"> <p> Not found. </p> </div> {{/notFound}} {{#boardNotFound}} <div class="big-message"> <p> Board not found. </p> </div> {{/boardNotFound}} ',
            filter_cards: '<ul class="card-filter"> {{#labelNames}} <li> <a href="#" class="js-filter-toggle green-label clearfix {{#activeGreen}}active{{/activeGreen}}"> <span class="card-label green-label"></span> <span class="title"> {{#green}} {{green}} {{/green}} {{^green}} <span class="quiet">Green label (default)</span> {{/green}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> <li> <a href="#" class="js-filter-toggle yellow-label clearfix {{#activeYellow}}active{{/activeYellow}}"> <span class="card-label yellow-label"></span> <span class="title"> {{#yellow}} {{yellow}} {{/yellow}} {{^yellow}} <span class="quiet">Yellow label (default)</span> {{/yellow}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> <li> <a href="#" class="js-filter-toggle orange-label clearfix {{#activeOrange}}active{{/activeOrange}}"> <span class="card-label orange-label"></span> <span class="title"> {{#orange}} {{orange}} {{/orange}} {{^orange}} <span class="quiet">Orange label (default)</span> {{/orange}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> <li> <a href="#" class="js-filter-toggle red-label clearfix {{#activeRed}}active{{/activeRed}}"> <span class="card-label red-label"></span> <span class="title"> {{#red}} {{red}} {{/red}} {{^red}} <span class="quiet">Red label (default)</span> {{/red}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> <li> <a href="#" class="js-filter-toggle purple-label clearfix {{#activePurple}}active{{/activePurple}}"> <span class="card-label purple-label"></span> <span class="title"> {{#purple}} {{purple}} {{/purple}} {{^purple}} <span class="quiet">Purple label (default)</span> {{/purple}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> <li> <a href="#" class="js-filter-toggle blue-label clearfix {{#activeBlue}}active{{/activeBlue}}"> <span class="card-label blue-label"></span> <span class="title"> {{#blue}} {{blue}} {{/blue}} {{^blue}} <span class="quiet">Blue label (default)</span> {{/blue}} </span> <span class="app-icon small-icon light close-icon"></span> </a> </li> {{/labelNames}} {{#boardMems}} <li> <a href="#" class="js-filter-toggle filter-member-toggle assigned-to-{{username}} clearfix {{#activeMem}}active{{/activeMem}}"> <div class="member"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=18&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}} ({{username}})" title="{{fullName}} ({{username}})" /> <p class="member-initials" title="{{fullName}} ({{username}})"> {{initials}} </p> </div> <p class="title"> {{fullName}} <span class="quiet">({{username}})</span> <span class="app-icon small-icon light close-icon"></span> </p> </a> </li> {{/boardMems}} <li> <a href="#" class="js-filter-toggle clear-all clearfix"> <span class="title quiet">Clear all</span> </a> </li> </ul> ',
            invitation: '<div class="phenom invitation"> {{#MemberInviter}} <div class="member"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="member-initials">{{initials}}</span> </div> {{/MemberInviter}} <div class="phenom-desc"> {{#MemberInviter}} <p> <span class="phenom-author"> {{fullName}} </span> created an invitation to </p> {{/MemberInviter}} <span class="invitee"> {{#MemberInvited}}{{>member_inline}}{{/MemberInvited}} {{^MemberInvited}}{{email}}{{^email}}someone new{{/email}}{{/MemberInvited}} </span> </div> <div class="phenom-meta quiet"> {{#dateExpires}} <p class="expiration-date">Expires <span class="date" dt="{{dateExpires}}"></span></p> {{/dateExpires}} {{#canRemove}} <p>- <a href="#" class="js-remove-invitation">Delete Invite</a></p> {{/canRemove}} </div> </div> ',
            label: '<span class="card-label {{color}}-label"> {{#name}}{{name}}{{/name}} {{^name}}&nbsp;{{/name}} </span> ',
            landing: '<script type="text/javascript"> if(!window.unsupported && $){ $.getScript(\'https://use.typekit.com/abf0ews.js\', function(){ try{Typekit.load();}catch(e){}; }); } <\/script> <div class="markeddown landing-section landing-header"> <div class="landing-section-wrapper pitch-section clearfix"> <div class="landing-block pitch-block clearfix"> <img title="Trello logo" src="https://d2k1ftgv7pobq7.cloudfront.net/images/landing/a95de282f7f781f211a25a7b8f3fc706/logo-tag.png"> <h1>Trello</h1> <h2>Organize anything, together.</h2> <p class="pitch"> Trello is a collaboration tool that organizes your projects into boards. In one glance, Trello tells you what\'s being worked on, who\'s working on what, and where something is in a process. </p> <a class="button primary" href="/signup">Create an Account</a> <p> Creating an account is free and easy. </p> </div> <div class="landing-block video-block clearfix"> <div class="video-block-wrapper"> <iframe width="100%" height="100%" src="https://www.youtube.com/embed/aaDf1RqeLfo?rel=0&hd=1&wmode=transparent&modestbranding=1&autohide=1&showinfo=0&fs=1" frameborder="0" allowfullscreen wmode="Opaque"></iframe> </div> </div> </div> </div> <div class="markeddown landing-section"> <div class="landing-section-wrapper clearfix"> <div class="landing-headline"> <h2>The Good Stuff</h2> <p> What will Trello do for you? </p> </div> <div class="landing-block"> <h3>Overview</h3> <p> All your projects, all your tasks, all of your team--organized, accounted for, and easily visible at a glance. New users instantly understand the list and card metaphor, and can be working on Trello within minutes. </p> </div> <div class="landing-block"> <img alt="Board example" src="https://d2k1ftgv7pobq7.cloudfront.net/images/landing/cf0a8cd58e40aa0a821445eddee270af/board.png"> </div> <div class="landing-block"> <h3>Boards</h3> <p> A board is a just a collection of lists (and lists hold the cards). You\u2019ll probably want a board for each project you\u2019re working on. You can add and start using a new board in seconds. You can glance at a board and get a handle on the status of any project. </p> </div> <div class="landing-block"> <h3>Lists</h3> <p> Lists can be just simple lists, but they are most powerful when they represent a stage in a process. Simply drag your lists into place to represent your workflow. Move a card from one list to the next to show your progress. </p> </div> <div class="landing-block"> <h3>Cards</h3> <p> Cards are tasks. You make a card to track something you or your team needs to get done. You can add attachments, embed video, assign users, add due dates, make checklists, or you can just add your card to a board with no fuss and no overhead, and know exactly what work needs to get done. </p> </div> <div class="landing-block"> <img alt="Card example" src="https://d2k1ftgv7pobq7.cloudfront.net/images/landing/46834978dc1086d1b3683a2fa26728c0/card.png"> </div> <div class="landing-block"> <h3>Real Time Updates</h3> <p> Trello instantly updates. No refreshing is ever required, and everyone on the team sees all updates and actions immediately. Try it! </p> </div> <div class="landing-block"> <h3>Members and Organizations</h3> <p> You have control over board permissions. You can make a board that your company and team can see, or you can restrict it to specific people. You can invite your whole company with one invite, or you can supply a list of emails. Either way, adding lots of people to your or your organization\u2019s boards is simple. </p> </div> <div class="landing-block"> <h3>Works on all devices</h3> <p> Trello works on everything! It\u2019s web based and made to go mobile if you need to. Nothing to install. Nothing to update. Just go to Trello. </p> </div> <div class="landing-block"> <h3>Notifications</h3> <p> You won\u2019t miss a thing. Trello lets you know when you receive lavish praise in the comments, when someone does something to a card you\u2019re assigned to, or sends you a board invite. With the updates column you can see exactly what\u2019s happening on the board as it is happening. </p> </div> <div class="landing-block"> <h3>Public Boards</h3> <p> Make a public board and let your customers see your roadmap or your current priorities. Allow public commenting and voting, making it perfect for new feature requests, or to decide amongst your friends where to take your next vacation. </p> </div> <div class="landing-block"> <h3>Solid Security</h3> <p> Everything in Trello is secure. All traffic runs over SSL which encrypts all of your traffic. Trello is backed up hourly, so you\u2019re in no danger of losing important lists or tasks. </p> </div> <div class="landing-block"> <h3>Embed it all!</h3> <p> Upload attachments, embed video, add images, Twitter previews, and so on. </p> </div> <div class="landing-block"> <h3>Hey, pay attention!</h3> <p> If you need to get someone else\u2019s attention, just address them like \u201c@bob\u201d and they will get a notification. </p> </div> </div> </div> <div class="markeddown landing-section"> <div class="landing-section-wrapper clearfix"> <div class="landing-headline"> <h2>Suggested Uses</h2> <p> You\'ll likely customize your board to your workflow, but here are some potential starting points. </p> </div> <div class="landing-block"> <h3>Event Planning</h3> <p> Use Trello to organize a wedding, hiking trip, or tropical vacation. Keep track of supplies, florists, hotels, photographers, venues, rental cars, or DJs. See what\'s been booked and what\'s been confirmed. Invite fellow organizers and participants and keep them in the loop. </p> <p> <strong> Lists: </strong> Researching, Booked, Confirmed </p> </div> <div class="landing-block"> <h3>Software Development</h3> <p> Get the big picture. See whether a feature is just starting to be designed or about to be shipped. Work privately on your stealth start-up, or make a board public and let users vote and comment on features. </p> <p> <strong> Lists: </strong> Ideas, Design, Development, Implemented, Live </p> </div> <div class="landing-block"> <h3>Personal To-Dos</h3> <p> Ditch your scattered notebooks, sticky notes, and text files. Use Trello for keeping track of grocery items, errands, or house work. </p> <p> <strong> Lists: </strong> To Do, Doing, Done </p> </div> <div class="landing-block"> <h3>Publishing</h3> <p> Assign writers to story leads. Keep track of research files like press releases. Comment and discuss writing. See what\'s ready to be published and what\'s breaking. </p> <p> <strong> Lists: </strong> Lead, Research, Writing, Editing, Published </p> </div> <div class="landing-block"> <h3>Recruiting</h3> <p> The hiring process can be long and difficult to manage. Keep track of whether candidates have received a phone screen or an interview, assign team members to do an interview, and discuss potential employees. </p> <p> <strong> Lists: </strong> Resume, Phone Screen, Interview, Decision </p> </div> <div class="landing-block"> <h3>Freelance and Consulting</h3> <p> Manage clients and engagements. Upload wireframes, reports, and reviews. </p> <p> <strong> Lists: </strong> Leads, Communicated, In Progress, Review, Complete </p> </div> <div class="landing-block"> <h3>Sales</h3> <p> Quickly visualize every section of your sales pipeline. See who is managing what accounts and how far along they are. </p> </div> <div class="landing-block"> <h3>Customer Support</h3> <p> Respond to customer inquiries by referring to your organization\'s boards. Organize customer inquiries and calls. Schedule engagements, assign team members, and keep everybody up to date on progress. </p> </div> </div> </div> <div class="markeddown landing-section landing-footer"> <div class="landing-section-wrapper clearfix"> <p>Read the <a href="http://blog.trello.com">Trello Blog</a>.</p> <p>Follow @trelloapp on Twitter <a href="https://twitter.com/trelloapp">here</a>.</p> </div> </div> <div class="markeddown landing-section landing-footer"> <div class="landing-section-wrapper clearfix"> <p>Made in New York City by Fog Creek Software</p> <a href="http://www.fogcreek.com/?fccmp=trello_landing" title="Fog Creek Software"> <img src="https://d2k1ftgv7pobq7.cloudfront.net/images/5328bfe21f2e6cfd016b4e3a3141aa7c/fog_creek_logo.png"> </a> </div> </div> ',
            "list-menu": '{{#__ed}} <li><a class="js-close-list" href="#">Archive This List</a></li> {{/__ed}} ',
            list: '<div class="list-wrapper"> <div class="list-header clearfix"> <span class="app-icon small-icon list-icon"></span> <div class="list-title {{#__ed}} editable {{/__ed}} clearfix" attr="name"> <h2 class="hide-on-edit current">{{name}}</h2> {{#__ed}} <div class="edit edit-heavy clearfix"> <textarea type="text" class="field single-line"></textarea> </div> {{/__ed}} {{#__ed}} <a href="#" class="app-icon small-icon dark-hover menu-icon js-open-list-menu"></a> {{/__ed}} </div> </div> <div class="list-card-area"> <div class="list-gradient-top"></div> <div class="list-gradient-bottom"></div> <div class="list-cards fancy-scrollbar clearfix {{#__ed}}js-sortable{{/__ed}}"></div> </div> {{#__ed}} <form class="add-list-card js-add-list-card clearfix"> <textarea class="new-card" placeholder="Add card"></textarea> <input type="submit" class="primary js-add-card" value="Add"> <input type="submit" class="cancel js-cancel-add-card app-icon close-icon" value="Cancel"> </form> {{/__ed}} </div> ',
            manual_glossary: "<div class=\"markeddown glossary\"> <div class=\"term\"> <span class=\"term-icon app-icon attachment-icon\"></span> <h3>Attachment</h3> <p> Card attachments are files uploaded to cards. Attachments appear in the 'Attachments' section of the card detail. Click the 'Upload' button in the Attachments section of the card detail to upload. On newer versions of Chrome and Safari, you can simply drag the file from your desktop to the upload button. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon board-icon\"></span> <h3>Board</h3> <p> Conceptually, a board is a product, project, resource, or organizational structure that is under continuous development, though a board can have a variety of uses and mean different things. Boards have a collections of lists, and lists contain cards. </p> <p> You can create new boards by clicking the boards menu in the header and selecting 'New Board' or by clicking 'Add Board' in your boards page or an organization's profile page. Close boards by selecting 'Close Board' from the board menu (the <span class=\"app-icon small-icon board-icon\"></span> icon by the board title). </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon card-icon\"></span> <h3>Card</h3> <p> Cards are the basic unit of a board. They might represent new software features, story leads, legal cases, things to buy at the store, freelance clients, potential employees, or customer support issues. Drag cards from list to list to indicate progression. You can add people to cards, label them, vote, attach files, start conversations, create task checklists, and so on. </p> <p> Add cards via the 'Add Card' input at the bottom of lists. Archive cards by hovering over them and clicking the archive icon (<span class=\"app-icon small-icon archive-icon\"></span>) that appears, hovering over the card and pressing 'c', or clicking 'Archive Card' in the Actions menu in card detail (enter the card detail by clicking on the card). Reopen a card by clicking 'Cards' from the 'View Archive' button and clicking 'Send to Board'. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon card-icon\"></span> <h3>Card Filters</h3> <p> You can filter cards on a board by label and members. Filters are applied per member then by selected labels. For example, if you select 'Bobby' and 'Daniel' and the 'Red' and 'Yellow' labels, the filter highlights cards assigned to either Daniel or Bobby (or both) that have at least one of the red or yellow labels. If you select one or more labels, but no members, the filter highlights cards with any of the selected labels, i.e. all red-labeled, yellow-labeled, or red-and-yellow-labeled cards. If you select one or more members, but no labels, the filter highlights cards with any of the selected members, i.e. all cards assigned to 'Daniel', 'Bobby', or both. </p> <p> Apply filters using the 'Filter Cards...' button on the board sidebar, then selecting a combination of labels and members. Clear all filters using the the 'clear all' button in the pop-over menu or by using the 'f' keyboard shortcut. To filter only your cards, using the 'q' keyboard shortcut. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon checklist-icon\"></span> <h3>Checklist</h3> <p> A checklist is a way of keeping track of subtasks within a card. You can add multiple checklists to a single card. </p> <p> Add Checklists via the 'Add Checklist' button in the 'Actions' section of the card detail. Add new checklist items via the 'Add checklist item' input in a checklist. Mark an item as complete or incomplete by clicking the checkbox to the left of the title. Rename a checklist or checklist item by clicking the title, changing the text, and clicking save. Delete a checklist or checklist item by clicking on the title and clicking 'Delete' on the righthand side. You can also turn a checklist item into a card by clicking the item and selecting 'Convert to Card'. It removes the item and creates a card with the title of the item beneath the current card. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon comment-icon\"></span> <h3>Comment</h3> <p> You can add comments to a card via the 'Add Comment' textbox in the 'Activity' section of the card detail. You can mention people in comments by using '@' followed by the user's name. </p> <p> You can disable comments via the board preferences page in the board menu (the <span class=\"app-icon small-icon board-icon\"></span> icon by the board title). On public boards, you can enable or disable public comments via the board preferences page. </p> </div> <div class=\"term\"> <h3>Description</h3> <p> A card has an optional description field. You can edit the description on card detail. <a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">Markdown</a> is used for formatting. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon date-icon\"></span> <h3>Due Date</h3> <p> You can add or change a due date for a card by entering 'due mm/dd/[yy]yy' as a comment. A badge with the due date will appear on cards. A yellow badge means it's due tomorrow. A red badge means it's past due. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon label-icon\"></span> <h3>Label</h3> <p> A label is a way of categorizing a card by type, represented by a color. Labels can be named in the board preferences. A single card can have multiple labels. Add labels via the card detail 'Labels&hellip;' button. You can also add labels by hovering over a card and clicking 'l' to bring up a pop-over menu of available labels. Toggle an individual label by hovering over a card and pressing numbers between 1 and 6. Individual label shortcuts are mapped below. </p> <table> <thead> <tr> <th>Key</th> <th>Label Color</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>Green</td> </tr> <tr> <td>2</td> <td>Yellow</td> </tr> <tr> <td>3</td> <td>Orange</td> </tr> <tr> <td>4</td> <td>Red</td> </tr> <tr> <td>5</td> <td>Purple</td> </tr> <tr> <td>6</td> <td>Blue</td> </tr> </tbody> </table> </div> <div class=\"term\"> <span class=\"term-icon app-icon list-icon\"></span> <h3>List</h3> <p> A list is collection of vertically-arranged cards. When using lists to represent different stages of a workflow, lists on the left are the start of a workflow and lists on right are the end, but you'll find many different uses for lists. </p> <p> Add a list to a board by clicking the 'Add List' button in the board sidebar. You can also add a list by selecting 'Add List' from the board menu (the <span class=\"app-icon small-icon board-icon\"></span> icon by the board title). You can also move lists easily by dragging left and right. Reopen a list by selecting 'View Archive' from the board sidebar, clicking 'List' in the sidebar, choosing a list and clicking 'Sent to Board'. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon org-icon\"></span> <h3>Organization</h3> <p> An organization is a way of grouping people and boards. A board belonging to an organization has a few extra preferences to restrict certain features such as comments and voting to organization members. </p> <p> You can create a new organization through your accounts page, with the \"Start an Organization\" button. While only admins of the organization can add/remove members and access the account page, the profile page, including a list of members, is publically visible. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon preferences-icon\"></span> <h3>Preferences</h3> <p> Open the board preferences from the board menu (the <span class=\"app-icon small-icon board-icon\"></span> icon by the board title). You can enable and disable features such as comments, voting, and invitations from this pane. You can also add card label titles from this pane. You can choose whether to make your board visible to the public, to an organization, or to only those that you invite. </p> </div> <div class=\"term\"> <h3>Visibility</h3> <p> You can set the visibility of boards to public, an organization, or private through the board preferences pane. Setting a board to public allows all members of Trello to view your board and optionally vote or comment. You can turn features on and off for public members via board preferences. </p> </div> <div class=\"term\"> <span class=\"term-icon app-icon vote-icon\"></span> <h3>Voting</h3> <p> People can vote on cards by clicking the 'Vote' button on card detail. The button will appear green if you have voted for the card. Clicking again will remove your vote. Hovering over a card and clicking 'v' will also add or remove a vote. </p> <p> Public boards can also allow for public users to vote on cards. Board members can turn off public voting in the board preferences page accessed via the board menu (the <span class=\"app-icon small-icon board-icon\"></span> icon by the board title). </p> </div> </div> ",
            list_inline: ' list "{{name}}" ',
            login_popover: '<form action="/authenticate" method="post"> {{#badLogin}} <p class="error">The username or password was incorrect.</p> {{/badLogin}} {{#unconfirmed}} <p class="error">You can\'t sign in until you <a href="/resendValidate">verify your email address</a>.</p> {{/unconfirmed}} <label for="email-login"> Email or username </label> <input type="email" name="user" id="email-login" value="{{email}}" autocomplete="off" autocorrect="off" spellcheck="false" autocapitalize="off"> <label for="password-login"> Password </label> <input type="password" name="password" id="password-login"> <input type="submit" class="primary js-password-login" value="Log In"> <p class="quiet" style="margin-top: 16px;"> <a href="/forgot"><strong>Forgot password?</strong></a> </p> <p class="quiet"> New? <a href="/signup{{#returnUrl}}?returnUrl={{returnUrl}}{{/returnUrl}}"><strong>Create an Account.</strong></a> </p> <input type="hidden" name="returnUrl" value="{{returnUrl}}"> </form> <form action="/authenticate_openid" method="post" style="margin-top: 16px;"> <label> Or log in with: </label> <input type="hidden" name="openid_identifier" value="https://www.google.com/accounts/o8/id"> <input type="submit" class="primary js-google-login" value="Google Account" style="width: 100%"> <input type="hidden" name="returnUrl" value="{{returnUrl}}"> <input type="hidden" name="mode" value=""> <input type="hidden" name="immediate" value=""> {{#openidAccount}} <p>It looks like you haven\'t set a password yet. You can do this from the Account page after logging in with your Google Account.</p> {{/openidAccount}} </form> ',
            manual_about: '<p> Trello is a collaboration tool that organizes your projects into boards. In one glance, Trello tells you what\'s being worked on, who\'s working on what, and where something is in a process. </p> <h2>The Board</h2> <p> A Trello board is some product or project that is under continuous development, though a board can have a variety of uses and mean different things. Boards are made up of multiple lists. Generally, lists on the left are the start of a workflow and lists on right are the end. Lists contain cards. Cards represent the basic unit of a board, for instance: a new feature, a bug, a story lead, a legal case, a client, research for a paper, a potential employee, or a customer support issue. Cards move from list to list to indicate progression. Board members can add themselves to cards, start conversations on cards, create checklists on cards, and so on. </p> <p> To give you an example, our board consists of five lists ordered left to right: <em>Ideas</em>, <em>Design</em>, <em>Development</em>, <em>Implemented</em>, and <em>Deployed</em>. For us, a card is usually a bug or a feature. A feature card that has finished being designed will be moved from the <em>Design</em> list to the <em>Development</em> list, and so on down the line. When we push bad code, we move cards from <em>Deployed</em> to <em>Development</em>. We sort cards vertically in a list to designate priority, the top being the highest priority. The cards with bad code are usually at the top. One look at the board will tell you where a feature or bug is in the development cycle. </p> <p> That\'s how we use a board. You\'ll likely have your own lists, your own concept of a card, and your own workflow. </p> <h2>Principles</h2> <p> We developed Trello with three principles in mind: <strong>realtime updates</strong>, <strong>device independence</strong>, and <strong>minimal friction</strong>. Everything in Trello happens in realtime. You\'ll see users commenting, cards being moved and added, and all other actions happen as they happen. No need to refresh. Trello was designed from the ground up to work on any device, whether it\'s a desktop, tablet, or smartphone. We want you to use Trello at your office, on your laptop in your studio, or even in your hand at the grocery store. We wanted to cut down on friction and keep you focused. We wanted to keep your view on the board at all times. There are no page refreshes wisking you away to fiddle with a setting or fill in another required field. Edits, moves, adds, and comments are made in place, keeping you focused and letting you quickly develop your thoughts. </p> <br> <div style="text-align: center;"> <p class="quiet">Trello is made in New York City by <a href="http://www.fogcreek.com/?fccmp=trello_about">Fog Creek Software</a></p> <a style="display: block; margin-top: 12px;" href="http://www.fogcreek.com/?fccmp=trello_about"> <img src="https://d2k1ftgv7pobq7.cloudfront.net/images/5328bfe21f2e6cfd016b4e3a3141aa7c/fog_creek_logo.png" style="max-width: 180px;"> </a> </div> ',
            manual_base: '<div class="manual {{#about}}about{{/about}} {{#glossary}}glossary{{/glossary}} {{#shortcuts}}shortcuts{{/shortcuts}} {{#requirements}}requirements{{/requirements}}"> {{#is_board}} <div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> {{/is_board}} <div class="window-header clearfix"> <span class="app-icon manual-icon"></span> <h2 class="window-title"> {{title}} </h2> </div> <div class="window-main-col markeddown clearfix"> {{{manual_content}}} </div> <div class="window-sidebar"> <div class="sidebar-nav mini window-module"> <h3>Trello</h3> <ul> <li> <a {{#about}}class="active"{{/about}} href="/about">About</a> </li> <li> <a target="_blank" href="http://blog.trello.com">Blog</a> </li> <li> <a target="_blank" href="http://www.twitter.com/TrelloApp">@trelloapp on Twitter</a> </li> <li> <a href="https://trello.com/board/4d5ea62fd76aa1136000000c">Trello on Trello</a> </li> <li> <a target="_blank" href="http://www.fogcreek.com/?fccmp=trello_about">Fog Creek</a> </li> <li> <a target="_blank" class="js-real-link" href="/legal">Terms of Service</a> </li> </ul> </div> <div class="sidebar-nav mini window-module"> <h3>Help</h3> <ul> <li> <a {{#help}}class="active"{{/help}} href="/help">Overview</a> </li> <li> <a {{#glossary}}class="active"{{/glossary}} href="/glossary">Glossary</a> </li> <li> <a {{#shortcuts}}class="active"{{/shortcuts}} href="/shortcuts">Shortcuts</a> </li> <ul> </div> </div> </div> ',
            manual_shortcuts: '<div class="shortcut"> <div class="key-modifier"> <span class="modifier">Hover + </span> <a class="key"> A </a> </div> <h3> Assign Members </h3> <p> Hovering over a card and pressing \'a\' opens a pop-over menu with a list of assigned and unassigned members. Clicking a member\'s avatar will assign or unassign that person. </p> </div> <div class="shortcut"> <div class="key-modifier"> <span class="modifier">Hover + </span> <a class="key"> C </a> </div> <h3> Archive Card </h3> <p> Hovering over a card and pressing \'c\' will archive the card. </p> </div> <div class="shortcut"> <div class="key-modifier"> <a class="key"> F </a> </div> <h3> Clear all Filters </h3> <p> Use \'f\' to clear all active card filters. </p> </div> <div class="shortcut"> <div class="key-modifier"> <a class="key"> ESC </a> </div> <h3> Close Menu / Cancel Editing </h3> <p> Pressing \'esc\' will close an open dialog window or pop-over, or cancel edits and comments you are composing. </p> </div> <div class="shortcut"> <div class="key-modifier"> <span class="modifier">Hover + </span> <a class="key"> L </a> </div> <h3> Label </h3> <p> Hovering over a card and pressing \'l\' opens a pop-over of the available labels. Clicking a label will add or remove it from the card. </p> <p> Hovering over a card and pressing one of the following number keys, will apply or remove that label. </p> <table> <thead> <tr> <th>Key</th> <th>Label Color</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>Green</td> </tr> <tr> <td>2</td> <td>Yellow</td> </tr> <tr> <td>3</td> <td>Orange</td> </tr> <tr> <td>4</td> <td>Red</td> </tr> <tr> <td>5</td> <td>Purple</td> </tr> <tr> <td>6</td> <td>Blue</td> </tr> </tbody> </table> </div> <div class="shortcut"> <div class="key-modifier"> <span class="modifier">Hover + </span> <a class="key"> &lt; </a> <a class="key"> &gt; </a> </div> <h3> Move Card to Adjacent List </h3> <p> Hover over a card and press the left or right angle brackets (&lt; and &gt;) to move it the adjacent left or right list. </p> </div> <div class="shortcut"> <div class="key-modifier"> <a class="key"> SPACE </a> </div> <h3> Assign Self </h3> <p> Hovering over a card that you are not assigned to and pressing \'space\' will assign you to that card. The same key shortcut will unassign you from a card that you are already assigned to. </p> </div> <div class="shortcut"> <div class="key-modifier"> <a class="key"> Q </a> </div> <h3> Condensed View </h3> <p> Pressing the \'q\' key while on a board toggles the condensed view, which shows only cards to which you are assigned. </p> </div> <div class="shortcut"> <div class="key-modifier"> <span class="modifier">Hover + </span> <a class="key"> V </a> </div> <h3> Vote </h3> <p> Hovering over a card and pressing \'v\' will add your vote to the card. If you\'ve already voted on that card then your vote will be removed. </p> </div> ',
            manual_help: '<div class="gutter"> <h3>Glossary</h3> <p> Not sure of the difference between a list and a checklist? We\'ve collected all the common Trello terms and described what they do and how to use them. Good for beginners or those times when you forget how that one thing works. Visit the <a href="/glossary">glossary</a>. </p> <h3>Shortcuts</h3> <p> Trello is loaded with keyboard shortcuts so you can vote, move cards, archive, cancel, and assign users with fewer clicks. We\'ve collected them all <a href="/shortcuts">here</a>. </p> <h3>Features and Ideas</h3> <p> Just thought of a great idea for Trello? We might already be working on it! We use a public Trello board to develop Trello so you can see, comment, and vote on features. Visit our <a href="https://trello.com/board/4d5ea62fd76aa1136000000c">Trello Development board</a>. </p> <p> If your feature isn\'t there, tell us about it on Twitter! Follow <a href="https://www.twitter.com/trelloapp">@trelloapp</a> and send a tweet to us about your idea. If your idea won\'t fit into 140 characters, you can email it to <a href="mailto:feature-ideas@trello.com">feature-ideas@trello.com</a>. We read all feature ideas but may not be able to respond to them individually. </p> <h3>How do I... ?</h3> <p> Your question may already be answered! There\'s a wealth of information on how to do stuff in Trello on the <a href="http://webapps.stackexchange.com/">Web Applications Stack Exchange</a> community. The Web Applications Stack Exchange is a free, community-driven Q&amp;A for power users of web applications. It\'s a great place to learn how to use Trello (or Gmail or Twitter or YouTube) well. See <a href="http://webapps.stackexchange.com/questions/tagged/trello">questions tagged trello</a>. </p> <p> If you want to know how to do something, feel free to ask a question there and tag it trello. The community will be there, and the Trello team is there regularly, too. </p> <h3>Problems, Bugs, and Crashes</h3> <p> If you\'ve got a bug to report, please first check the <a href="https://trello.com/board/4d5ea62fd76aa1136000000c">Trello Development board</a> where we maintain a list of known issues and bugs. Bugs have the red label. </p> <p> If you can\'t find the bug, are having problems with your account, or are experiencing crashes please email Fog Creek at <a href="mailto:support@trello.com">support@trello.com</a>. If you could include the browser, operating system and any errors, it will help us a bunch. </p> </div> ',
            member_account: '<div class="window-module"> <form class="account-form" method="POST"> <p id="error" class="error"></p> <div class="field"> <label for="fullName">Full Name:</label> <input id="fullName" type="text" name="fullName" value="{{fullName}}"> </div> <div class="field"> <label for="initials">Initials:</label> <input id="initials" type="text" name="initials" value="{{initials}}"> <p class="helper"> Your initials are used in place of your avatar if your avatar is not set. </p> </div> <div class="field"> <label for="username">Username:</label> <input id="username" type="text" name="username" value="{{username}}" required> <p class="helper"> Your username is used in various URLs. Minimum of 3 characters, alphanumeric only. </p> </div> <div class="field"> {{#isOpenIdAccount}} <p> You haven\'t set a password yet. If you want, you can set a password so you can log onto Trello with just your username or email address. </p> {{/isOpenIdAccount}} {{^isOpenIdAccount}} <label for="o_password"> Old Password: </label> <input id="o_password" type="password" name="oldpassword" value=""> {{/isOpenIdAccount}} <label for="password1"> New Password: </label> <input id="password1" type="password" name="password" value=""> <label for="password2"> New Password (again): </label> <input id="password2" type="password" name="password2" value=""> <p id="password-error" class="error"></p> </div> <div class="account-avatar clearfix"> {{#gravatar}} <div class="member"> <img class="member-avatar" width="50" height="50" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=50&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}} ({{username}})" title="{{fullName}} ({{username}})" > <p class="member-initials" title="{{fullName}} ({{username}})"> {{initials}} </p> </div> {{/gravatar}} <h4>Change your avatar at <a href="http://gravatar.com" target="_blank">gravatar.com</a>.</h4> <p> {{#gravatar}} We\'re using {{email}}. {{/gravatar}} It may take time for changes made on gravatar.com to appear on our site.</p> </div> <input type="submit" name="save" class="primary clear js-save-changes" value="Update Account"> </form> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon preferences-icon"></span> <h3>Preferences</h3> </div> {{#prefs}} <div class="pref clearfix gutter" name="sendSummaries"> <h4>Send Email with Unread Notifications</h4> <ul class="pref-options user clearfix"> <li> <a class="first{{^sendSummaries}} active{{/sendSummaries}}" value="false">Disable</a> </li> <li> <a class="last{{#sendSummaries}} active{{/sendSummaries}}" value="true">Enable</a> </li> </ul> </div> {{/prefs}} <p class="helper gutter clear" style="margin-bottom: 8px;"> Email summaries are sent 24 hours after your last time active on Trello and contain only notifications you have not already read. </p> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon org-icon"></span> <h3>Organizations</h3> </div> <ul class="bold-list gutter"> <li class="list-orgs" style="border-bottom: none;"> </li> <li class="add-board-list-item"> <a class="button-link highlight-icon" href="/org/create"> <span class="app-icon small-icon org-icon"></span> Start an Organization </a> </li> </ul> </div> ',
            member: '<img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}} ({{username}})" title="{{fullName}} ({{username}})" /> <p class="member-initials" title="{{fullName}} ({{username}})"> {{initials}} </p> {{#showStatus}}<span class="status {{status}}"></span>{{/showStatus}} {{#isBoardAdmin}}<span class="admin" title="This member is an owner of this board."></span>{{/isBoardAdmin}} {{#isOrganizationAdmin}}<span class="admin" title="This member is an owner of this organization."></span>{{/isOrganizationAdmin}} ',
            member_board_stats: '<a class="clearfix link-item highlight-icon " href="{{url}}"> <span class="item-name">{{name}}</span> <span {{#permissionLevel_private}} title="This board is private. It\'s only viewable to members of this board." {{/permissionLevel_private}} {{#permissionLevel_org}} title="This board is only viewable to members of the organization." {{/permissionLevel_org}} {{#permissionLevel_public}} title="This board is public. It\'s viewable to the entire Internet." {{/permissionLevel_public}} class="app-icon small-icon permission-icon {{#permissionLevel_public}} public-icon {{/permissionLevel_public}} {{#permissionLevel_private}} private-icon {{/permissionLevel_private}} {{#permissionLevel_org}} org-private-icon {{/permissionLevel_org}}"></span> {{#__loggedIn}} {{#pinned}} <span title="This board is pinned to your header menu." class="app-icon small-icon pin-icon"> </span> {{/pinned}} <span class="counts"> {{#nActionsSinceLastView}} <span class="count"> <span class="app-icon small-icon activity-icon"></span> {{nActionsSinceLastView}}{{#plus}}+{{/plus}} </span> {{/nActionsSinceLastView}} </span> <span class="board-list-menu js-boards-list-menu"> <span class="app-icon small-icon menu-icon"></span> </span> {{/__loggedIn}} </a> ',
            member_avatar: '<div class="member"> <p class="member-initials"> {{initials}}</p> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}"> </div> ',
            member_boards_list: '<div class="window-module"> <div class="window-module-title"> <span class="app-icon {{^url}}board-icon{{/url}} {{#url}}org-icon{{/url}}"></span> <h3 class="inline-block"> {{name}} </h3> {{#permissionLevel_public}}<span class="app-icon small-icon public-icon"></span>{{/permissionLevel_public}} {{#permissionLevel_private}}<span class="app-icon small-icon private-icon"></span>{{/permissionLevel_private}} {{#url}}<a style="margin-left: 4px;" class="quiet" href="{{url}}">View Organization Profile</a>{{/url}} </div> {{#empty}}<div class="empty-list">No boards</div>{{/empty}} <ul class="list-boards bold-list gutter"> </ul> </div> ',
            member_boards: '<div class="js-boards-list"> </div> {{#__own}} <ul class="options-list"> <li> <a href="/org/create" title="Organizations make sharing and working within a group even easier.">Create an Organization</a> </li> </ul> {{/__own}} ',
            member_invitation: '<p class="item-name float-link"><a href="{{url}}">{{name}}</a></p> <div class="options"> <a class="button-link highlight-icon js-accept-invitation" href="#"> Accept </a> <a class="button-link highlight-icon js-reject-invitation" href="#"> Reject </a> </div> ',
            member_detail: '<div class="member-detail-modal" idMember="{{id}}"> <div class="window-header clearfix"> <span class="app-icon member-icon"></span> <div class="member-title" attr="fullName"> <h2 class="window-title"> {{fullName}} {{#username}} <span class="quiet" style="margin-left: 3px">({{username}})</span> {{/username}} </h2> </div> </div> <div class="window-main-col clearfix"> </div> <div class="window-sidebar"> <div class="profile-member"> <p class="profile-member-initials"> {{initials}} </p> <img class="profile-member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=170&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}"> </div> <div class="sidebar-nav"> <ul> <li> {{#__ed}} <a class="js-member-boards" href="/">Boards</a> {{/__ed}} {{^__ed}} <a class="js-member-boards" href="/{{username}}/boards">Boards</a> {{/__ed}} </li> <li> <a class="js-member-profile" href="/{{username}}">Profile</a> </li> {{#__ed}} <li> <a class="js-member-notifications" href="/{{username}}/notifications">Notifications</a> </li> <li> <a class="js-member-account" href="/{{username}}/account">Account</a> </li> <li> <a class="js-log-out" href="/logout">Log Out</a> </li> {{/__ed}} <ul> </div> </div> </div> ',
            member_header: '<p class="member-initials"> {{initials}} </p> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> ',
            member_inline: '<span class="inline-member"> <img class="inline-member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=14&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="inline-member-initials">{{initials}}</span> </span> {{^compact}} <span class="bold">{{fullName}}</span> {{/compact}} ',
            member_invitation_list: '<div class="window-module invitations"> <div class="window-module-title"> <span class="app-icon invitation-icon"></span> <h3>Pending {{model}} Invitations</h3> </div> <div class="bold-list gutter js-list-invitations"> </div> </div> ',
            move_card: ' <label>List</label> <select class="select-list"> {{#lists}} <option value="{{id}}"{{#selected}} selected="selected"{{/selected}}>{{name}}{{#selected}} (current){{/selected}}</option> {{/lists}} </select> <label>Position</label> <select class="select-position"> {{#positions}} <option value="{{index}}"{{#selected}} selected="selected"{{/selected}}>{{description}}{{#selected}} (current){{/selected}}</option> {{/positions}} </select> <input type="submit" class="primary js-commit-position" value="Move"/> <input type="submit" class="cancel js-cancel-position" value="Cancel"/> ',
            menu: '<ul class="pop-over-list"> <li><ul class="dynamic-pop-over-list" /></li> {{#menu_cards}} <li><a {{#js_class}}class="{{js_class}}" {{/js_class}} href="{{#url}}{{url}}{{/url}}{{^url}}#{{/url}}">{{name}}</a></li> {{/menu_cards}} </ul> ',
            member_notifications: '<div class="window-module"> <div class="window-module-title"> <span class="app-icon notification-icon"></span> <h3>Notifications</h3> </div> {{#empty}}<div class="empty-list">No Notifications</div>{{/empty}} <div class="list-notifications"></div> <a class="show-more js-more-notifications" href="#">Load More Notifications</a> </div> ',
            member_on_activity_menu: '<li><a class="js-show-detail" href="/{{username}}">Profile</a></li> ',
            member_on_board_menu: '<li><a href="{{boardProfileUrl}}">Board Profile</a></li> <li><a class="js-show-detail" href="/{{username}}">Profile</a></li> {{#__ed}} {{#canRemove}} <li><a class="js-remove-member">Remove from Board</a></li> {{/canRemove}} {{#canMakeAdmin}} <li><a class="js-make-admin">Make Co-Owner of Board</a></li> {{/canMakeAdmin}} {{#canRemoveAdmin}} <li><a class="js-remove-admin">Give up Ownership of Board</a></li> {{/canRemoveAdmin}} {{/__ed}} ',
            member_on_card_menu: '<li><a class="js-show-detail" href="/{{username}}">Profile</a></li> {{#__ed}} <li><a class="js-remove-member">Remove from Card</a></li> {{/__ed}} ',
            member_on_org_menu: '<li><a class="js-show-detail" href="/{{username}}">Profile</a></li> {{#canRemove}} <li><a class="js-remove-member">Remove from Organization</a></li> {{/canRemove}} {{#canMakeAdmin}} <li><a class="js-make-admin">Make Admin of Organization</a></li> {{/canMakeAdmin}} {{#canRemoveAdmin}} <li><a class="js-remove-admin">Give up Ownership of Organization</a></li> {{/canRemoveAdmin}} ',
            member_organization: '<a class="clearfix link-item highlight-icon" href="{{url}}"> <span class="item-name">{{displayName}}</span> {{#permissionLevel_public}}<span class="app-icon small-icon public-icon"></span>{{/permissionLevel_public}} {{#permissionLevel_private}}<span class="app-icon small-icon private-icon"></span>{{/permissionLevel_private}} </a> ',
            member_profile: '<div class="window-module gutter clearfix"> <div class="bio {{#__ed}} editable {{/__ed}}{{^bio}} unspecified{{/bio}}" attr="bio"> <div class="{{#__ed}}current hide-on-edit{{/__ed}}"> {{{bioHtml}}} {{#__ed}}{{^bio}}<p><a href="#">No bio specified (click to edit)</a></p>{{/bio}}{{/__ed}} </div> {{#__ed}} <div class="edit"> <textarea class="field"></textarea> </div> {{/__ed}} </div> {{#email}} <p class="email quiet"> {{email}} </p> {{/email}} </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon org-icon"></span> <h3>Organizations</h3> </div> <div class="bold-list list-orgs gutter"> </div> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon activity-icon"></span> <h3>Activity</h3> </div> {{#emptyActions}}<p class="empty-list">No Actions</p>{{/emptyActions}} <div class="list-actions"></div> <p class="bottom"> <a class="show-more js-more-actions" href="#">Load More Activity</a> </p> </div> ',
            members_voted: '<p style="margin-bottom: 4px;"><strong>Voters</strong></p> <div class="list-voters clearfix {{#fewMembers}}compact{{/fewMembers}}"> {{#members}} <div class="voter"> <div class="member no-menu"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}} ({{username}})" title="{{fullName}} ({{username}})" /> <p class="member-initials" title="{{fullName}} ({{username}})"> {{initials}} </p> </div> {{#fewMembers}} <p class="title"> {{fullName}} <span class="quiet">({{username}})</span> </p> {{/fewMembers}} </div> {{/members}} </div> {{#moreMembers}} <a href="#" class="show-more compact js-more-members-voted"> Show all voters ({{lengthDiff}} more) </a> {{/moreMembers}} ',
            "menu-base": '<ul class="pop-over-list"> <li><ul class="boards-pop-over-list" /></li> {{{content}}} </ul> ',
            notification: '<div class="phenom {{#invitedToBoard}}{{#stillInvited}} phenom-note-invite {{/stillInvited}}{{/invitedToBoard}} {{#invitedToOrganization}}{{#stillInvited}} phenom-note-invite {{/stillInvited}}{{/invitedToOrganization}} {{^isUnread}} read {{/isUnread}} clearfix"> <div class="notification-member-placeholder"></div> <div class="phenom-desc"> {{#entities}} {{>entity}} {{/entities}} {{#stillInvited}} <div class="phenom-opts"> <a class="button-link highlight-icon js-accept-invitation" href="#">Accept</a> <a class="button-link highlight-icon js-reject-invitation" href="#">Reject</a> </div> {{/stillInvited}} </div> <div class="phenom-meta quiet"> {{#date}}<p class="date" dt="{{date}}"></p>{{/date}} </div> </div> ',
            org_account: '<form class="account-form" method="POST"> <p class="error" style="display:none"></p> <div class="field"> <label for="displayName">Display Name:</label> <input type="text" id="displayName" name="displayName" value="{{displayName}}"> </div> <div class="field"> <label for="name">Orgname:</label> <input type="text" id="name" name="name" value="{{name}}" required> <p class="helper"> Your orgname is used in various URLs. Minimum of 3 characters, alphanumeric only. </p> </div> <div class="field"> <label for="website">Website:</label> <input id="website" type="text" name="website" value="{{website}}"> </div> <div class="field"> <label for="description">Description:</label> <textarea type="text" name="description" id="description">{{description}}</textarea> </div> <div class="field"> <label for="permissionLevel">Visibility</label> <div class="pref clearfix" style="margin-left: 0;"> <input type="hidden" name="permissionLevel" value="private" /> <ul class="pref-options left user clearfix"> <li> <a class="first{{#permissionLevel_private}} active{{/permissionLevel_private}}" value="private">Members</a> </li> <li> <a class="last{{#permissionLevel_public}} active{{/permissionLevel_public}}" value="public">Public</a> </li> </ul> </div> </div> <div> <input type="submit" name="save" class="primary js-save-changes" value="Update Organization"> </div> </form> ',
            org_create: '{{#is_board}} <div class="window-header-utils"> <a class="app-icon close-icon dark-hover js-close-window" href="#">Close</a> </div> {{/is_board}} <div class="window-header clearfix"> <span class="app-icon org-icon"></span> <h2 class="window-title"> Create an Organization </h2> </div> <div class="window-main-col"> <form class="account-form" method="POST"> <p class="error" style="display:none"></p> <div class="field"> <label for="displayName">Display Name:</label> <input type="text" name="displayName" value="{{displayName}}"> </div> <div class="field"> <label for="orgname">Orgname:</label> <input type="text" name="orgname" value="{{orgname}}" required> <p class="helper"> Your orgname is used in various URLs. Minimum of 3 characters, alphanumeric only. </p> </div> <div class="field"> <label for="website">Website:</label> <input type="text" name="website" value="{{website}}"> </div> <div class="field"> <label for="description">Description:</label> <textarea type="text" name="description" value="{{description}}"></textarea> </div> <div class="field"> <label for="permissionLevel">Visibility</label> <div class="pref clearfix" style="margin-left: 0;"> <input type="hidden" name="permissionLevel" value="private" /> <ul class="pref-options left user clearfix"> <li> <a class="first active" value="private">Members</a> </li> <li> <a class="last" value="public">Public</a> </li> </ul> </div> </div> <div> <input type="submit" name="save" class="primary js-create-org" value="Create Organization"> </div> </form> </div> ',
            org_detail: '<div idOrganization="{{id}}"> <div class="window-header clearfix"> <span class="app-icon org-icon"></span> <div class="member-title" attr="displayName"> <h2 class="window-title"> {{displayName}} <span class="quiet" style="margin-left: 3px">({{name}})</span> {{#permissionLevel_public}}<span class="app-icon small-icon public-icon"></span>{{/permissionLevel_public}} {{#permissionLevel_private}}<span class="app-icon small-icon private-icon"></span>{{/permissionLevel_private}} </h2> </div> </div> <div class="window-main-col clearfix"> </div> <div class="window-sidebar"> {{#__invited}} {{#__loggedIn}} <div class="window-module clearfix"> <a class="button primary left js-accept-invite" style="margin-top: 0; padding: 6px; width: 88px;" href="">Accept Invite</a> <a class="button left js-reject-invite" style="margin-top: 0; padding: 6px; width: 43px;" href="">Reject</a> </div> {{/__loggedIn}} {{^__loggedIn}} <div class="window-module clearfix"> <a class="button primary left js-accept-invite" style="margin-top: 0; padding: 6px 10px;" href="/signup?returnUrl={{url}}">Sign up for Trello</a> </div> {{/__loggedIn}} {{/__invited}} <div class="window-module sidebar-nav"> <ul> <li> <a class="js-org-profile" href="/{{name}}">Profile</a> </li> {{#__ed}} <li> <a class="js-org-members" href="/{{name}}/members">Members</a> </li> <li> <a class="js-org-account" href="/{{name}}/account">Account</a> </li> {{/__ed}} <ul> </div> </div> </div> ',
            org_email_search_result: '<li class="member-list-item {{className}} {{#isInvitable}}invitable{{/isInvitable}}"> <span class="email">{{email}}</span> <div class="status"></div> </li> ',
            org_inline: '<span>the organization</span> <a href="{{organizationUrl}}" class="inline-object"> {{name}} </a> ',
            search_input: '<label for="search-text">Global Search</label> <input id="search-text" type="text" autocomplete="off" autocorrect="off" spellcheck="false"> <input id="search-submit" class="app-icon search-icon" type="submit" value="Search"> ',
            search: "<b>Search</b> ",
            org_member_search_result: '<li class="member-list-item {{className}} {{#isInvitable}}invitable{{/isInvitable}}"> <div class="member"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}" /> <span class="member-initials">{{initials}}</span> </div> <span class="name">{{fullName}} {{#username}}<span class="quiet">({{username}})</span>{{/username}}</span> <div class="status"></div> </li> ',
            org_members_manage: ' <div class="window-module"> <div class="window-module-title"> <span class="app-icon member-icon"></span> <h3>Members</h3> </div> <div class="list-org-members gutter clearfix"> </div> </div> <div class="gutter clearfix"> <input type="text" class="search-members" placeholder="Search by name or add email addresses" autofocus> </div> <div class="gutter window-module"> <p class="helper"> Search for one or more existing users or add email addresses for new users, separating entries with a comma. Select users by clicking one or more and adding them to the list. Click the green Invite button beneath the list to send the invitation or invitations. </p> </div> <div class="no-results gutter quiet">No results.</div> <ul class="search-results"></ul> <div class="window-module gutter"> <input type="submit" value="Invite" class="primary js-send-invitations" /> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon invitation-icon"></span> <h3>Pending Invitations</h3> </div> <div class="invited-members clearfix"> </div> </div> ',
            org_profile: '<div class="window-module gutter"> <p> {{{descriptionHtml}}} {{#__ed}}{{^description}}<a href="/{{name}}/account">No description specified (click to edit)</a>{{/description}}{{/__ed}} </p> <p> <a href="{{websiteHref}}">{{website}}</a> </p> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon member-icon"></span> <h3 class="inline-block">Members</h3> {{#__ed}} <a style="margin-left: 4px;" class="quiet" href="/{{name}}/members">Add Members</a> {{/__ed}} </div> <div class="list-org-members gutter clearfix"> </div> </div> <div class="window-module"> <div class="window-module-title"> <span class="app-icon board-icon"></span> <h3>Boards</h3> </div> {{#empty}}<div class="empty-list">No boards</div>{{/empty}} <div class="bold-list list-boards gutter"></div> </div> ',
            search_highlights: '{{#results}}{{#isHit}}<span class="search-hit">{{text}}</span>{{/isHit}}{{^isHit}}{{text}}{{/isHit}}{{/results}} ',
            search_results: ' {{^truncated}} <div class="window-header clearfix"> <span class="app-icon search-icon"></span> <h2 class="window-title"> Search Results </h2> </div> {{/truncated}} {{#empty}} {{#loading}}<p class="loading">Loading...</p>{{/loading}} {{^loading}} {{^truncated}} <p class="empty-list"> {{/truncated}} {{#truncated}} <p class="empty"> {{/truncated}} No Results </p> {{/loading}} {{/empty}} {{^empty}} <ul class="search-results-list"> {{#list}} {{#isCategoryLabel}} <li class="category"> <span class="app-icon {{#truncated}} small-icon {{/truncated}} {{categoryClass}}-icon"></span> {{category}} </li> {{/isCategoryLabel}} {{^isCategoryLabel}} <li class="search-item"> <a class="clearfix {{#isMember}} member-result {{/isMember}}" {{#url}} href="{{url}}"{{/url}}> {{#isMember}} {{#member}} <div class="member"> <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}"> <p class="member-initials" title="{{fullName}} ({{username}})">{{initials}}</p> </div> {{/member}} {{/isMember}} <span class="match-label">{{{labelHTML}}} {{#isCard}} <span class="quiet">on board {{#board}}{{name}}{{/board}}</span> {{/isCard}} </span> {{#matchText}} <span class="match-text">{{{matchTextHTML}}}</span> {{/matchText}} </a> </li> {{/isCategoryLabel}} {{/list}} {{#truncated}} <li class="show-all-results search-item"> <a class="quiet js-all-search-results">Show all results...</a> </li> {{/truncated}} </ul> {{/empty}} ',
            select_members: '<div class="select-members-list clearfix"> <p style="margin-bottom: 4px;"> <strong>Assigned Members</strong> </p> <div class="assigned-members"> {{#assigned_members}} <div class="member" idMember="{{_id}}" fullName="{{fullName}}" > <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}"> <p class="member-initials" title="{{fullName}} ({{username}})">{{initials}}</p> </div> {{/assigned_members}} </div> </div> <div class="select-members-list clearfix"> <p style="margin-bottom: 4px;"> <strong>Available Members</strong> </p> <div class="available-members"> {{#available_members}} <div class="member" idMember="{{_id}}" fullName="{{fullName}}" > <img class="member-avatar" src="https://secure.gravatar.com/avatar/{{gravatar}}.jpg?s=30&d=https%3A%2F%2Fd2k1ftgv7pobq7.cloudfront.net%2Fimages%2Fb73bef9dc51e381e27b31fcfcbc871f6%2Fgradient.png&r=PG" alt="{{fullName}}" title="{{fullName}}"> <p class="member-initials" title="{{fullName}} ({{username}})">{{initials}}</p> </div> {{/available_members}} </div> </div> <p class="helper">Click member avatar to assign or remove from card.</p> ',
            upgrade: ' Time to upgrade Trello!<br /> {{#stopped}}When you\'re ready... <br />{{/stopped}} {{^stopped}}Automatic reload in {{timeInMinutes}} minute{{#plural}}s{{/plural}}.<br />{{/stopped}} <a class="js-upgrade" href="#">Go ahead</a> {{^stopped}} <a class="js-stop-upgrade" href="#">Wait!</a> {{/stopped}} ',
            user_header: '\ufeff{{#__loggedIn}}<div class="header-btn header-notifications"></div><div class="header-btn header-boards"></div><div class="header-btn header-auth"></div>{{/__loggedIn}} {{^__loggedIn}}<div class="header-btn header-login"><a class="header-btn-target js-toggle-login-popover" href="#">Log In</a></div><div class="header-btn header-signup"><a class="header-btn-target" href="/signup">Sign Up</a></div>{{/__loggedIn}} ',
            votes: ' {{#canVote}} <a class="js-{{#voted}}un{{/voted}}vote vote-button {{#voted}}voted{{/voted}}">Vote{{#voted}}d{{/voted}}</a> {{/canVote}} {{^canVote}} {{#hasVotes}} <h3>Votes</h3> {{/hasVotes}} {{/canVote}} {{#hasVotes}} <ul class="options-list" style="margin: {{#canVote}}8px {{/canVote}} 0 0;"> <li> <a class="js-show-votes {{#canVote}}center{{/canVote}}" href="#"> {{#nVotes}} {{nVotes}} voter{{^singleVote}}s {{/singleVote}} {{/nVotes}} {{#voted}} {{^justYourVote}} (with you) {{/justYourVote}} {{#justYourVote}} (you) {{/justYourVote}} {{/voted}} </a> </li> </ul> {{/hasVotes}} ',
            atMention: '<span class="atMention{{#isMe}} me{{/isMe}}" title="{{fullName}}">{{atMention}}</span> ',
            board_watchers: "{{#showWatchers}} {{nWatchers}} people watching. {{/showWatchers}} "
        };
        A("jquery") &&
        function(d, c) {
            function e(j, b, d) {
                if (d === c && j.nodeType === 1) if (d = "data-" + b.replace(N, "$1-$2").toLowerCase(), d = j.getAttribute(d), typeof d === "string") {
                    try {
                        d = d === "true" ? !0: d === "false" ? !1: d === "null" ? null: !i.isNaN(d) ? parseFloat(d) : ha.test(d) ? i.parseJSON(d) : d
                    } catch(h) {}
                    i.data(j, b, d)
                } else d = c;
                return d
            }
            function f(j) {
                for (var c in j) if (c !==
                "toJSON") return ! 1;
                return ! 0
            }
            function g(j, b, d) {
                var h = b + "defer",
                f = b + "queue",
                e = b + "mark",
                l = i.data(j, h, c, !0);
                l && (d === "queue" || !i.data(j, f, c, !0)) && (d === "mark" || !i.data(j, e, c, !0)) && setTimeout(function() { ! i.data(j, f, c, !0) && !i.data(j, e, c, !0) && (i.removeData(j, h, !0), l.resolve())
                },
                0)
            }
            function m() {
                return ! 1
            }
            function n() {
                return ! 0
            }
            function b(j, b, d) {
                var h = i.extend({},
                d[0]);
                h.type = j;
                h.originalEvent = {};
                h.liveFired = c;
                i.event.handle.call(b, h);
                h.isDefaultPrevented() && d[0].preventDefault()
            }
            function l(j) {
                var c,
                b,
                d,
                h,
                f,
                e,
                l,
                g,
                o,
                m,
                u,
                n = [];
                h = [];
                f = i._data(this, "events");
                if (! (j.liveFired === this || !f || !f.live || j.target.disabled || j.button && j.type === "click")) {
                    j.namespace && (u = RegExp("(^|\\.)" + j.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)"));
                    j.liveFired = this;
                    var x = f.live.slice(0);
                    for (l = 0; l < x.length; l++) f = x[l],
                    f.origType.replace(Ga, "") === j.type ? h.push(f.selector) : x.splice(l--, 1);
                    h = i(j.target).closest(h, j.currentTarget);
                    g = 0;
                    for (o = h.length; g < o; g++) {
                        m = h[g];
                        for (l = 0; l < x.length; l++) if (f = x[l], m.selector === f.selector && (!u || u.test(f.namespace)) &&
                        !m.elem.disabled) {
                            e = m.elem;
                            d = null;
                            if (f.preType === "mouseenter" || f.preType === "mouseleave") j.type = f.preType,
                            (d = i(j.relatedTarget).closest(f.selector)[0]) && i.contains(e, d) && (d = e); (!d || d !== e) && n.push({
                                elem: e,
                                handleObj: f,
                                level: m.level
                            })
                        }
                    }
                    g = 0;
                    for (o = n.length; g < o; g++) {
                        h = n[g];
                        if (b && h.level > b) break;
                        j.currentTarget = h.elem;
                        j.data = h.handleObj.data;
                        j.handleObj = h.handleObj;
                        u = h.handleObj.origHandler.apply(h.elem, arguments);
                        if (u === !1 || j.isPropagationStopped()) if (b = h.level, u === !1 && (c = !1), j.isImmediatePropagationStopped()) break
                    }
                    return c
                }
            }
            function o(j, c) {
                return (j && j !== "*" ? j + ".": "") + c.replace(wc, "`").replace(Fb, "&")
            }
            function F(j, c, b) {
                c = c || 0;
                if (i.isFunction(c)) return i.grep(j,
                function(j, d) {
                    return !! c.call(j, d, j) === b
                });
                else if (c.nodeType) return i.grep(j,
                function(j) {
                    return j === c === b
                });
                else if (typeof c === "string") {
                    var d = i.grep(j,
                    function(j) {
                        return j.nodeType === 1
                    });
                    if (Wa.test(c)) return i.filter(c, d, !b);
                    else c = i.filter(c, d)
                }
                return i.grep(j,
                function(j) {
                    return i.inArray(j, c) >= 0 === b
                })
            }
            function B(j, c) {
                if (c.nodeType === 1 && i.hasData(j)) {
                    var b = i.expando,
                    d = i.data(j),
                    h = i.data(c, d);
                    if (d = d[b]) {
                        var f = d.events,
                        h = h[b] = i.extend({},
                        d);
                        if (f) {
                            delete h.handle;
                            h.events = {};
                            for (var e in f) {
                                b = 0;
                                for (d = f[e].length; b < d; b++) i.event.add(c, e + (f[e][b].namespace ? ".": "") + f[e][b].namespace, f[e][b], f[e][b].data)
                            }
                        }
                    }
                }
            }
            function H(j, c) {
                var b;
                if (c.nodeType === 1) {
                    c.clearAttributes && c.clearAttributes();
                    c.mergeAttributes && c.mergeAttributes(j);
                    b = c.nodeName.toLowerCase();
                    if (b === "object") c.outerHTML = j.outerHTML;
                    else if (b === "input" && (j.type === "checkbox" || j.type === "radio")) {
                        if (j.checked) c.defaultChecked =
                        c.checked = j.checked;
                        if (c.value !== j.value) c.value = j.value
                    } else if (b === "option") c.selected = j.defaultSelected;
                    else if (b === "input" || b === "textarea") c.defaultValue = j.defaultValue;
                    c.removeAttribute(i.expando)
                }
            }
            function h(j) {
                return "getElementsByTagName" in j ? j.getElementsByTagName("*") : "querySelectorAll" in j ? j.querySelectorAll("*") : []
            }
            function u(j) {
                if (j.type === "checkbox" || j.type === "radio") j.defaultChecked = j.checked
            }
            function C(j) {
                i.nodeName(j, "input") ? u(j) : "getElementsByTagName" in j && i.grep(j.getElementsByTagName("input"),
                u)
            }
            function E(j, c) {
                c.src ? i.ajax({
                    url: c.src,
                    async: !1,
                    dataType: "script"
                }) : i.globalEval((c.text || c.textContent || c.innerHTML || "").replace(jb, "/*$0*/"));
                c.parentNode && c.parentNode.removeChild(c)
            }
            function D(j, c, b) {
                var d = c === "width" ? j.offsetWidth: j.offsetHeight,
                h = c === "width" ? Gb: Hb;
                if (d > 0) return b !== "border" && i.each(h,
                function() {
                    b || (d -= parseFloat(i.css(j, "padding" + this)) || 0);
                    b === "margin" ? d += parseFloat(i.css(j, b + this)) || 0: d -= parseFloat(i.css(j, "border" + this + "Width")) || 0
                }),
                d + "px";
                d = Aa(j, c, c);
                if (d < 0 || d == null) d =
                j.style[c] || 0;
                d = parseFloat(d) || 0;
                b && i.each(h,
                function() {
                    d += parseFloat(i.css(j, "padding" + this)) || 0;
                    b !== "padding" && (d += parseFloat(i.css(j, "border" + this + "Width")) || 0);
                    b === "margin" && (d += parseFloat(i.css(j, b + this)) || 0)
                });
                return d + "px"
            }
            function q(j) {
                return function(c, b) {
                    var k;
                    typeof c !== "string" && (b = c, c = "*");
                    if (i.isFunction(b)) for (var d = c.toLowerCase().split(kb), h = 0, f = d.length, e, l; h < f; h++) e = d[h],
                    (l = /^\+/.test(e)) && (e = e.substr(1) || "*"),
                    k = j[e] = j[e] || [],
                    e = k,
                    e[l ? "unshift": "push"](b)
                }
            }
            function s(j, b, d, i, h, f) {
                h =
                h || b.dataTypes[0];
                f = f || {};
                f[h] = !0;
                for (var h = j[h], e = 0, l = h ? h.length: 0, g = j === Xa, o; e < l && (g || !o); e++) o = h[e](b, d, i),
                typeof o === "string" && (!g || f[o] ? o = c: (b.dataTypes.unshift(o), o = s(j, b, d, i, o, f)));
                if ((g || !o) && !f["*"]) o = s(j, b, d, i, "*", f);
                return o
            }
            function G(j, c, b, d) {
                if (i.isArray(c)) i.each(c,
                function(c, h) {
                    b || Ib.test(j) ? d(j, h) : G(j + "[" + (typeof h === "object" || i.isArray(h) ? c: "") + "]", h, b, d)
                });
                else if (!b && c != null && typeof c === "object") for (var h in c) G(j + "[" + h + "]", c[h], b, d);
                else d(j, c)
            }
            function w() {
                try {
                    return new d.XMLHttpRequest
                } catch(j) {}
            }
            function A() {
                setTimeout(K, 0);
                return La = i.now()
            }
            function K() {
                La = c
            }
            function I(j, c) {
                var b = {};
                i.each(Ya.concat.apply([], Ya.slice(0, c)),
                function() {
                    b[this] = j
                });
                return b
            }
            function X(j) {
                if (!Pa[j]) {
                    var c = x.body,
                    b = i("<" + j + ">").appendTo(c),
                    d = b.css("display");
                    b.remove();
                    if (d === "none" || d === "") {
                        if (!qa) qa = x.createElement("iframe"),
                        qa.frameBorder = qa.width = qa.height = 0;
                        c.appendChild(qa);
                        if (!wa || !qa.createElement) wa = (qa.contentWindow || qa.contentDocument).document,
                        wa.write((x.compatMode === "CSS1Compat" ? "<!doctype html>":
                        "") + "<html><body>"),
                        wa.close();
                        b = wa.createElement(j);
                        wa.body.appendChild(b);
                        d = i.css(b, "display");
                        c.removeChild(qa)
                    }
                    Pa[j] = d
                }
                return Pa[j]
            }
            function pa(j) {
                return i.isWindow(j) ? j: j.nodeType === 9 ? j.defaultView || j.parentWindow: !1
            }
            var x = d.document,
            ca = d.navigator,
            Q = d.location,
            i = function() {
                function j() {
                    if (!b.isReady) {
                        try {
                            x.documentElement.doScroll("left")
                        } catch(c) {
                            setTimeout(j, 1);
                            return
                        }
                        b.ready()
                    }
                }
                var b = function(j, c) {
                    return new b.fn.init(j, c, f)
                },
                i = d.jQuery,
                h = d.$,
                f,
                e = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
                l = /\S/,
                g = /^\s+/,
                o = /\s+$/,
                m = /\d/,
                u = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
                n = /^[\],:{}\s]*$/,
                F = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
                C = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                B = /(?:^|:|,)(?:\s*\[)+/g,
                s = /(webkit)[ \/]([\w.]+)/,
                H = /(opera)(?:.*version)?[ \/]([\w.]+)/,
                E = /(msie) ([\w.]+)/,
                D = /(mozilla)(?:.*? rv:([\w.]+))?/,
                Ma = /-([a-z])/ig,
                Kb = function(j, b) {
                    return b.toUpperCase()
                },
                Q = ca.userAgent,
                O,
                Ba,
                q = Object.prototype.toString,
                V = Object.prototype.hasOwnProperty,
                G = Array.prototype.push,
                M = Array.prototype.slice,
                ea = String.prototype.trim,
                w = Array.prototype.indexOf,
                z = {};
                b.fn = b.prototype = {
                    constructor: b,
                    init: function(j, d, i) {
                        var h;
                        if (!j) return this;
                        if (j.nodeType) return this.context = this[0] = j,
                        this.length = 1,
                        this;
                        if (j === "body" && !d && x.body) return this.context = x,
                        this[0] = x.body,
                        this.selector = j,
                        this.length = 1,
                        this;
                        if (typeof j === "string") if ((h = j.charAt(0) === "<" && j.charAt(j.length - 1) === ">" && j.length >= 3 ? [null, j, null] : e.exec(j)) && (h[1] || !d)) if (h[1]) return i = (d = d instanceof b ? d[0] : d) ? d.ownerDocument || d: x,
                        (j = u.exec(j)) ? b.isPlainObject(d) ?
                        (j = [x.createElement(j[1])], b.fn.attr.call(j, d, !0)) : j = [i.createElement(j[1])] : (j = b.buildFragment([h[1]], [i]), j = (j.cacheable ? b.clone(j.fragment) : j.fragment).childNodes),
                        b.merge(this, j);
                        else {
                            if ((d = x.getElementById(h[2])) && d.parentNode) {
                                if (d.id !== h[2]) return i.find(j);
                                this.length = 1;
                                this[0] = d
                            }
                            this.context = x;
                            this.selector = j;
                            return this
                        } else return ! d || d.jquery ? (d || i).find(j) : this.constructor(d).find(j);
                        else if (b.isFunction(j)) return i.ready(j);
                        if (j.selector !== c) this.selector = j.selector,
                        this.context = j.context;
                        return b.makeArray(j, this)
                    },
                    selector: "",
                    jquery: "1.6.2",
                    length: 0,
                    size: function() {
                        return this.length
                    },
                    toArray: function() {
                        return M.call(this, 0)
                    },
                    get: function(j) {
                        return j == null ? this.toArray() : j < 0 ? this[this.length + j] : this[j]
                    },
                    pushStack: function(j, c, d) {
                        var i = this.constructor();
                        b.isArray(j) ? G.apply(i, j) : b.merge(i, j);
                        i.prevObject = this;
                        i.context = this.context;
                        if (c === "find") i.selector = this.selector + (this.selector ? " ": "") + d;
                        else if (c) i.selector = this.selector + "." + c + "(" + d + ")";
                        return i
                    },
                    each: function(j, c) {
                        return b.each(this,
                        j, c)
                    },
                    ready: function(j) {
                        b.bindReady();
                        O.done(j);
                        return this
                    },
                    eq: function(j) {
                        return j === -1 ? this.slice(j) : this.slice(j, +j + 1)
                    },
                    first: function() {
                        return this.eq(0)
                    },
                    last: function() {
                        return this.eq( - 1)
                    },
                    slice: function() {
                        return this.pushStack(M.apply(this, arguments), "slice", M.call(arguments).join(","))
                    },
                    map: function(j) {
                        return this.pushStack(b.map(this,
                        function(b, c) {
                            return j.call(b, c, b)
                        }))
                    },
                    end: function() {
                        return this.prevObject || this.constructor(null)
                    },
                    push: G,
                    sort: [].sort,
                    splice: [].splice
                };
                b.fn.init.prototype =
                b.fn;
                b.extend = b.fn.extend = function() {
                    var j,
                    d,
                    i,
                    h,
                    f,
                    e = arguments[0] || {},
                    l = 1,
                    g = arguments.length,
                    o = !1;
                    typeof e === "boolean" && (o = e, e = arguments[1] || {},
                    l = 2);
                    typeof e !== "object" && !b.isFunction(e) && (e = {});
                    g === l && (e = this, --l);
                    for (; l < g; l++) if ((j = arguments[l]) != null) for (d in j) i = e[d],
                    h = j[d],
                    e !== h && (o && h && (b.isPlainObject(h) || (f = b.isArray(h))) ? (f ? (f = !1, i = i && b.isArray(i) ? i: []) : i = i && b.isPlainObject(i) ? i: {},
                    e[d] = b.extend(o, i, h)) : h !== c && (e[d] = h));
                    return e
                };
                b.extend({
                    noConflict: function(j) {
                        if (d.$ === b) d.$ = h;
                        if (j && d.jQuery ===
                        b) d.jQuery = i;
                        return b
                    },
                    isReady: !1,
                    readyWait: 1,
                    holdReady: function(j) {
                        j ? b.readyWait++:b.ready(!0)
                    },
                    ready: function(j) {
                        if (j === !0 && !--b.readyWait || j !== !0 && !b.isReady) {
                            if (!x.body) return setTimeout(b.ready, 1);
                            b.isReady = !0;
                            j !== !0 && --b.readyWait > 0 || (O.resolveWith(x, [b]), b.fn.trigger && b(x).trigger("ready").unbind("ready"))
                        }
                    },
                    bindReady: function() {
                        if (!O) {
                            O = b._Deferred();
                            if (x.readyState === "complete") return setTimeout(b.ready, 1);
                            if (x.addEventListener) x.addEventListener("DOMContentLoaded", Ba, !1),
                            d.addEventListener("load",
                            b.ready, !1);
                            else if (x.attachEvent) {
                                x.attachEvent("onreadystatechange", Ba);
                                d.attachEvent("onload", b.ready);
                                var c = !1;
                                try {
                                    c = d.frameElement == null
                                } catch(i) {}
                                x.documentElement.doScroll && c && j()
                            }
                        }
                    },
                    isFunction: function(j) {
                        return b.type(j) === "function"
                    },
                    isArray: Array.isArray ||
                    function(j) {
                        return b.type(j) === "array"
                    },
                    isWindow: function(j) {
                        return j && typeof j === "object" && "setInterval" in j
                    },
                    isNaN: function(j) {
                        return j == null || !m.test(j) || isNaN(j)
                    },
                    type: function(j) {
                        return j == null ? String(j) : z[q.call(j)] || "object"
                    },
                    isPlainObject: function(j) {
                        if (!j ||
                        b.type(j) !== "object" || j.nodeType || b.isWindow(j)) return ! 1;
                        if (j.constructor && !V.call(j, "constructor") && !V.call(j.constructor.prototype, "isPrototypeOf")) return ! 1;
                        for (var d in j);
                        return d === c || V.call(j, d)
                    },
                    isEmptyObject: function(j) {
                        for (var b in j) return ! 1;
                        return ! 0
                    },
                    error: function(j) {
                        throw j;
                    },
                    parseJSON: function(j) {
                        if (typeof j !== "string" || !j) return null;
                        j = b.trim(j);
                        if (d.JSON && d.JSON.parse) return d.JSON.parse(j);
                        if (n.test(j.replace(F, "@").replace(C, "]").replace(B, ""))) return (new Function("return " + j))();
                        b.error("Invalid JSON: " + j)
                    },
                    parseXML: function(j, c, i) {
                        d.DOMParser ? (i = new DOMParser, c = i.parseFromString(j, "text/xml")) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = "false", c.loadXML(j));
                        i = c.documentElement; (!i || !i.nodeName || i.nodeName === "parsererror") && b.error("Invalid XML: " + j);
                        return c
                    },
                    noop: function() {},
                    globalEval: function(j) {
                        j && l.test(j) && (d.execScript ||
                        function(j) {
                            d.eval.call(d, j)
                        })(j)
                    },
                    camelCase: function(j) {
                        return j.replace(Ma, Kb)
                    },
                    nodeName: function(j, b) {
                        return j.nodeName && j.nodeName.toUpperCase() ===
                        b.toUpperCase()
                    },
                    each: function(j, d, i) {
                        var h,
                        f = 0,
                        e = j.length,
                        l = e === c || b.isFunction(j);
                        if (i) if (l) for (h in j) {
                            if (d.apply(j[h], i) === !1) break
                        } else for (; f < e;) {
                            if (d.apply(j[f++], i) === !1) break
                        } else if (l) for (h in j) {
                            if (d.call(j[h], h, j[h]) === !1) break
                        } else for (; f < e;) if (d.call(j[f], f, j[f++]) === !1) break;
                        return j
                    },
                    trim: ea ?
                    function(j) {
                        return j == null ? "": ea.call(j)
                    }: function(j) {
                        return j == null ? "": j.toString().replace(g, "").replace(o, "")
                    },
                    makeArray: function(j, c) {
                        var d = c || [];
                        if (j != null) {
                            var i = b.type(j);
                            j.length == null ||
                            i === "string" || i === "function" || i === "regexp" || b.isWindow(j) ? G.call(d, j) : b.merge(d, j)
                        }
                        return d
                    },
                    inArray: function(j, b) {
                        if (w) return w.call(b, j);
                        for (var c = 0, d = b.length; c < d; c++) if (b[c] === j) return c;
                        return - 1
                    },
                    merge: function(j, b) {
                        var d = j.length,
                        i = 0;
                        if (typeof b.length === "number") for (var h = b.length; i < h; i++) j[d++] = b[i];
                        else for (; b[i] !== c;) j[d++] = b[i++];
                        j.length = d;
                        return j
                    },
                    grep: function(j, b, c) {
                        for (var d = [], i, c = !!c, h = 0, f = j.length; h < f; h++) i = !!b(j[h], h),
                        c !== i && d.push(j[h]);
                        return d
                    },
                    map: function(j, d, i) {
                        var h,
                        f,
                        e = [],
                        l = 0,
                        g = j.length;
                        if (j instanceof b || g !== c && typeof g === "number" && (g > 0 && j[0] && j[g - 1] || g === 0 || b.isArray(j))) for (; l < g; l++) h = d(j[l], l, i),
                        h != null && (e[e.length] = h);
                        else for (f in j) h = d(j[f], f, i),
                        h != null && (e[e.length] = h);
                        return e.concat.apply([], e)
                    },
                    guid: 1,
                    proxy: function(j, d) {
                        if (typeof d === "string") var i = j[d],
                        d = j,
                        j = i;
                        if (!b.isFunction(j)) return c;
                        var h = M.call(arguments, 2),
                        i = function() {
                            return j.apply(d, h.concat(M.call(arguments)))
                        };
                        i.guid = j.guid = j.guid || i.guid || b.guid++;
                        return i
                    },
                    access: function(j, d, i, h,
                    f, e) {
                        var l = j.length;
                        if (typeof d === "object") {
                            for (var g in d) b.access(j, g, d[g], h, f, i);
                            return j
                        }
                        if (i !== c) {
                            h = !e && h && b.isFunction(i);
                            for (g = 0; g < l; g++) f(j[g], d, h ? i.call(j[g], g, f(j[g], d)) : i, e);
                            return j
                        }
                        return l ? f(j[0], d) : c
                    },
                    now: function() {
                        return (new Date).getTime()
                    },
                    uaMatch: function(j) {
                        j = j.toLowerCase();
                        j = s.exec(j) || H.exec(j) || E.exec(j) || j.indexOf("compatible") < 0 && D.exec(j) || [];
                        return {
                            browser: j[1] || "",
                            version: j[2] || "0"
                        }
                    },
                    sub: function() {
                        function j(b, c) {
                            return new j.fn.init(b, c)
                        }
                        b.extend(!0, j, this);
                        j.superclass =
                        this;
                        j.fn = j.prototype = this();
                        j.fn.constructor = j;
                        j.sub = this.sub;
                        j.fn.init = function(d, i) {
                            i && i instanceof b && !(i instanceof j) && (i = j(i));
                            return b.fn.init.call(this, d, i, c)
                        };
                        j.fn.init.prototype = j.fn;
                        var c = j(x);
                        return j
                    },
                    browser: {}
                });
                b.each("Boolean Number String Function Array Date RegExp Object".split(" "),
                function(j, b) {
                    z["[object " + b + "]"] = b.toLowerCase()
                });
                Q = b.uaMatch(Q);
                if (Q.browser) b.browser[Q.browser] = !0,
                b.browser.version = Q.version;
                if (b.browser.webkit) b.browser.safari = !0;
                l.test("\u00a0") && (g = /^[\s\xA0]+/,
                o = /[\s\xA0]+$/);
                f = b(x);
                x.addEventListener ? Ba = function() {
                    x.removeEventListener("DOMContentLoaded", Ba, !1);
                    b.ready()
                }: x.attachEvent && (Ba = function() {
                    x.readyState === "complete" && (x.detachEvent("onreadystatechange", Ba), b.ready())
                });
                return b
            } (),
            ia = "done fail isResolved isRejected promise then always pipe".split(" "),
            na = [].slice;
            i.extend({
                _Deferred: function() {
                    var j = [],
                    b,
                    c,
                    d,
                    h = {
                        done: function() {
                            if (!d) {
                                var c = arguments,
                                f,
                                e,
                                l,
                                g,
                                o;
                                b && (o = b, b = 0);
                                f = 0;
                                for (e = c.length; f < e; f++) l = c[f],
                                g = i.type(l),
                                g === "array" ? h.done.apply(h,
                                l) : g === "function" && j.push(l);
                                o && h.resolveWith(o[0], o[1])
                            }
                            return this
                        },
                        resolveWith: function(i, h) {
                            if (!d && !b && !c) {
                                h = h || [];
                                c = 1;
                                try {
                                    for (; j[0];) j.shift().apply(i, h)
                                } finally {
                                    b = [i, h],
                                    c = 0
                                }
                            }
                            return this
                        },
                        resolve: function() {
                            h.resolveWith(this, arguments);
                            return this
                        },
                        isResolved: function() {
                            return ! (!c && !b)
                        },
                        cancel: function() {
                            d = 1;
                            j = [];
                            return this
                        }
                    };
                    return h
                },
                Deferred: function(j) {
                    var b = i._Deferred(),
                    c = i._Deferred(),
                    d;
                    i.extend(b, {
                        then: function(j, c) {
                            b.done(j).fail(c);
                            return this
                        },
                        always: function() {
                            return b.done.apply(b,
                            arguments).fail.apply(this, arguments)
                        },
                        fail: c.done,
                        rejectWith: c.resolveWith,
                        reject: c.resolve,
                        isRejected: c.isResolved,
                        pipe: function(j, c) {
                            return i.Deferred(function(d) {
                                i.each({
                                    done: [j, "resolve"],
                                    fail: [c, "reject"]
                                },
                                function(j, c) {
                                    var h = c[0],
                                    f = c[1],
                                    e;
                                    if (i.isFunction(h)) b[j](function() {
                                        if ((e = h.apply(this, arguments)) && i.isFunction(e.promise)) e.promise().then(d.resolve, d.reject);
                                        else d[f](e)
                                    });
                                    else b[j](d[f])
                                })
                            }).promise()
                        },
                        promise: function(j) {
                            if (j == null) {
                                if (d) return d;
                                d = j = {}
                            }
                            for (var c = ia.length; c--;) j[ia[c]] =
                            b[ia[c]];
                            return j
                        }
                    });
                    b.done(c.cancel).fail(b.cancel);
                    delete b.cancel;
                    j && j.call(b, b);
                    return b
                },
                when: function(j) {
                    function b(j) {
                        return function(b) {
                            c[j] = arguments.length > 1 ? na.call(arguments, 0) : b; --f || e.resolveWith(e, na.call(c, 0))
                        }
                    }
                    var c = arguments,
                    d = 0,
                    h = c.length,
                    f = h,
                    e = h <= 1 && j && i.isFunction(j.promise) ? j: i.Deferred();
                    if (h > 1) {
                        for (; d < h; d++) c[d] && i.isFunction(c[d].promise) ? c[d].promise().then(b(d), e.reject) : --f;
                        f || e.resolveWith(e, c)
                    } else e !== j && e.resolveWith(e, h ? [j] : []);
                    return e.promise()
                }
            });
            i.support = function() {
                var j =
                x.createElement("div"),
                b = x.documentElement,
                c,
                d,
                h,
                f,
                e,
                l;
                j.setAttribute("className", "t");
                j.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
                c = j.getElementsByTagName("*");
                d = j.getElementsByTagName("a")[0];
                if (!c || !c.length || !d) return {};
                h = x.createElement("select");
                f = h.appendChild(x.createElement("option"));
                c = j.getElementsByTagName("input")[0];
                e = {
                    leadingWhitespace: j.firstChild.nodeType === 3,
                    tbody: !j.getElementsByTagName("tbody").length,
                    htmlSerialize: !!j.getElementsByTagName("link").length,
                    style: /top/.test(d.getAttribute("style")),
                    hrefNormalized: d.getAttribute("href") === "/a",
                    opacity: /^0.55$/.test(d.style.opacity),
                    cssFloat: !!d.style.cssFloat,
                    checkOn: c.value === "on",
                    optSelected: f.selected,
                    getSetAttribute: j.className !== "t",
                    submitBubbles: !0,
                    changeBubbles: !0,
                    focusinBubbles: !1,
                    deleteExpando: !0,
                    noCloneEvent: !0,
                    inlineBlockNeedsLayout: !1,
                    shrinkWrapBlocks: !1,
                    reliableMarginRight: !0
                };
                c.checked = !0;
                e.noCloneChecked = c.cloneNode(!0).checked;
                h.disabled =
                !0;
                e.optDisabled = !f.disabled;
                try {
                    delete j.test
                } catch(g) {
                    e.deleteExpando = !1
                } ! j.addEventListener && j.attachEvent && j.fireEvent && (j.attachEvent("onclick",
                function() {
                    e.noCloneEvent = !1
                }), j.cloneNode(!0).fireEvent("onclick"));
                c = x.createElement("input");
                c.value = "t";
                c.setAttribute("type", "radio");
                e.radioValue = c.value === "t";
                c.setAttribute("checked", "checked");
                j.appendChild(c);
                d = x.createDocumentFragment();
                d.appendChild(j.firstChild);
                e.checkClone = d.cloneNode(!0).cloneNode(!0).lastChild.checked;
                j.innerHTML = "";
                j.style.width = j.style.paddingLeft = "1px";
                h = x.getElementsByTagName("body")[0];
                d = x.createElement(h ? "div": "body");
                f = {
                    visibility: "hidden",
                    width: 0,
                    height: 0,
                    border: 0,
                    margin: 0
                };
                h && i.extend(f, {
                    position: "absolute",
                    left: -1E3,
                    top: -1E3
                });
                for (l in f) d.style[l] = f[l];
                d.appendChild(j);
                b = h || b;
                b.insertBefore(d, b.firstChild);
                e.appendChecked = c.checked;
                e.boxModel = j.offsetWidth === 2;
                if ("zoom" in j.style) j.style.display = "inline",
                j.style.zoom = 1,
                e.inlineBlockNeedsLayout = j.offsetWidth === 2,
                j.style.display = "",
                j.innerHTML = "<div style='width:4px;'></div>",
                e.shrinkWrapBlocks = j.offsetWidth !== 2;
                j.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
                h = j.getElementsByTagName("td");
                c = h[0].offsetHeight === 0;
                h[0].style.display = "";
                h[1].style.display = "none";
                e.reliableHiddenOffsets = c && h[0].offsetHeight === 0;
                j.innerHTML = "";
                if (x.defaultView && x.defaultView.getComputedStyle) c = x.createElement("div"),
                c.style.width = "0",
                c.style.marginRight = "0",
                j.appendChild(c),
                e.reliableMarginRight = (parseInt((x.defaultView.getComputedStyle(c,
                null) || {
                    marginRight: 0
                }).marginRight, 10) || 0) === 0;
                d.innerHTML = "";
                b.removeChild(d);
                if (j.attachEvent) for (l in {
                    submit: 1,
                    change: 1,
                    focusin: 1
                }) b = "on" + l,
                c = b in j,
                c || (j.setAttribute(b, "return;"), c = typeof j[b] === "function"),
                e[l + "Bubbles"] = c;
                d = d = h = f = h = c = j = c = null;
                return e
            } ();
            i.boxModel = i.support.boxModel;
            var ha = /^(?:\{.*\}|\[.*\])$/,
            N = /([a-z])([A-Z])/g;
            i.extend({
                cache: {},
                uuid: 0,
                expando: "jQuery" + (i.fn.jquery + Math.random()).replace(/\D/g, ""),
                noData: {
                    embed: !0,
                    object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
                    applet: !0
                },
                hasData: function(j) {
                    j = j.nodeType ? i.cache[j[i.expando]] : j[i.expando];
                    return !! j && !f(j)
                },
                data: function(j, b, d, h) {
                    if (i.acceptData(j)) {
                        var e = i.expando,
                        f = typeof b === "string",
                        l = j.nodeType,
                        g = l ? i.cache: j,
                        o = l ? j[i.expando] : j[i.expando] && i.expando;
                        if (o && (!h || !o || g[o][e]) || !(f && d === c)) {
                            if (!o) l ? j[i.expando] = o = ++i.uuid: o = i.expando;
                            if (!g[o] && (g[o] = {},
                            !l)) g[o].toJSON = i.noop;
                            if (typeof b === "object" || typeof b === "function") h ? g[o][e] = i.extend(g[o][e], b) : g[o] = i.extend(g[o], b);
                            j = g[o];
                            h && (j[e] || (j[e] = {}), j = j[e]);
                            d !== c && (j[i.camelCase(b)] =
                            d);
                            return b === "events" && !j[b] ? j[e] && j[e].events: f ? j[i.camelCase(b)] || j[b] : j
                        }
                    }
                },
                removeData: function(j, b, c) {
                    if (i.acceptData(j)) {
                        var h = i.expando,
                        e = j.nodeType,
                        l = e ? i.cache: j,
                        g = e ? j[i.expando] : i.expando;
                        if (l[g]) {
                            if (b) {
                                var o = c ? l[g][h] : l[g];
                                if (o && (delete o[b], !f(o))) return
                            }
                            if (c && (delete l[g][h], !f(l[g]))) return;
                            b = l[g][h];
                            i.support.deleteExpando || l != d ? delete l[g] : l[g] = null;
                            if (b) {
                                l[g] = {};
                                if (!e) l[g].toJSON = i.noop;
                                l[g][h] = b
                            } else e && (i.support.deleteExpando ? delete j[i.expando] : j.removeAttribute ? j.removeAttribute(i.expando) :
                            j[i.expando] = null)
                        }
                    }
                },
                _data: function(j, b, c) {
                    return i.data(j, b, c, !0)
                },
                acceptData: function(j) {
                    if (j.nodeName) {
                        var b = i.noData[j.nodeName.toLowerCase()];
                        if (b) return ! (b === !0 || j.getAttribute("classid") !== b)
                    }
                    return ! 0
                }
            });
            i.fn.extend({
                data: function(j, b) {
                    var d = null;
                    if (typeof j === "undefined") {
                        if (this.length && (d = i.data(this[0]), this[0].nodeType === 1)) for (var h = this[0].attributes, f, l = 0, g = h.length; l < g; l++) f = h[l].name,
                        f.indexOf("data-") === 0 && (f = i.camelCase(f.substring(5)), e(this[0], f, d[f]));
                        return d
                    } else if (typeof j ===
                    "object") return this.each(function() {
                        i.data(this, j)
                    });
                    var o = j.split(".");
                    o[1] = o[1] ? "." + o[1] : "";
                    return b === c ? (d = this.triggerHandler("getData" + o[1] + "!", [o[0]]), d === c && this.length && (d = i.data(this[0], j), d = e(this[0], j, d)), d === c && o[1] ? this.data(o[0]) : d) : this.each(function() {
                        var c = i(this),
                        d = [o[0], b];
                        c.triggerHandler("setData" + o[1] + "!", d);
                        i.data(this, j, b);
                        c.triggerHandler("changeData" + o[1] + "!", d)
                    })
                },
                removeData: function(j) {
                    return this.each(function() {
                        i.removeData(this, j)
                    })
                }
            });
            i.extend({
                _mark: function(j, b) {
                    j &&
                    (b = (b || "fx") + "mark", i.data(j, b, (i.data(j, b, c, !0) || 0) + 1, !0))
                },
                _unmark: function(j, b, d) {
                    j !== !0 && (d = b, b = j, j = !1);
                    if (b) {
                        var d = d || "fx",
                        h = d + "mark"; (j = j ? 0: (i.data(b, h, c, !0) || 1) - 1) ? i.data(b, h, j, !0) : (i.removeData(b, h, !0), g(b, d, "mark"))
                    }
                },
                queue: function(j, b, d) {
                    if (j) {
                        var b = (b || "fx") + "queue",
                        h = i.data(j, b, c, !0);
                        d && (!h || i.isArray(d) ? h = i.data(j, b, i.makeArray(d), !0) : h.push(d));
                        return h || []
                    }
                },
                dequeue: function(j, b) {
                    var b = b || "fx",
                    c = i.queue(j, b),
                    d = c.shift();
                    d === "inprogress" && (d = c.shift());
                    d && (b === "fx" && c.unshift("inprogress"),
                    d.call(j,
                    function() {
                        i.dequeue(j, b)
                    }));
                    c.length || (i.removeData(j, b + "queue", !0), g(j, b, "queue"))
                }
            });
            i.fn.extend({
                queue: function(j, b) {
                    typeof j !== "string" && (b = j, j = "fx");
                    return b === c ? i.queue(this[0], j) : this.each(function() {
                        var c = i.queue(this, j, b);
                        j === "fx" && c[0] !== "inprogress" && i.dequeue(this, j)
                    })
                },
                dequeue: function(j) {
                    return this.each(function() {
                        i.dequeue(this, j)
                    })
                },
                delay: function(j, b) {
                    j = i.fx ? i.fx.speeds[j] || j: j;
                    b = b || "fx";
                    return this.queue(b,
                    function() {
                        var c = this;
                        setTimeout(function() {
                            i.dequeue(c, b)
                        },
                        j)
                    })
                },
                clearQueue: function(j) {
                    return this.queue(j || "fx", [])
                },
                promise: function(j) {
                    function b() {--f || d.resolveWith(h, [h])
                    }
                    typeof j !== "string" && (j = c);
                    var j = j || "fx",
                    d = i.Deferred(),
                    h = this,
                    e = h.length,
                    f = 1,
                    l = j + "defer",
                    g = j + "queue";
                    j += "mark";
                    for (var o; e--;) if (o = i.data(h[e], l, c, !0) || (i.data(h[e], g, c, !0) || i.data(h[e], j, c, !0)) && i.data(h[e], l, i._Deferred(), !0)) f++,
                    o.done(b);
                    b();
                    return d.promise()
                }
            });
            var aa = /[\n\t\r]/g,
            ba = /\s+/,
            da = /\r/g,
            Z = /^(?:button|input)$/i,
            J = /^(?:button|input|object|select|textarea)$/i,
            O = /^a(?:rea)?$/i,
            V = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
            ea = /\:|^on/,
            ra,
            Qa;
            i.fn.extend({
                attr: function(j, b) {
                    return i.access(this, j, b, !0, i.attr)
                },
                removeAttr: function(j) {
                    return this.each(function() {
                        i.removeAttr(this, j)
                    })
                },
                prop: function(j, b) {
                    return i.access(this, j, b, !0, i.prop)
                },
                removeProp: function(j) {
                    j = i.propFix[j] || j;
                    return this.each(function() {
                        try {
                            this[j] = c,
                            delete this[j]
                        } catch(b) {}
                    })
                },
                addClass: function(j) {
                    var b,
                    c,
                    d,
                    h,
                    e,
                    f,
                    l;
                    if (i.isFunction(j)) return this.each(function(b) {
                        i(this).addClass(j.call(this,
                        b, this.className))
                    });
                    if (j && typeof j === "string") {
                        b = j.split(ba);
                        c = 0;
                        for (d = this.length; c < d; c++) if (h = this[c], h.nodeType === 1) if (!h.className && b.length === 1) h.className = j;
                        else {
                            e = " " + h.className + " ";
                            f = 0;
                            for (l = b.length; f < l; f++)~e.indexOf(" " + b[f] + " ") || (e += b[f] + " ");
                            h.className = i.trim(e)
                        }
                    }
                    return this
                },
                removeClass: function(j) {
                    var b,
                    d,
                    h,
                    e,
                    f,
                    l,
                    g;
                    if (i.isFunction(j)) return this.each(function(b) {
                        i(this).removeClass(j.call(this, b, this.className))
                    });
                    if (j && typeof j === "string" || j === c) {
                        b = (j || "").split(ba);
                        d = 0;
                        for (h =
                        this.length; d < h; d++) if (e = this[d], e.nodeType === 1 && e.className) if (j) {
                            f = (" " + e.className + " ").replace(aa, " ");
                            l = 0;
                            for (g = b.length; l < g; l++) f = f.replace(" " + b[l] + " ", " ");
                            e.className = i.trim(f)
                        } else e.className = ""
                    }
                    return this
                },
                toggleClass: function(j, b) {
                    var c = typeof j,
                    d = typeof b === "boolean";
                    return i.isFunction(j) ? this.each(function(c) {
                        i(this).toggleClass(j.call(this, c, this.className, b), b)
                    }) : this.each(function() {
                        if (c === "string") for (var h, e = 0, f = i(this), l = b, g = j.split(ba); h = g[e++];) l = d ? l: !f.hasClass(h),
                        f[l ? "addClass":
                        "removeClass"](h);
                        else if (c === "undefined" || c === "boolean") this.className && i._data(this, "__className__", this.className),
                        this.className = this.className || j === !1 ? "": i._data(this, "__className__") || ""
                    })
                },
                hasClass: function(j) {
                    for (var j = " " + j + " ", b = 0, c = this.length; b < c; b++) if ((" " + this[b].className + " ").replace(aa, " ").indexOf(j) > -1) return ! 0;
                    return ! 1
                },
                val: function(j) {
                    var b,
                    d,
                    h = this[0];
                    if (!arguments.length) {
                        if (h) {
                            if ((b = i.valHooks[h.nodeName.toLowerCase()] || i.valHooks[h.type]) && "get" in b && (d = b.get(h, "value")) !==
                            c) return d;
                            d = h.value;
                            return typeof d === "string" ? d.replace(da, "") : d == null ? "": d
                        }
                        return c
                    }
                    var e = i.isFunction(j);
                    return this.each(function(d) {
                        var h = i(this);
                        if (this.nodeType === 1 && (d = e ? j.call(this, d, h.val()) : j, d == null ? d = "": typeof d === "number" ? d += "": i.isArray(d) && (d = i.map(d,
                        function(j) {
                            return j == null ? "": j + ""
                        })), b = i.valHooks[this.nodeName.toLowerCase()] || i.valHooks[this.type], !b || !("set" in b) || b.set(this, d, "value") === c)) this.value = d
                    })
                }
            });
            i.extend({
                valHooks: {
                    option: {
                        get: function(j) {
                            var b = j.attributes.value;
                            return ! b || b.specified ? j.value: j.text
                        }
                    },
                    select: {
                        get: function(j) {
                            var b,
                            c = j.selectedIndex,
                            d = [],
                            h = j.options,
                            j = j.type === "select-one";
                            if (c < 0) return null;
                            for (var e = j ? c: 0, f = j ? c + 1: h.length; e < f; e++) if (b = h[e], b.selected && (i.support.optDisabled ? !b.disabled: b.getAttribute("disabled") === null) && (!b.parentNode.disabled || !i.nodeName(b.parentNode, "optgroup"))) {
                                b = i(b).val();
                                if (j) return b;
                                d.push(b)
                            }
                            return j && !d.length && h.length ? i(h[c]).val() : d
                        },
                        set: function(j, b) {
                            var c = i.makeArray(b);
                            i(j).find("option").each(function() {
                                this.selected =
                                i.inArray(i(this).val(), c) >= 0
                            });
                            if (!c.length) j.selectedIndex = -1;
                            return c
                        }
                    }
                },
                attrFn: {
                    val: !0,
                    css: !0,
                    html: !0,
                    text: !0,
                    data: !0,
                    width: !0,
                    height: !0,
                    offset: !0
                },
                attrFix: {
                    tabindex: "tabIndex"
                },
                attr: function(j, b, d, h) {
                    var e = j.nodeType;
                    if (!j || e === 3 || e === 8 || e === 2) return c;
                    if (h && b in i.attrFn) return i(j)[b](d);
                    if (! ("getAttribute" in j)) return i.prop(j, b, d);
                    var f,
                    l;
                    if (h = e !== 1 || !i.isXMLDoc(j)) if (b = i.attrFix[b] || b, l = i.attrHooks[b], !l) if (V.test(b)) l = Qa;
                    else if (ra && b !== "className" && (i.nodeName(j, "form") || ea.test(b))) l =
                    ra;
                    return d !== c ? d === null ? (i.removeAttr(j, b), c) : l && "set" in l && h && (f = l.set(j, d, b)) !== c ? f: (j.setAttribute(b, "" + d), d) : l && "get" in l && h && (f = l.get(j, b)) !== null ? f: (f = j.getAttribute(b), f === null ? c: f)
                },
                removeAttr: function(j, b) {
                    var c;
                    if (j.nodeType === 1 && (b = i.attrFix[b] || b, i.support.getSetAttribute ? j.removeAttribute(b) : (i.attr(j, b, ""), j.removeAttributeNode(j.getAttributeNode(b))), V.test(b) && (c = i.propFix[b] || b) in j)) j[c] = !1
                },
                attrHooks: {
                    type: {
                        set: function(j, b) {
                            if (Z.test(j.nodeName) && j.parentNode) i.error("type property can't be changed");
                            else if (!i.support.radioValue && b === "radio" && i.nodeName(j, "input")) {
                                var c = j.value;
                                j.setAttribute("type", b);
                                if (c) j.value = c;
                                return b
                            }
                        }
                    },
                    tabIndex: {
                        get: function(j) {
                            var b = j.getAttributeNode("tabIndex");
                            return b && b.specified ? parseInt(b.value, 10) : J.test(j.nodeName) || O.test(j.nodeName) && j.href ? 0: c
                        }
                    },
                    value: {
                        get: function(j, b) {
                            return ra && i.nodeName(j, "button") ? ra.get(j, b) : b in j ? j.value: null
                        },
                        set: function(j, b, c) {
                            if (ra && i.nodeName(j, "button")) return ra.set(j, b, c);
                            j.value = b
                        }
                    }
                },
                propFix: {
                    tabindex: "tabIndex",
                    readonly: "readOnly",
                    "for": "htmlFor",
                    "class": "className",
                    maxlength: "maxLength",
                    cellspacing: "cellSpacing",
                    cellpadding: "cellPadding",
                    rowspan: "rowSpan",
                    colspan: "colSpan",
                    usemap: "useMap",
                    frameborder: "frameBorder",
                    contenteditable: "contentEditable"
                },
                prop: function(j, b, d) {
                    var h = j.nodeType;
                    if (!j || h === 3 || h === 8 || h === 2) return c;
                    var e,
                    f;
                    if (h !== 1 || !i.isXMLDoc(j)) b = i.propFix[b] || b,
                    f = i.propHooks[b];
                    return d !== c ? f && "set" in f && (e = f.set(j, d, b)) !== c ? e: j[b] = d: f && "get" in f && (e = f.get(j, b)) !== c ? e: j[b]
                },
                propHooks: {}
            });
            Qa = {
                get: function(j, b) {
                    return i.prop(j,
                    b) ? b.toLowerCase() : c
                },
                set: function(j, b, c) {
                    b === !1 ? i.removeAttr(j, c) : (b = i.propFix[c] || c, b in j && (j[b] = !0), j.setAttribute(c, c.toLowerCase()));
                    return c
                }
            };
            if (!i.support.getSetAttribute) i.attrFix = i.propFix,
            ra = i.attrHooks.name = i.attrHooks.title = i.valHooks.button = {
                get: function(j, b) {
                    var d;
                    return (d = j.getAttributeNode(b)) && d.nodeValue !== "" ? d.nodeValue: c
                },
                set: function(j, b, c) {
                    if (j = j.getAttributeNode(c)) return j.nodeValue = b
                }
            },
            i.each(["width", "height"],
            function(j, b) {
                i.attrHooks[b] = i.extend(i.attrHooks[b], {
                    set: function(j,
                    c) {
                        if (c === "") return j.setAttribute(b, "auto"),
                        c
                    }
                })
            });
            i.support.hrefNormalized || i.each(["href", "src", "width", "height"],
            function(j, b) {
                i.attrHooks[b] = i.extend(i.attrHooks[b], {
                    get: function(j) {
                        j = j.getAttribute(b, 2);
                        return j === null ? c: j
                    }
                })
            });
            if (!i.support.style) i.attrHooks.style = {
                get: function(j) {
                    return j.style.cssText.toLowerCase() || c
                },
                set: function(j, b) {
                    return j.style.cssText = "" + b
                }
            };
            if (!i.support.optSelected) i.propHooks.selected = i.extend(i.propHooks.selected, {
                get: function() {}
            });
            i.support.checkOn || i.each(["radio",
            "checkbox"],
            function() {
                i.valHooks[this] = {
                    get: function(j) {
                        return j.getAttribute("value") === null ? "on": j.value
                    }
                }
            });
            i.each(["radio", "checkbox"],
            function() {
                i.valHooks[this] = i.extend(i.valHooks[this], {
                    set: function(j, b) {
                        if (i.isArray(b)) return j.checked = i.inArray(i(j).val(), b) >= 0
                    }
                })
            });
            var Ga = /\.(.*)$/,
            Za = /^(?:textarea|input|select)$/i,
            wc = /\./g,
            Fb = / /g,
            Mb = /[^\w\s.|`]/g,
            Nb = function(j) {
                return j.replace(Mb, "\\$&")
            };
            i.event = {
                add: function(j, b, d, h) {
                    if (! (j.nodeType === 3 || j.nodeType === 8)) {
                        if (d === !1) d = m;
                        else if (!d) return;
                        var e,
                        f;
                        if (d.handler) e = d,
                        d = e.handler;
                        if (!d.guid) d.guid = i.guid++;
                        if (f = i._data(j)) {
                            var l = f.events,
                            g = f.handle;
                            if (!l) f.events = l = {};
                            if (!g) f.handle = g = function(j) {
                                return typeof i !== "undefined" && (!j || i.event.triggered !== j.type) ? i.event.handle.apply(g.elem, arguments) : c
                            };
                            g.elem = j;
                            for (var b = b.split(" "), o, u = 0, n; o = b[u++];) {
                                f = e ? i.extend({},
                                e) : {
                                    handler: d,
                                    data: h
                                };
                                o.indexOf(".") > -1 ? (n = o.split("."), o = n.shift(), f.namespace = n.slice(0).sort().join(".")) : (n = [], f.namespace = "");
                                f.type = o;
                                if (!f.guid) f.guid = d.guid;
                                var x = l[o],
                                F = i.event.special[o] || {};
                                if (!x && (x = l[o] = [], !F.setup || F.setup.call(j, h, n, g) === !1)) j.addEventListener ? j.addEventListener(o, g, !1) : j.attachEvent && j.attachEvent("on" + o, g);
                                if (F.add && (F.add.call(j, f), !f.handler.guid)) f.handler.guid = d.guid;
                                x.push(f);
                                i.event.global[o] = !0
                            }
                            j = null
                        }
                    }
                },
                global: {},
                remove: function(j, b, d, h) {
                    if (! (j.nodeType === 3 || j.nodeType === 8)) {
                        d === !1 && (d = m);
                        var f,
                        e,
                        l = 0,
                        g,
                        o,
                        u,
                        n,
                        x,
                        F,
                        C = i.hasData(j) && i._data(j),
                        B = C && C.events;
                        if (C && B) {
                            if (b && b.type) d = b.handler,
                            b = b.type;
                            if (!b || typeof b === "string" && b.charAt(0) ===
                            ".") for (f in b = b || "", B) i.event.remove(j, f + b);
                            else {
                                for (b = b.split(" "); f = b[l++];) if (n = f, g = f.indexOf(".") < 0, o = [], g || (o = f.split("."), f = o.shift(), u = RegExp("(^|\\.)" + i.map(o.slice(0).sort(), Nb).join("\\.(?:.*\\.)?") + "(\\.|$)")), x = B[f]) if (d) {
                                    n = i.event.special[f] || {};
                                    for (e = h || 0; e < x.length; e++) if (F = x[e], d.guid === F.guid) {
                                        if (g || u.test(F.namespace)) h == null && x.splice(e--, 1),
                                        n.remove && n.remove.call(j, F);
                                        if (h != null) break
                                    }
                                    if (x.length === 0 || h != null && x.length === 1)(!n.teardown || n.teardown.call(j, o) === !1) && i.removeEvent(j,
                                    f, C.handle),
                                    delete B[f]
                                } else for (e = 0; e < x.length; e++) if (F = x[e], g || u.test(F.namespace)) i.event.remove(j, n, F.handler, e),
                                x.splice(e--, 1);
                                if (i.isEmptyObject(B)) {
                                    if (b = C.handle) b.elem = null;
                                    delete C.events;
                                    delete C.handle;
                                    i.isEmptyObject(C) && i.removeData(j, c, !0)
                                }
                            }
                        }
                    }
                },
                customEvent: {
                    getData: !0,
                    setData: !0,
                    changeData: !0
                },
                trigger: function(j, b, h, f) {
                    var e = j.type || j,
                    l = [],
                    g;
                    e.indexOf("!") >= 0 && (e = e.slice(0, -1), g = !0);
                    e.indexOf(".") >= 0 && (l = e.split("."), e = l.shift(), l.sort());
                    if (h && !i.event.customEvent[e] || i.event.global[e]) {
                        j =
                        typeof j === "object" ? j[i.expando] ? j: new i.Event(e, j) : new i.Event(e);
                        j.type = e;
                        j.exclusive = g;
                        j.namespace = l.join(".");
                        j.namespace_re = RegExp("(^|\\.)" + l.join("\\.(?:.*\\.)?") + "(\\.|$)");
                        if (f || !h) j.preventDefault(),
                        j.stopPropagation();
                        if (h) {
                            if (! (h.nodeType === 3 || h.nodeType === 8)) {
                                j.result = c;
                                j.target = h;
                                b = b != null ? i.makeArray(b) : [];
                                b.unshift(j);
                                l = h;
                                f = e.indexOf(":") < 0 ? "on" + e: "";
                                do {
                                    g = i._data(l, "handle");
                                    j.currentTarget = l;
                                    g && g.apply(l, b);
                                    if (f && i.acceptData(l) && l[f] && l[f].apply(l, b) === !1) j.result = !1,
                                    j.preventDefault();
                                    l = l.parentNode || l.ownerDocument || l === j.target.ownerDocument && d
                                }
                                while (l && !j.isPropagationStopped());
                                if (!j.isDefaultPrevented()) {
                                    var o,
                                    l = i.event.special[e] || {};
                                    if ((!l._default || l._default.call(h.ownerDocument, j) === !1) && !(e === "click" && i.nodeName(h, "a")) && i.acceptData(h)) {
                                        try {
                                            if (f && h[e])(o = h[f]) && (h[f] = null),
                                            i.event.triggered = e,
                                            h[e]()
                                        } catch(m) {}
                                        o && (h[f] = o);
                                        i.event.triggered = c
                                    }
                                }
                                return j.result
                            }
                        } else i.each(i.cache,
                        function() {
                            var c = this[i.expando];
                            c && c.events && c.events[e] && i.event.trigger(j, b, c.handle.elem)
                        })
                    }
                },
                handle: function(b) {
                    var b = i.event.fix(b || d.event),
                    h = ((i._data(this, "events") || {})[b.type] || []).slice(0),
                    e = !b.exclusive && !b.namespace,
                    f = Array.prototype.slice.call(arguments, 0);
                    f[0] = b;
                    b.currentTarget = this;
                    for (var l = 0, g = h.length; l < g; l++) {
                        var o = h[l];
                        if (e || b.namespace_re.test(o.namespace)) {
                            b.handler = o.handler;
                            b.data = o.data;
                            b.handleObj = o;
                            o = o.handler.apply(this, f);
                            if (o !== c) b.result = o,
                            o === !1 && (b.preventDefault(), b.stopPropagation());
                            if (b.isImmediatePropagationStopped()) break
                        }
                    }
                    return b.result
                },
                props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
                fix: function(b) {
                    if (b[i.expando]) return b;
                    for (var d = b, b = i.Event(d), h = this.props.length, e; h;) e = this.props[--h],
                    b[e] = d[e];
                    if (!b.target) b.target = b.srcElement || x;
                    if (b.target.nodeType === 3) b.target = b.target.parentNode;
                    if (!b.relatedTarget && b.fromElement) b.relatedTarget = b.fromElement === b.target ? b.toElement: b.fromElement;
                    if (b.pageX == null && b.clientX != null) h = b.target.ownerDocument || x,
                    d = h.documentElement,
                    h = h.body,
                    b.pageX = b.clientX + (d && d.scrollLeft || h && h.scrollLeft || 0) - (d && d.clientLeft || h && h.clientLeft || 0),
                    b.pageY =
                    b.clientY + (d && d.scrollTop || h && h.scrollTop || 0) - (d && d.clientTop || h && h.clientTop || 0);
                    if (b.which == null && (b.charCode != null || b.keyCode != null)) b.which = b.charCode != null ? b.charCode: b.keyCode;
                    if (!b.metaKey && b.ctrlKey) b.metaKey = b.ctrlKey;
                    if (!b.which && b.button !== c) b.which = b.button & 1 ? 1: b.button & 2 ? 3: b.button & 4 ? 2: 0;
                    return b
                },
                guid: 1E8,
                proxy: i.proxy,
                special: {
                    ready: {
                        setup: i.bindReady,
                        teardown: i.noop
                    },
                    live: {
                        add: function(b) {
                            i.event.add(this, o(b.origType, b.selector), i.extend({},
                            b, {
                                handler: l,
                                guid: b.handler.guid
                            }))
                        },
                        remove: function(b) {
                            i.event.remove(this,
                            o(b.origType, b.selector), b)
                        }
                    },
                    beforeunload: {
                        setup: function(b, c, d) {
                            if (i.isWindow(this)) this.onbeforeunload = d
                        },
                        teardown: function(b, c) {
                            if (this.onbeforeunload === c) this.onbeforeunload = null
                        }
                    }
                }
            };
            i.removeEvent = x.removeEventListener ?
            function(b, c, d) {
                b.removeEventListener && b.removeEventListener(c, d, !1)
            }: function(b, c, d) {
                b.detachEvent && b.detachEvent("on" + c, d)
            };
            i.Event = function(b, c) {
                if (!this.preventDefault) return new i.Event(b, c);
                b && b.type ? (this.originalEvent = b, this.type = b.type, this.isDefaultPrevented = b.defaultPrevented ||
                b.returnValue === !1 || b.getPreventDefault && b.getPreventDefault() ? n: m) : this.type = b;
                c && i.extend(this, c);
                this.timeStamp = i.now();
                this[i.expando] = !0
            };
            i.Event.prototype = {
                preventDefault: function() {
                    this.isDefaultPrevented = n;
                    var b = this.originalEvent;
                    if (b) b.preventDefault ? b.preventDefault() : b.returnValue = !1
                },
                stopPropagation: function() {
                    this.isPropagationStopped = n;
                    var b = this.originalEvent;
                    if (b) b.stopPropagation && b.stopPropagation(),
                    b.cancelBubble = !0
                },
                stopImmediatePropagation: function() {
                    this.isImmediatePropagationStopped =
                    n;
                    this.stopPropagation()
                },
                isDefaultPrevented: m,
                isPropagationStopped: m,
                isImmediatePropagationStopped: m
            };
            var mb = function(b) {
                var c = b.relatedTarget,
                d = !1,
                h = b.type;
                b.type = b.data;
                if (c !== this && (c && (d = i.contains(this, c)), !d)) i.event.handle.apply(this, arguments),
                b.type = h
            },
            $a = function(b) {
                b.type = b.data;
                i.event.handle.apply(this, arguments)
            };
            i.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout"
            },
            function(b, c) {
                i.event.special[b] = {
                    setup: function(d) {
                        i.event.add(this, c, d && d.selector ? $a: mb, b)
                    },
                    teardown: function(b) {
                        i.event.remove(this,
                        c, b && b.selector ? $a: mb)
                    }
                }
            });
            if (!i.support.submitBubbles) i.event.special.submit = {
                setup: function() {
                    if (i.nodeName(this, "form")) return ! 1;
                    else i.event.add(this, "click.specialSubmit",
                    function(j) {
                        var c = j.target,
                        d = c.type; (d === "submit" || d === "image") && i(c).closest("form").length && b("submit", this, arguments)
                    }),
                    i.event.add(this, "keypress.specialSubmit",
                    function(j) {
                        var c = j.target,
                        d = c.type; (d === "text" || d === "password") && i(c).closest("form").length && j.keyCode === 13 && b("submit", this, arguments)
                    })
                },
                teardown: function() {
                    i.event.remove(this,
                    ".specialSubmit")
                }
            };
            if (!i.support.changeBubbles) {
                var Ia,
                Ca = function(b) {
                    var c = b.type,
                    d = b.value;
                    if (c === "radio" || c === "checkbox") d = b.checked;
                    else if (c === "select-multiple") d = b.selectedIndex > -1 ? i.map(b.options,
                    function(b) {
                        return b.selected
                    }).join("-") : "";
                    else if (i.nodeName(b, "select")) d = b.selectedIndex;
                    return d
                },
                xa = function(b, d) {
                    var h = b.target,
                    e,
                    f;
                    if (Za.test(h.nodeName) && !h.readOnly && (e = i._data(h, "_change_data"), f = Ca(h), (b.type !== "focusout" || h.type !== "radio") && i._data(h, "_change_data", f), !(e === c || f === e))) if (e !=
                    null || f) b.type = "change",
                    b.liveFired = c,
                    i.event.trigger(b, d, h)
                };
                i.event.special.change = {
                    filters: {
                        focusout: xa,
                        beforedeactivate: xa,
                        click: function(b) {
                            var c = b.target,
                            d = i.nodeName(c, "input") ? c.type: ""; (d === "radio" || d === "checkbox" || i.nodeName(c, "select")) && xa.call(this, b)
                        },
                        keydown: function(b) {
                            var c = b.target,
                            d = i.nodeName(c, "input") ? c.type: ""; (b.keyCode === 13 && !i.nodeName(c, "textarea") || b.keyCode === 32 && (d === "checkbox" || d === "radio") || d === "select-multiple") && xa.call(this, b)
                        },
                        beforeactivate: function(b) {
                            b = b.target;
                            i._data(b, "_change_data", Ca(b))
                        }
                    },
                    setup: function() {
                        if (this.type === "file") return ! 1;
                        for (var b in Ia) i.event.add(this, b + ".specialChange", Ia[b]);
                        return Za.test(this.nodeName)
                    },
                    teardown: function() {
                        i.event.remove(this, ".specialChange");
                        return Za.test(this.nodeName)
                    }
                };
                Ia = i.event.special.change.filters;
                Ia.focus = Ia.beforeactivate
            }
            i.support.focusinBubbles || i.each({
                focus: "focusin",
                blur: "focusout"
            },
            function(b, c) {
                function d(b) {
                    var j = i.event.fix(b);
                    j.type = c;
                    j.originalEvent = {};
                    i.event.trigger(j, null, j.target);
                    j.isDefaultPrevented() &&
                    b.preventDefault()
                }
                var h = 0;
                i.event.special[c] = {
                    setup: function() {
                        h++===0 && x.addEventListener(b, d, !0)
                    },
                    teardown: function() {--h === 0 && x.removeEventListener(b, d, !0)
                    }
                }
            });
            i.each(["bind", "one"],
            function(b, d) {
                i.fn[d] = function(b, j, h) {
                    var e;
                    if (typeof b === "object") {
                        for (var f in b) this[d](f, j, b[f], h);
                        return this
                    }
                    if (arguments.length === 2 || j === !1) h = j,
                    j = c;
                    d === "one" ? (e = function(b) {
                        i(this).unbind(b, e);
                        return h.apply(this, arguments)
                    },
                    e.guid = h.guid || i.guid++) : e = h;
                    if (b === "unload" && d !== "one") this.one(b, j, h);
                    else {
                        f = 0;
                        for (var l =
                        this.length; f < l; f++) i.event.add(this[f], b, e, j)
                    }
                    return this
                }
            });
            i.fn.extend({
                unbind: function(b, c) {
                    if (typeof b === "object" && !b.preventDefault) for (var d in b) this.unbind(d, b[d]);
                    else {
                        d = 0;
                        for (var h = this.length; d < h; d++) i.event.remove(this[d], b, c)
                    }
                    return this
                },
                delegate: function(b, c, d, h) {
                    return this.live(c, d, h, b)
                },
                undelegate: function(b, c, d) {
                    return arguments.length === 0 ? this.unbind("live") : this.die(c, null, d, b)
                },
                trigger: function(b, c) {
                    return this.each(function() {
                        i.event.trigger(b, c, this)
                    })
                },
                triggerHandler: function(b,
                c) {
                    if (this[0]) return i.event.trigger(b, c, this[0], !0)
                },
                toggle: function(b) {
                    var c = arguments,
                    d = b.guid || i.guid++,
                    h = 0,
                    e = function(d) {
                        var e = (i.data(this, "lastToggle" + b.guid) || 0) % h;
                        i.data(this, "lastToggle" + b.guid, e + 1);
                        d.preventDefault();
                        return c[e].apply(this, arguments) || !1
                    };
                    for (e.guid = d; h < c.length;) c[h++].guid = d;
                    return this.click(e)
                },
                hover: function(b, c) {
                    return this.mouseenter(b).mouseleave(c || b)
                }
            });
            var sa = {
                focus: "focusin",
                blur: "focusout",
                mouseenter: "mouseover",
                mouseleave: "mouseout"
            };
            i.each(["live", "die"],
            function(b, d) {
                i.fn[d] = function(b, j, h, e) {
                    var f = 0,
                    l,
                    g,
                    u = e || this.selector,
                    n = e ? this: i(this.context);
                    if (typeof b === "object" && !b.preventDefault) {
                        for (l in b) n[d](l, j, b[l], u);
                        return this
                    }
                    if (d === "die" && !b && e && e.charAt(0) === ".") return n.unbind(e),
                    this;
                    if (j === !1 || i.isFunction(j)) h = j || m,
                    j = c;
                    for (b = (b || "").split(" "); (e = b[f++]) != null;) if (l = Ga.exec(e), g = "", l && (g = l[0], e = e.replace(Ga, "")), e === "hover") b.push("mouseenter" + g, "mouseleave" + g);
                    else if (l = e, sa[e] ? (b.push(sa[e] + g), e += g) : e = (sa[e] || e) + g, d === "live") {
                        g = 0;
                        for (var x =
                        n.length; g < x; g++) i.event.add(n[g], "live." + o(e, u), {
                            data: j,
                            selector: u,
                            handler: h,
                            origType: e,
                            origHandler: h,
                            preType: l
                        })
                    } else n.unbind("live." + o(e, u), h);
                    return this
                }
            });
            i.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
            function(b, c) {
                i.fn[c] = function(b, d) {
                    d == null && (d = b, b = null);
                    return arguments.length > 0 ? this.bind(c, b, d) : this.trigger(c)
                };
                i.attrFn && (i.attrFn[c] =
                !0)
            }); (function() {
                function b(c, d, j, h, i, e) {
                    for (var i = 0, f = h.length; i < f; i++) {
                        var l = h[i];
                        if (l) {
                            for (var g = !1, l = l[c]; l;) {
                                if (l.sizcache === j) {
                                    g = h[l.sizset];
                                    break
                                }
                                if (l.nodeType === 1 && !e) l.sizcache = j,
                                l.sizset = i;
                                if (l.nodeName.toLowerCase() === d) {
                                    g = l;
                                    break
                                }
                                l = l[c]
                            }
                            h[i] = g
                        }
                    }
                }
                function d(b, c, j, h, i, e) {
                    for (var i = 0, f = h.length; i < f; i++) {
                        var l = h[i];
                        if (l) {
                            for (var g = !1, l = l[b]; l;) {
                                if (l.sizcache === j) {
                                    g = h[l.sizset];
                                    break
                                }
                                if (l.nodeType === 1) {
                                    if (!e) l.sizcache = j,
                                    l.sizset = i;
                                    if (typeof c !== "string") {
                                        if (l === c) {
                                            g = !0;
                                            break
                                        }
                                    } else if (u.filter(c,
                                    [l]).length > 0) {
                                        g = l;
                                        break
                                    }
                                }
                                l = l[b]
                            }
                            h[i] = g
                        }
                    }
                }
                var h = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
                e = 0,
                f = Object.prototype.toString,
                l = !1,
                g = !0,
                o = /\\/g,
                m = /\W/; [0, 0].sort(function() {
                    g = !1;
                    return 0
                });
                var u = function(b, c, d, j) {
                    var d = d || [],
                    i = c = c || x;
                    if (c.nodeType !== 1 && c.nodeType !== 9) return [];
                    if (!b || typeof b !== "string") return d;
                    var e,
                    l,
                    g,
                    o,
                    m,
                    ka = !0,
                    C = u.isXML(c),
                    T = [],
                    B = b;
                    do
                    if (h.exec(""), e = h.exec(B)) if (B = e[3], T.push(e[1]), e[2]) {
                        o =
                        e[3];
                        break
                    }
                    while (e);
                    if (T.length > 1 && F.exec(b)) if (T.length === 2 && n.relative[T[0]]) l = ca(T[0] + T[1], c);
                    else for (l = n.relative[T[0]] ? [c] : u(T.shift(), c); T.length;) b = T.shift(),
                    n.relative[b] && (b += T.shift()),
                    l = ca(b, l);
                    else if (!j && T.length > 1 && c.nodeType === 9 && !C && n.match.ID.test(T[0]) && !n.match.ID.test(T[T.length - 1]) && (e = u.find(T.shift(), c, C), c = e.expr ? u.filter(e.expr, e.set)[0] : e.set[0]), c) {
                        e = j ? {
                            expr: T.pop(),
                            set: s(j)
                        }: u.find(T.pop(), T.length === 1 && (T[0] === "~" || T[0] === "+") && c.parentNode ? c.parentNode: c, C);
                        l = e.expr ?
                        u.filter(e.expr, e.set) : e.set;
                        for (T.length > 0 ? g = s(l) : ka = !1; T.length;) e = m = T.pop(),
                        n.relative[m] ? e = T.pop() : m = "",
                        e == null && (e = c),
                        n.relative[m](g, e, C)
                    } else g = [];
                    g || (g = l);
                    g || u.error(m || b);
                    if (f.call(g) === "[object Array]") if (ka) if (c && c.nodeType === 1) for (b = 0; g[b] != null; b++) g[b] && (g[b] === !0 || g[b].nodeType === 1 && u.contains(c, g[b])) && d.push(l[b]);
                    else for (b = 0; g[b] != null; b++) g[b] && g[b].nodeType === 1 && d.push(l[b]);
                    else d.push.apply(d, g);
                    else s(g, d);
                    o && (u(o, i, d, j), u.uniqueSort(d));
                    return d
                };
                u.uniqueSort = function(b) {
                    if (E &&
                    (l = g, b.sort(E), l)) for (var c = 1; c < b.length; c++) b[c] === b[c - 1] && b.splice(c--, 1);
                    return b
                };
                u.matches = function(b, c) {
                    return u(b, null, null, c)
                };
                u.matchesSelector = function(b, c) {
                    return u(c, null, null, [b]).length > 0
                };
                u.find = function(b, c, d) {
                    var j;
                    if (!b) return [];
                    for (var h = 0, i = n.order.length; h < i; h++) {
                        var e,
                        f = n.order[h];
                        if (e = n.leftMatch[f].exec(b)) {
                            var l = e[1];
                            e.splice(1, 1);
                            if (l.substr(l.length - 1) !== "\\" && (e[1] = (e[1] || "").replace(o, ""), j = n.find[f](e, c, d), j != null)) {
                                b = b.replace(n.match[f], "");
                                break
                            }
                        }
                    }
                    j || (j = typeof c.getElementsByTagName !==
                    "undefined" ? c.getElementsByTagName("*") : []);
                    return {
                        set: j,
                        expr: b
                    }
                };
                u.filter = function(b, d, j, h) {
                    for (var e, i, f = b, l = [], g = d, o = d && d[0] && u.isXML(d[0]); b && d.length;) {
                        for (var m in n.filter) if ((e = n.leftMatch[m].exec(b)) != null && e[2]) {
                            var x,
                            ka,
                            F = n.filter[m];
                            ka = e[1];
                            i = !1;
                            e.splice(1, 1);
                            if (ka.substr(ka.length - 1) !== "\\") {
                                g === l && (l = []);
                                if (n.preFilter[m]) if (e = n.preFilter[m](e, g, j, l, h, o)) {
                                    if (e === !0) continue
                                } else i = x = !0;
                                if (e) for (var T = 0; (ka = g[T]) != null; T++) if (ka) {
                                    x = F(ka, e, T, g);
                                    var C = h ^ !!x;
                                    j && x != null ? C ? i = !0: g[T] = !1: C &&
                                    (l.push(ka), i = !0)
                                }
                                if (x !== c) {
                                    j || (g = l);
                                    b = b.replace(n.match[m], "");
                                    if (!i) return [];
                                    break
                                }
                            }
                        }
                        if (b === f) if (i == null) u.error(b);
                        else break;
                        f = b
                    }
                    return g
                };
                u.error = function(b) {
                    throw "Syntax error, unrecognized expression: " + b;
                };
                var n = u.selectors = {
                    order: ["ID", "NAME", "TAG"],
                    match: {
                        ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                        CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                        NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                        ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                        TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                        CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                        POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                        PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
                    },
                    leftMatch: {},
                    attrMap: {
                        "class": "className",
                        "for": "htmlFor"
                    },
                    attrHandle: {
                        href: function(b) {
                            return b.getAttribute("href")
                        },
                        type: function(b) {
                            return b.getAttribute("type")
                        }
                    },
                    relative: {
                        "+": function(b, c) {
                            var d =
                            typeof c === "string",
                            j = d && !m.test(c),
                            d = d && !j;
                            j && (c = c.toLowerCase());
                            for (var j = 0, h = b.length, e; j < h; j++) if (e = b[j]) {
                                for (; (e = e.previousSibling) && e.nodeType !== 1;);
                                b[j] = d || e && e.nodeName.toLowerCase() === c ? e || !1: e === c
                            }
                            d && u.filter(c, b, !0)
                        },
                        ">": function(b, c) {
                            var d,
                            j = typeof c === "string",
                            h = 0,
                            e = b.length;
                            if (j && !m.test(c)) for (c = c.toLowerCase(); h < e; h++) {
                                if (d = b[h]) d = d.parentNode,
                                b[h] = d.nodeName.toLowerCase() === c ? d: !1
                            } else {
                                for (; h < e; h++)(d = b[h]) && (b[h] = j ? d.parentNode: d.parentNode === c);
                                j && u.filter(c, b, !0)
                            }
                        },
                        "": function(c,
                        h, i) {
                            var f,
                            l = e++,
                            g = d;
                            typeof h === "string" && !m.test(h) && (f = h = h.toLowerCase(), g = b);
                            g("parentNode", h, l, c, f, i)
                        },
                        "~": function(c, h, i) {
                            var f,
                            l = e++,
                            g = d;
                            typeof h === "string" && !m.test(h) && (f = h = h.toLowerCase(), g = b);
                            g("previousSibling", h, l, c, f, i)
                        }
                    },
                    find: {
                        ID: function(b, c, d) {
                            if (typeof c.getElementById !== "undefined" && !d) return (b = c.getElementById(b[1])) && b.parentNode ? [b] : []
                        },
                        NAME: function(b, c) {
                            if (typeof c.getElementsByName !== "undefined") {
                                for (var d = [], j = c.getElementsByName(b[1]), h = 0, e = j.length; h < e; h++) j[h].getAttribute("name") ===
                                b[1] && d.push(j[h]);
                                return d.length === 0 ? null: d
                            }
                        },
                        TAG: function(b, c) {
                            if (typeof c.getElementsByTagName !== "undefined") return c.getElementsByTagName(b[1])
                        }
                    },
                    preFilter: {
                        CLASS: function(b, c, d, j, h, e) {
                            b = " " + b[1].replace(o, "") + " ";
                            if (e) return b;
                            for (var e = 0, i; (i = c[e]) != null; e++) i && (h ^ (i.className && (" " + i.className + " ").replace(/[\t\n\r]/g, " ").indexOf(b) >= 0) ? d || j.push(i) : d && (c[e] = !1));
                            return ! 1
                        },
                        ID: function(b) {
                            return b[1].replace(o, "")
                        },
                        TAG: function(b) {
                            return b[1].replace(o, "").toLowerCase()
                        },
                        CHILD: function(b) {
                            if (b[1] ===
                            "nth") {
                                b[2] || u.error(b[0]);
                                b[2] = b[2].replace(/^\+|\s*/g, "");
                                var c = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(b[2] === "even" && "2n" || b[2] === "odd" && "2n+1" || !/\D/.test(b[2]) && "0n+" + b[2] || b[2]);
                                b[2] = c[1] + (c[2] || 1) - 0;
                                b[3] = c[3] - 0
                            } else b[2] && u.error(b[0]);
                            b[0] = e++;
                            return b
                        },
                        ATTR: function(b, c, d, j, h, e) {
                            c = b[1] = b[1].replace(o, ""); ! e && n.attrMap[c] && (b[1] = n.attrMap[c]);
                            b[4] = (b[4] || b[5] || "").replace(o, "");
                            b[2] === "~=" && (b[4] = " " + b[4] + " ");
                            return b
                        },
                        PSEUDO: function(b, c, d, j, e) {
                            if (b[1] === "not") if ((h.exec(b[3]) || "").length > 1 ||
                            /^\w/.test(b[3])) b[3] = u(b[3], null, null, c);
                            else return b = u.filter(b[3], c, d, 1 ^ e),
                            d || j.push.apply(j, b),
                            !1;
                            else if (n.match.POS.test(b[0]) || n.match.CHILD.test(b[0])) return ! 0;
                            return b
                        },
                        POS: function(b) {
                            b.unshift(!0);
                            return b
                        }
                    },
                    filters: {
                        enabled: function(b) {
                            return b.disabled === !1 && b.type !== "hidden"
                        },
                        disabled: function(b) {
                            return b.disabled === !0
                        },
                        checked: function(b) {
                            return b.checked === !0
                        },
                        selected: function(b) {
                            return b.selected === !0
                        },
                        parent: function(b) {
                            return !! b.firstChild
                        },
                        empty: function(b) {
                            return ! b.firstChild
                        },
                        has: function(b, c, d) {
                            return !! u(d[3], b).length
                        },
                        header: function(b) {
                            return /h\d/i.test(b.nodeName)
                        },
                        text: function(b) {
                            var c = b.getAttribute("type"),
                            d = b.type;
                            return b.nodeName.toLowerCase() === "input" && "text" === d && (c === d || c === null)
                        },
                        radio: function(b) {
                            return b.nodeName.toLowerCase() === "input" && "radio" === b.type
                        },
                        checkbox: function(b) {
                            return b.nodeName.toLowerCase() === "input" && "checkbox" === b.type
                        },
                        file: function(b) {
                            return b.nodeName.toLowerCase() === "input" && "file" === b.type
                        },
                        password: function(b) {
                            return b.nodeName.toLowerCase() ===
                            "input" && "password" === b.type
                        },
                        submit: function(b) {
                            var c = b.nodeName.toLowerCase();
                            return (c === "input" || c === "button") && "submit" === b.type
                        },
                        image: function(b) {
                            return b.nodeName.toLowerCase() === "input" && "image" === b.type
                        },
                        reset: function(b) {
                            var c = b.nodeName.toLowerCase();
                            return (c === "input" || c === "button") && "reset" === b.type
                        },
                        button: function(b) {
                            var c = b.nodeName.toLowerCase();
                            return c === "input" && "button" === b.type || c === "button"
                        },
                        input: function(b) {
                            return /input|select|textarea|button/i.test(b.nodeName)
                        },
                        focus: function(b) {
                            return b ===
                            b.ownerDocument.activeElement
                        }
                    },
                    setFilters: {
                        first: function(b, c) {
                            return c === 0
                        },
                        last: function(b, c, d, j) {
                            return c === j.length - 1
                        },
                        even: function(b, c) {
                            return c % 2 === 0
                        },
                        odd: function(b, c) {
                            return c % 2 === 1
                        },
                        lt: function(b, c, d) {
                            return c < d[3] - 0
                        },
                        gt: function(b, c, d) {
                            return c > d[3] - 0
                        },
                        nth: function(b, c, d) {
                            return d[3] - 0 === c
                        },
                        eq: function(b, c, d) {
                            return d[3] - 0 === c
                        }
                    },
                    filter: {
                        PSEUDO: function(b, c, d, j) {
                            var h = c[1],
                            e = n.filters[h];
                            if (e) return e(b, d, c, j);
                            else if (h === "contains") return (b.textContent || b.innerText || u.getText([b]) || "").indexOf(c[3]) >=
                            0;
                            else if (h === "not") {
                                c = c[3];
                                d = 0;
                                for (j = c.length; d < j; d++) if (c[d] === b) return ! 1;
                                return ! 0
                            } else u.error(h)
                        },
                        CHILD: function(b, c) {
                            var d = c[1],
                            j = b;
                            switch (d) {
                            case "only":
                            case "first":
                                for (; j = j.previousSibling;) if (j.nodeType === 1) return ! 1;
                                if (d === "first") return ! 0;
                                j = b;
                            case "last":
                                for (; j = j.nextSibling;) if (j.nodeType === 1) return ! 1;
                                return ! 0;
                            case "nth":
                                var d = c[2],
                                h = c[3];
                                if (d === 1 && h === 0) return ! 0;
                                var e = c[0],
                                i = b.parentNode;
                                if (i && (i.sizcache !== e || !b.nodeIndex)) {
                                    for (var f = 0, j = i.firstChild; j; j = j.nextSibling) if (j.nodeType ===
                                    1) j.nodeIndex = ++f;
                                    i.sizcache = e
                                }
                                j = b.nodeIndex - h;
                                return d === 0 ? j === 0: j % d === 0 && j / d >= 0
                            }
                        },
                        ID: function(b, c) {
                            return b.nodeType === 1 && b.getAttribute("id") === c
                        },
                        TAG: function(b, c) {
                            return c === "*" && b.nodeType === 1 || b.nodeName.toLowerCase() === c
                        },
                        CLASS: function(b, c) {
                            return (" " + (b.className || b.getAttribute("class")) + " ").indexOf(c) > -1
                        },
                        ATTR: function(b, c) {
                            var d = c[1],
                            d = n.attrHandle[d] ? n.attrHandle[d](b) : b[d] != null ? b[d] : b.getAttribute(d),
                            j = d + "",
                            h = c[2],
                            e = c[4];
                            return d == null ? h === "!=": h === "=" ? j === e: h === "*=" ? j.indexOf(e) >=
                            0: h === "~=" ? (" " + j + " ").indexOf(e) >= 0: !e ? j && d !== !1: h === "!=" ? j !== e: h === "^=" ? j.indexOf(e) === 0: h === "$=" ? j.substr(j.length - e.length) === e: h === "|=" ? j === e || j.substr(0, e.length + 1) === e + "-": !1
                        },
                        POS: function(b, c, d, j) {
                            var h = n.setFilters[c[2]];
                            if (h) return h(b, d, c, j)
                        }
                    }
                },
                F = n.match.POS,
                C = function(b, c) {
                    return "\\" + (c - 0 + 1)
                },
                B;
                for (B in n.match) n.match[B] = RegExp(n.match[B].source + /(?![^\[]*\])(?![^\(]*\))/.source),
                n.leftMatch[B] = RegExp(/(^(?:.|\r|\n)*?)/.source + n.match[B].source.replace(/\\(\d+)/g, C));
                var s = function(b,
                c) {
                    b = Array.prototype.slice.call(b, 0);
                    return c ? (c.push.apply(c, b), c) : b
                };
                try {
                    Array.prototype.slice.call(x.documentElement.childNodes, 0)
                } catch(H) {
                    s = function(b, c) {
                        var d = 0,
                        j = c || [];
                        if (f.call(b) === "[object Array]") Array.prototype.push.apply(j, b);
                        else if (typeof b.length === "number") for (var h = b.length; d < h; d++) j.push(b[d]);
                        else for (; b[d]; d++) j.push(b[d]);
                        return j
                    }
                }
                var E,
                D;
                x.documentElement.compareDocumentPosition ? E = function(b, c) {
                    return b === c ? (l = !0, 0) : !b.compareDocumentPosition || !c.compareDocumentPosition ? b.compareDocumentPosition ?
                    -1: 1: b.compareDocumentPosition(c) & 4 ? -1: 1
                }: (E = function(b, c) {
                    if (b === c) return l = !0,
                    0;
                    else if (b.sourceIndex && c.sourceIndex) return b.sourceIndex - c.sourceIndex;
                    var d,
                    j,
                    h = [],
                    e = [];
                    d = b.parentNode;
                    j = c.parentNode;
                    var i = d;
                    if (d === j) return D(b, c);
                    else if (d) {
                        if (!j) return 1
                    } else return - 1;
                    for (; i;) h.unshift(i),
                    i = i.parentNode;
                    for (i = j; i;) e.unshift(i),
                    i = i.parentNode;
                    d = h.length;
                    j = e.length;
                    for (i = 0; i < d && i < j; i++) if (h[i] !== e[i]) return D(h[i], e[i]);
                    return i === d ? D(b, e[i], -1) : D(h[i], c, 1)
                },
                D = function(b, c, d) {
                    if (b === c) return d;
                    for (b = b.nextSibling; b;) {
                        if (b === c) return - 1;
                        b = b.nextSibling
                    }
                    return 1
                });
                u.getText = function(b) {
                    for (var c = "", d, j = 0; b[j]; j++) d = b[j],
                    d.nodeType === 3 || d.nodeType === 4 ? c += d.nodeValue: d.nodeType !== 8 && (c += u.getText(d.childNodes));
                    return c
                }; (function() {
                    var b = x.createElement("div"),
                    d = "script" + (new Date).getTime(),
                    j = x.documentElement;
                    b.innerHTML = "<a name='" + d + "'/>";
                    j.insertBefore(b, j.firstChild);
                    if (x.getElementById(d)) n.find.ID = function(b, d, j) {
                        if (typeof d.getElementById !== "undefined" && !j) return (d = d.getElementById(b[1])) ?
                        d.id === b[1] || typeof d.getAttributeNode !== "undefined" && d.getAttributeNode("id").nodeValue === b[1] ? [d] : c: []
                    },
                    n.filter.ID = function(b, c) {
                        var d = typeof b.getAttributeNode !== "undefined" && b.getAttributeNode("id");
                        return b.nodeType === 1 && d && d.nodeValue === c
                    };
                    j.removeChild(b);
                    j = b = null
                })(); (function() {
                    var b = x.createElement("div");
                    b.appendChild(x.createComment(""));
                    if (b.getElementsByTagName("*").length > 0) n.find.TAG = function(b, c) {
                        var d = c.getElementsByTagName(b[1]);
                        if (b[1] === "*") {
                            for (var j = [], h = 0; d[h]; h++) d[h].nodeType ===
                            1 && j.push(d[h]);
                            d = j
                        }
                        return d
                    };
                    b.innerHTML = "<a href='#'></a>";
                    if (b.firstChild && typeof b.firstChild.getAttribute !== "undefined" && b.firstChild.getAttribute("href") !== "#") n.attrHandle.href = function(b) {
                        return b.getAttribute("href", 2)
                    };
                    b = null
                })();
                x.querySelectorAll &&
                function() {
                    var b = u,
                    c = x.createElement("div");
                    c.innerHTML = "<p class='TEST'></p>";
                    if (! (c.querySelectorAll && c.querySelectorAll(".TEST").length === 0)) {
                        u = function(c, d, j, h) {
                            d = d || x;
                            if (!h && !u.isXML(d)) {
                                var e = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(c);
                                if (e && (d.nodeType === 1 || d.nodeType === 9)) if (e[1]) return s(d.getElementsByTagName(c), j);
                                else if (e[2] && n.find.CLASS && d.getElementsByClassName) return s(d.getElementsByClassName(e[2]), j);
                                if (d.nodeType === 9) {
                                    if (c === "body" && d.body) return s([d.body], j);
                                    else if (e && e[3]) {
                                        var i = d.getElementById(e[3]);
                                        if (i && i.parentNode) {
                                            if (i.id === e[3]) return s([i], j)
                                        } else return s([], j)
                                    }
                                    try {
                                        return s(d.querySelectorAll(c), j)
                                    } catch(f) {}
                                } else if (d.nodeType === 1 && d.nodeName.toLowerCase() !== "object") {
                                    var e = d,
                                    l = (i = d.getAttribute("id")) ||
                                    "__sizzle__",
                                    g = d.parentNode,
                                    o = /^\s*[+~]/.test(c);
                                    i ? l = l.replace(/'/g, "\\$&") : d.setAttribute("id", l);
                                    if (o && g) d = d.parentNode;
                                    try {
                                        if (!o || g) return s(d.querySelectorAll("[id='" + l + "'] " + c), j)
                                    } catch(m) {} finally {
                                        i || e.removeAttribute("id")
                                    }
                                }
                            }
                            return b(c, d, j, h)
                        };
                        for (var d in b) u[d] = b[d];
                        c = null
                    }
                } (); (function() {
                    var b = x.documentElement,
                    c = b.matchesSelector || b.mozMatchesSelector || b.webkitMatchesSelector || b.msMatchesSelector;
                    if (c) {
                        var d = !c.call(x.createElement("div"), "div"),
                        j = !1;
                        try {
                            c.call(x.documentElement, "[test!='']:sizzle")
                        } catch(h) {
                            j =
                            !0
                        }
                        u.matchesSelector = function(b, h) {
                            h = h.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                            if (!u.isXML(b)) try {
                                if (j || !n.match.PSEUDO.test(h) && !/!=/.test(h)) {
                                    var e = c.call(b, h);
                                    if (e || !d || b.document && b.document.nodeType !== 11) return e
                                }
                            } catch(i) {}
                            return u(h, null, null, [b]).length > 0
                        }
                    }
                })(); (function() {
                    var b = x.createElement("div");
                    b.innerHTML = "<div class='test e'></div><div class='test'></div>";
                    if (b.getElementsByClassName && b.getElementsByClassName("e").length !== 0 && (b.lastChild.className = "e", b.getElementsByClassName("e").length !==
                    1)) n.order.splice(1, 0, "CLASS"),
                    n.find.CLASS = function(b, c, d) {
                        if (typeof c.getElementsByClassName !== "undefined" && !d) return c.getElementsByClassName(b[1])
                    },
                    b = null
                })();
                u.contains = x.documentElement.contains ?
                function(b, c) {
                    return b !== c && (b.contains ? b.contains(c) : !0)
                }: x.documentElement.compareDocumentPosition ?
                function(b, c) {
                    return !! (b.compareDocumentPosition(c) & 16)
                }: function() {
                    return ! 1
                };
                u.isXML = function(b) {
                    return (b = (b ? b.ownerDocument || b: 0).documentElement) ? b.nodeName !== "HTML": !1
                };
                var ca = function(b, c) {
                    for (var d,
                    j = [], h = "", e = c.nodeType ? [c] : c; d = n.match.PSEUDO.exec(b);) h += d[0],
                    b = b.replace(n.match.PSEUDO, "");
                    b = n.relative[b] ? b + "*": b;
                    d = 0;
                    for (var i = e.length; d < i; d++) u(b, e[d], j);
                    return u.filter(h, j)
                };
                i.find = u;
                i.expr = u.selectors;
                i.expr[":"] = i.expr.filters;
                i.unique = u.uniqueSort;
                i.text = u.getText;
                i.isXMLDoc = u.isXML;
                i.contains = u.contains
            })();
            var ja = /Until$/,
            W = /^(?:parents|prevUntil|prevAll)/,
            fa = /,/,
            Wa = /^.[^:#\[\.,]*$/,
            Ja = Array.prototype.slice,
            nb = i.expr.match.POS,
            Ob = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
            i.fn.extend({
                find: function(b) {
                    var c =
                    this,
                    d,
                    h;
                    if (typeof b !== "string") return i(b).filter(function() {
                        d = 0;
                        for (h = c.length; d < h; d++) if (i.contains(c[d], this)) return ! 0
                    });
                    var e = this.pushStack("", "find", b),
                    f,
                    l,
                    g;
                    d = 0;
                    for (h = this.length; d < h; d++) if (f = e.length, i.find(b, this[d], e), d > 0) for (l = f; l < e.length; l++) for (g = 0; g < f; g++) if (e[g] === e[l]) {
                        e.splice(l--, 1);
                        break
                    }
                    return e
                },
                has: function(b) {
                    var c = i(b);
                    return this.filter(function() {
                        for (var b = 0, d = c.length; b < d; b++) if (i.contains(this, c[b])) return ! 0
                    })
                },
                not: function(b) {
                    return this.pushStack(F(this, b, !1), "not",
                    b)
                },
                filter: function(b) {
                    return this.pushStack(F(this, b, !0), "filter", b)
                },
                is: function(b) {
                    return !! b && (typeof b === "string" ? i.filter(b, this).length > 0: this.filter(b).length > 0)
                },
                closest: function(b, c) {
                    var d = [],
                    h,
                    e,
                    f = this[0];
                    if (i.isArray(b)) {
                        var l,
                        g = {},
                        o = 1;
                        if (f && b.length) {
                            h = 0;
                            for (e = b.length; h < e; h++) l = b[h],
                            g[l] || (g[l] = nb.test(l) ? i(l, c || this.context) : l);
                            for (; f && f.ownerDocument && f !== c;) {
                                for (l in g) h = g[l],
                                (h.jquery ? h.index(f) > -1: i(f).is(h)) && d.push({
                                    selector: l,
                                    elem: f,
                                    level: o
                                });
                                f = f.parentNode;
                                o++
                            }
                        }
                        return d
                    }
                    l = nb.test(b) ||
                    typeof b !== "string" ? i(b, c || this.context) : 0;
                    h = 0;
                    for (e = this.length; h < e; h++) for (f = this[h]; f;) if (l ? l.index(f) > -1: i.find.matchesSelector(f, b)) {
                        d.push(f);
                        break
                    } else if (f = f.parentNode, !f || !f.ownerDocument || f === c || f.nodeType === 11) break;
                    d = d.length > 1 ? i.unique(d) : d;
                    return this.pushStack(d, "closest", b)
                },
                index: function(b) {
                    return ! b || typeof b === "string" ? i.inArray(this[0], b ? i(b) : this.parent().children()) : i.inArray(b.jquery ? b[0] : b, this)
                },
                add: function(b, c) {
                    var d = typeof b === "string" ? i(b, c) : i.makeArray(b && b.nodeType ?
                    [b] : b),
                    h = i.merge(this.get(), d);
                    return this.pushStack(!d[0] || !d[0].parentNode || d[0].parentNode.nodeType === 11 || !h[0] || !h[0].parentNode || h[0].parentNode.nodeType === 11 ? h: i.unique(h))
                },
                andSelf: function() {
                    return this.add(this.prevObject)
                }
            });
            i.each({
                parent: function(b) {
                    return (b = b.parentNode) && b.nodeType !== 11 ? b: null
                },
                parents: function(b) {
                    return i.dir(b, "parentNode")
                },
                parentsUntil: function(b, c, d) {
                    return i.dir(b, "parentNode", d)
                },
                next: function(b) {
                    return i.nth(b, 2, "nextSibling")
                },
                prev: function(b) {
                    return i.nth(b,
                    2, "previousSibling")
                },
                nextAll: function(b) {
                    return i.dir(b, "nextSibling")
                },
                prevAll: function(b) {
                    return i.dir(b, "previousSibling")
                },
                nextUntil: function(b, c, d) {
                    return i.dir(b, "nextSibling", d)
                },
                prevUntil: function(b, c, d) {
                    return i.dir(b, "previousSibling", d)
                },
                siblings: function(b) {
                    return i.sibling(b.parentNode.firstChild, b)
                },
                children: function(b) {
                    return i.sibling(b.firstChild)
                },
                contents: function(b) {
                    return i.nodeName(b, "iframe") ? b.contentDocument || b.contentWindow.document: i.makeArray(b.childNodes)
                }
            },
            function(b,
            c) {
                i.fn[b] = function(d, h) {
                    var e = i.map(this, c, d),
                    f = Ja.call(arguments);
                    ja.test(b) || (h = d);
                    h && typeof h === "string" && (e = i.filter(h, e));
                    e = this.length > 1 && !Ob[b] ? i.unique(e) : e;
                    if ((this.length > 1 || fa.test(h)) && W.test(b)) e = e.reverse();
                    return this.pushStack(e, b, f.join(","))
                }
            });
            i.extend({
                filter: function(b, c, d) {
                    d && (b = ":not(" + b + ")");
                    return c.length === 1 ? i.find.matchesSelector(c[0], b) ? [c[0]] : [] : i.find.matches(b, c)
                },
                dir: function(b, d, h) {
                    for (var e = [], b = b[d]; b && b.nodeType !== 9 && (h === c || b.nodeType !== 1 || !i(b).is(h));) b.nodeType ===
                    1 && e.push(b),
                    b = b[d];
                    return e
                },
                nth: function(b, c, d) {
                    for (var c = c || 1, h = 0; b; b = b[d]) if (b.nodeType === 1 && ++h === c) break;
                    return b
                },
                sibling: function(b, c) {
                    for (var d = []; b; b = b.nextSibling) b.nodeType === 1 && b !== c && d.push(b);
                    return d
                }
            });
            var Pb = / jQuery\d+="(?:\d+|null)"/g,
            ab = /^\s+/,
            ob = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
            pb = /<([\w:]+)/,
            Qb = /<tbody/i,
            qb = /<|&#?\w+;/,
            Ra = /<(?:script|object|embed|option|style)/i,
            bb = /checked\s*(?:[^=]|=\s*.checked.)/i,
            Sa = /\/(java|ecma)script/i,
            jb = /^\s*<!(?:\[CDATA\[|\-\-)/,
            la = {
                option: [1, "<select multiple='multiple'>", "</select>"],
                legend: [1, "<fieldset>", "</fieldset>"],
                thead: [1, "<table>", "</table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                area: [1, "<map>", "</map>"],
                _default: [0, "", ""]
            };
            la.optgroup = la.option;
            la.tbody = la.tfoot = la.colgroup = la.caption = la.thead;
            la.th = la.td;
            if (!i.support.htmlSerialize) la._default = [1, "div<div>", "</div>"];
            i.fn.extend({
                text: function(b) {
                    return i.isFunction(b) ?
                    this.each(function(c) {
                        var d = i(this);
                        d.text(b.call(this, c, d.text()))
                    }) : typeof b !== "object" && b !== c ? this.empty().append((this[0] && this[0].ownerDocument || x).createTextNode(b)) : i.text(this)
                },
                wrapAll: function(b) {
                    if (i.isFunction(b)) return this.each(function(c) {
                        i(this).wrapAll(b.call(this, c))
                    });
                    if (this[0]) {
                        var c = i(b, this[0].ownerDocument).eq(0).clone(!0);
                        this[0].parentNode && c.insertBefore(this[0]);
                        c.map(function() {
                            for (var b = this; b.firstChild && b.firstChild.nodeType === 1;) b = b.firstChild;
                            return b
                        }).append(this)
                    }
                    return this
                },
                wrapInner: function(b) {
                    return i.isFunction(b) ? this.each(function(c) {
                        i(this).wrapInner(b.call(this, c))
                    }) : this.each(function() {
                        var c = i(this),
                        d = c.contents();
                        d.length ? d.wrapAll(b) : c.append(b)
                    })
                },
                wrap: function(b) {
                    return this.each(function() {
                        i(this).wrapAll(b)
                    })
                },
                unwrap: function() {
                    return this.parent().each(function() {
                        i.nodeName(this, "body") || i(this).replaceWith(this.childNodes)
                    }).end()
                },
                append: function() {
                    return this.domManip(arguments, !0,
                    function(b) {
                        this.nodeType === 1 && this.appendChild(b)
                    })
                },
                prepend: function() {
                    return this.domManip(arguments,
                    !0,
                    function(b) {
                        this.nodeType === 1 && this.insertBefore(b, this.firstChild)
                    })
                },
                before: function() {
                    if (this[0] && this[0].parentNode) return this.domManip(arguments, !1,
                    function(b) {
                        this.parentNode.insertBefore(b, this)
                    });
                    else if (arguments.length) {
                        var b = i(arguments[0]);
                        b.push.apply(b, this.toArray());
                        return this.pushStack(b, "before", arguments)
                    }
                },
                after: function() {
                    if (this[0] && this[0].parentNode) return this.domManip(arguments, !1,
                    function(b) {
                        this.parentNode.insertBefore(b, this.nextSibling)
                    });
                    else if (arguments.length) {
                        var b =
                        this.pushStack(this, "after", arguments);
                        b.push.apply(b, i(arguments[0]).toArray());
                        return b
                    }
                },
                remove: function(b, c) {
                    for (var d = 0, h; (h = this[d]) != null; d++) if (!b || i.filter(b, [h]).length) ! c && h.nodeType === 1 && (i.cleanData(h.getElementsByTagName("*")), i.cleanData([h])),
                    h.parentNode && h.parentNode.removeChild(h);
                    return this
                },
                empty: function() {
                    for (var b = 0, c; (c = this[b]) != null; b++) for (c.nodeType === 1 && i.cleanData(c.getElementsByTagName("*")); c.firstChild;) c.removeChild(c.firstChild);
                    return this
                },
                clone: function(b, c) {
                    b =
                    b == null ? !1: b;
                    c = c == null ? b: c;
                    return this.map(function() {
                        return i.clone(this, b, c)
                    })
                },
                html: function(b) {
                    if (b === c) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(Pb, "") : null;
                    else if (typeof b === "string" && !Ra.test(b) && (i.support.leadingWhitespace || !ab.test(b)) && !la[(pb.exec(b) || ["", ""])[1].toLowerCase()]) {
                        b = b.replace(ob, "<$1></$2>");
                        try {
                            for (var d = 0, h = this.length; d < h; d++) if (this[d].nodeType === 1) i.cleanData(this[d].getElementsByTagName("*")),
                            this[d].innerHTML = b
                        } catch(e) {
                            this.empty().append(b)
                        }
                    } else i.isFunction(b) ?
                    this.each(function(c) {
                        var d = i(this);
                        d.html(b.call(this, c, d.html()))
                    }) : this.empty().append(b);
                    return this
                },
                replaceWith: function(b) {
                    if (this[0] && this[0].parentNode) {
                        if (i.isFunction(b)) return this.each(function(c) {
                            var d = i(this),
                            h = d.html();
                            d.replaceWith(b.call(this, c, h))
                        });
                        typeof b !== "string" && (b = i(b).detach());
                        return this.each(function() {
                            var c = this.nextSibling,
                            d = this.parentNode;
                            i(this).remove();
                            c ? i(c).before(b) : i(d).append(b)
                        })
                    } else return this.length ? this.pushStack(i(i.isFunction(b) ? b() : b), "replaceWith",
                    b) : this
                },
                detach: function(b) {
                    return this.remove(b, !0)
                },
                domManip: function(b, d, h) {
                    var e,
                    f,
                    l,
                    g = b[0],
                    o = [];
                    if (!i.support.checkClone && arguments.length === 3 && typeof g === "string" && bb.test(g)) return this.each(function() {
                        i(this).domManip(b, d, h, !0)
                    });
                    if (i.isFunction(g)) return this.each(function(e) {
                        var f = i(this);
                        b[0] = g.call(this, e, d ? f.html() : c);
                        f.domManip(b, d, h)
                    });
                    if (this[0]) {
                        e = g && g.parentNode;
                        e = i.support.parentNode && e && e.nodeType === 11 && e.childNodes.length === this.length ? {
                            fragment: e
                        }: i.buildFragment(b, this, o);
                        l =
                        e.fragment;
                        if (f = l.childNodes.length === 1 ? l = l.firstChild: l.firstChild) {
                            d = d && i.nodeName(f, "tr");
                            f = 0;
                            for (var m = this.length, u = m - 1; f < m; f++) h.call(d ? i.nodeName(this[f], "table") ? this[f].getElementsByTagName("tbody")[0] || this[f].appendChild(this[f].ownerDocument.createElement("tbody")) : this[f] : this[f], e.cacheable || m > 1 && f < u ? i.clone(l, !0, !0) : l)
                        }
                        o.length && i.each(o, E)
                    }
                    return this
                }
            });
            i.buildFragment = function(b, c, d) {
                var h,
                e,
                f,
                l;
                c && c[0] && (l = c[0].ownerDocument || c[0]);
                l.createDocumentFragment || (l = x);
                if (b.length ===
                1 && typeof b[0] === "string" && b[0].length < 512 && l === x && b[0].charAt(0) === "<" && !Ra.test(b[0]) && (i.support.checkClone || !bb.test(b[0]))) e = !0,
                (f = i.fragments[b[0]]) && f !== 1 && (h = f);
                h || (h = l.createDocumentFragment(), i.clean(b, l, h, d));
                e && (i.fragments[b[0]] = f ? h: 1);
                return {
                    fragment: h,
                    cacheable: e
                }
            };
            i.fragments = {};
            i.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            },
            function(b, c) {
                i.fn[b] = function(d) {
                    var h = [],
                    d = i(d),
                    e = this.length === 1 && this[0].parentNode;
                    if (e &&
                    e.nodeType === 11 && e.childNodes.length === 1 && d.length === 1) return d[c](this[0]),
                    this;
                    else {
                        for (var e = 0, f = d.length; e < f; e++) {
                            var l = (e > 0 ? this.clone(!0) : this).get();
                            i(d[e])[c](l);
                            h = h.concat(l)
                        }
                        return this.pushStack(h, b, d.selector)
                    }
                }
            });
            i.extend({
                clone: function(b, c, d) {
                    var e = b.cloneNode(!0),
                    f,
                    l,
                    g;
                    if ((!i.support.noCloneEvent || !i.support.noCloneChecked) && (b.nodeType === 1 || b.nodeType === 11) && !i.isXMLDoc(b)) {
                        H(b, e);
                        f = h(b);
                        l = h(e);
                        for (g = 0; f[g]; ++g) H(f[g], l[g])
                    }
                    if (c && (B(b, e), d)) {
                        f = h(b);
                        l = h(e);
                        for (g = 0; f[g]; ++g) B(f[g],
                        l[g])
                    }
                    return e
                },
                clean: function(b, c, d, h) {
                    c = c || x;
                    typeof c.createElement === "undefined" && (c = c.ownerDocument || c[0] && c[0].ownerDocument || x);
                    for (var e = [], f, l = 0, g; (g = b[l]) != null; l++) if (typeof g === "number" && (g += ""), g) {
                        if (typeof g === "string") if (qb.test(g)) {
                            g = g.replace(ob, "<$1></$2>");
                            f = (pb.exec(g) || ["", ""])[1].toLowerCase();
                            var o = la[f] || la._default,
                            m = o[0],
                            u = c.createElement("div");
                            for (u.innerHTML = o[1] + g + o[2]; m--;) u = u.lastChild;
                            if (!i.support.tbody) {
                                m = Qb.test(g);
                                o = f === "table" && !m ? u.firstChild && u.firstChild.childNodes:
                                o[1] === "<table>" && !m ? u.childNodes: [];
                                for (f = o.length - 1; f >= 0; --f) i.nodeName(o[f], "tbody") && !o[f].childNodes.length && o[f].parentNode.removeChild(o[f])
                            } ! i.support.leadingWhitespace && ab.test(g) && u.insertBefore(c.createTextNode(ab.exec(g)[0]), u.firstChild);
                            g = u.childNodes
                        } else g = c.createTextNode(g);
                        var n;
                        if (!i.support.appendChecked) if (g[0] && typeof(n = g.length) === "number") for (f = 0; f < n; f++) C(g[f]);
                        else C(g);
                        g.nodeType ? e.push(g) : e = i.merge(e, g)
                    }
                    if (d) {
                        b = function(b) {
                            return ! b.type || Sa.test(b.type)
                        };
                        for (l = 0; e[l]; l++) h &&
                        i.nodeName(e[l], "script") && (!e[l].type || e[l].type.toLowerCase() === "text/javascript") ? h.push(e[l].parentNode ? e[l].parentNode.removeChild(e[l]) : e[l]) : (e[l].nodeType === 1 && (c = i.grep(e[l].getElementsByTagName("script"), b), e.splice.apply(e, [l + 1, 0].concat(c))), d.appendChild(e[l]))
                    }
                    return e
                },
                cleanData: function(b) {
                    for (var c, d, h = i.cache, e = i.expando, f = i.event.special, l = i.support.deleteExpando, g = 0, o; (o = b[g]) != null; g++) if (!o.nodeName || !i.noData[o.nodeName.toLowerCase()]) if (d = o[i.expando]) {
                        if ((c = h[d] && h[d][e]) &&
                        c.events) {
                            for (var m in c.events) f[m] ? i.event.remove(o, m) : i.removeEvent(o, m, c.handle);
                            if (c.handle) c.handle.elem = null
                        }
                        l ? delete o[i.expando] : o.removeAttribute && o.removeAttribute(i.expando);
                        delete h[d]
                    }
                }
            });
            var cb = /alpha\([^)]*\)/i,
            rb = /opacity=([^)]*)/,
            sb = /([A-Z]|^ms)/g,
            Da = /^-?\d+(?:px)?$/i,
            Rb = /^-?\d/,
            tb = /^[+\-]=/,
            Sb = /[^+\-\.\de]+/g,
            ub = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            },
            Gb = ["Left", "Right"],
            Hb = ["Top", "Bottom"],
            Aa,
            db,
            vb;
            i.fn.css = function(b, d) {
                return arguments.length === 2 && d === c ? this:
                i.access(this, b, d, !0,
                function(b, d, h) {
                    return h !== c ? i.style(b, d, h) : i.css(b, d)
                })
            };
            i.extend({
                cssHooks: {
                    opacity: {
                        get: function(b, c) {
                            if (c) {
                                var d = Aa(b, "opacity", "opacity");
                                return d === "" ? "1": d
                            } else return b.style.opacity
                        }
                    }
                },
                cssNumber: {
                    fillOpacity: !0,
                    fontWeight: !0,
                    lineHeight: !0,
                    opacity: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {
                    "float": i.support.cssFloat ? "cssFloat": "styleFloat"
                },
                style: function(b, d, h, e) {
                    if (b && !(b.nodeType === 3 || b.nodeType === 8 || !b.style)) {
                        var f,
                        l = i.camelCase(d),
                        g = b.style,
                        o = i.cssHooks[l],
                        d = i.cssProps[l] || l;
                        if (h !== c) {
                            if (e = typeof h, !(e === "number" && isNaN(h) || h == null)) if (e === "string" && tb.test(h) && (h = +h.replace(Sb, "") + parseFloat(i.css(b, d)), e = "number"), e === "number" && !i.cssNumber[l] && (h += "px"), !o || !("set" in o) || (h = o.set(b, h)) !== c) try {
                                g[d] = h
                            } catch(m) {}
                        } else return o && "get" in o && (f = o.get(b, !1, e)) !== c ? f: g[d]
                    }
                },
                css: function(b, d, h) {
                    var e,
                    f,
                    d = i.camelCase(d);
                    f = i.cssHooks[d];
                    d = i.cssProps[d] || d;
                    d === "cssFloat" && (d = "float");
                    if (f && "get" in f && (e = f.get(b, !0, h)) !== c) return e;
                    else if (Aa) return Aa(b, d)
                },
                swap: function(b, c, d) {
                    var h = {},
                    e;
                    for (e in c) h[e] = b.style[e],
                    b.style[e] = c[e];
                    d.call(b);
                    for (e in c) b.style[e] = h[e]
                }
            });
            i.curCSS = i.css;
            i.each(["height", "width"],
            function(b, c) {
                i.cssHooks[c] = {
                    get: function(b, d, h) {
                        var j;
                        if (d) {
                            if (b.offsetWidth !== 0) return D(b, c, h);
                            else i.swap(b, ub,
                            function() {
                                j = D(b, c, h)
                            });
                            return j
                        }
                    },
                    set: function(b, c) {
                        if (Da.test(c)) {
                            if (c = parseFloat(c), c >= 0) return c + "px"
                        } else return c
                    }
                }
            });
            if (!i.support.opacity) i.cssHooks.opacity = {
                get: function(b, c) {
                    return rb.test((c && b.currentStyle ? b.currentStyle.filter:
                    b.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "": c ? "1": ""
                },
                set: function(b, c) {
                    var d = b.style,
                    h = b.currentStyle;
                    d.zoom = 1;
                    var e = i.isNaN(c) ? "": "alpha(opacity=" + c * 100 + ")",
                    h = h && h.filter || d.filter || "";
                    d.filter = cb.test(h) ? h.replace(cb, e) : h + " " + e
                }
            };
            i(function() {
                if (!i.support.reliableMarginRight) i.cssHooks.marginRight = {
                    get: function(b, c) {
                        var d;
                        i.swap(b, {
                            display: "inline-block"
                        },
                        function() {
                            d = c ? Aa(b, "margin-right", "marginRight") : b.style.marginRight
                        });
                        return d
                    }
                }
            });
            x.defaultView && x.defaultView.getComputedStyle && (db =
            function(b, d) {
                var h,
                e,
                d = d.replace(sb, "-$1").toLowerCase();
                if (! (e = b.ownerDocument.defaultView)) return c;
                if (e = e.getComputedStyle(b, null)) h = e.getPropertyValue(d),
                h === "" && !i.contains(b.ownerDocument.documentElement, b) && (h = i.style(b, d));
                return h
            });
            x.documentElement.currentStyle && (vb = function(b, c) {
                var d,
                h = b.currentStyle && b.currentStyle[c],
                e = b.runtimeStyle && b.runtimeStyle[c],
                i = b.style;
                if (!Da.test(h) && Rb.test(h)) {
                    d = i.left;
                    if (e) b.runtimeStyle.left = b.currentStyle.left;
                    i.left = c === "fontSize" ? "1em": h || 0;
                    h = i.pixelLeft +
                    "px";
                    i.left = d;
                    if (e) b.runtimeStyle.left = e
                }
                return h === "" ? "auto": h
            });
            Aa = db || vb;
            if (i.expr && i.expr.filters) i.expr.filters.hidden = function(b) {
                var c = b.offsetHeight;
                return b.offsetWidth === 0 && c === 0 || !i.support.reliableHiddenOffsets && (b.style.display || i.css(b, "display")) === "none"
            },
            i.expr.filters.visible = function(b) {
                return ! i.expr.filters.hidden(b)
            };
            var Tb = /%20/g,
            Ib = /\[\]$/,
            U = /\r?\n/g,
            Ub = /#.*$/,
            Vb = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
            Wb = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
            eb = /^(?:GET|HEAD)$/,
            Ta = /^\/\//,
            wb = /\?/,
            xb = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
            yb = /^(?:select|textarea)/i,
            kb = /\s+/,
            ya = /([?&])_=[^&]*/,
            zb = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
            Ab = i.fn.load,
            Xa = {},
            Bb = {},
            ta,
            Ea;
            try {
                ta = Q.href
            } catch(Va) {
                ta = x.createElement("a"),
                ta.href = "",
                ta = ta.href
            }
            Ea = zb.exec(ta.toLowerCase()) || [];
            i.fn.extend({
                load: function(b, d, h) {
                    if (typeof b !== "string" && Ab) return Ab.apply(this, arguments);
                    else if (!this.length) return this;
                    var e = b.indexOf(" ");
                    if (e >= 0) var f = b.slice(e,
                    b.length),
                    b = b.slice(0, e);
                    e = "GET";
                    d && (i.isFunction(d) ? (h = d, d = c) : typeof d === "object" && (d = i.param(d, i.ajaxSettings.traditional), e = "POST"));
                    var l = this;
                    i.ajax({
                        url: b,
                        type: e,
                        dataType: "html",
                        data: d,
                        complete: function(b, c, d) {
                            d = b.responseText;
                            b.isResolved() && (b.done(function(b) {
                                d = b
                            }), l.html(f ? i("<div>").append(d.replace(xb, "")).find(f) : d));
                            h && l.each(h, [d, c, b])
                        }
                    });
                    return this
                },
                serialize: function() {
                    return i.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        return this.elements ?
                        i.makeArray(this.elements) : this
                    }).filter(function() {
                        return this.name && !this.disabled && (this.checked || yb.test(this.nodeName) || Wb.test(this.type))
                    }).map(function(b, c) {
                        var d = i(this).val();
                        return d == null ? null: i.isArray(d) ? i.map(d,
                        function(b) {
                            return {
                                name: c.name,
                                value: b.replace(U, "\r\n")
                            }
                        }) : {
                            name: c.name,
                            value: d.replace(U, "\r\n")
                        }
                    }).get()
                }
            });
            i.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
            function(b, c) {
                i.fn[c] = function(b) {
                    return this.bind(c, b)
                }
            });
            i.each(["get", "post"],
            function(b, d) {
                i[d] = function(b, h, e, j) {
                    i.isFunction(h) && (j = j || e, e = h, h = c);
                    return i.ajax({
                        type: d,
                        url: b,
                        data: h,
                        success: e,
                        dataType: j
                    })
                }
            });
            i.extend({
                getScript: function(b, d) {
                    return i.get(b, c, d, "script")
                },
                getJSON: function(b, c, d) {
                    return i.get(b, c, d, "json")
                },
                ajaxSetup: function(b, c) {
                    c ? i.extend(!0, b, i.ajaxSettings, c) : (c = b, b = i.extend(!0, i.ajaxSettings, c));
                    for (var d in {
                        context: 1,
                        url: 1
                    }) d in c ? b[d] = c[d] : d in i.ajaxSettings && (b[d] = i.ajaxSettings[d]);
                    return b
                },
                ajaxSettings: {
                    url: ta,
                    isLocal: /^(?:about|app|app\-storage|.+\-extension|file|widget):$/.test(Ea[1]),
                    global: !0,
                    type: "GET",
                    contentType: "application/x-www-form-urlencoded",
                    processData: !0,
                    async: !0,
                    accepts: {
                        xml: "application/xml, text/xml",
                        html: "text/html",
                        text: "text/plain",
                        json: "application/json, text/javascript",
                        "*": "*/*"
                    },
                    contents: {
                        xml: /xml/,
                        html: /html/,
                        json: /json/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText"
                    },
                    converters: {
                        "* text": d.String,
                        "text html": !0,
                        "text json": i.parseJSON,
                        "text xml": i.parseXML
                    }
                },
                ajaxPrefilter: q(Xa),
                ajaxTransport: q(Bb),
                ajax: function(b, d) {
                    function h(b, d, j, n) {
                        if (D !== 2) {
                            D =
                            2;
                            H && clearTimeout(H);
                            B = c;
                            F = n || "";
                            O.readyState = b ? 4: 0;
                            var x,
                            C,
                            s;
                            if (j) {
                                var n = e,
                                E = O,
                                ka = n.contents,
                                Q = n.dataTypes,
                                q = n.responseFields,
                                V,
                                M,
                                k,
                                G;
                                for (M in q) M in j && (E[q[M]] = j[M]);
                                for (; Q[0] === "*";) Q.shift(),
                                V === c && (V = n.mimeType || E.getResponseHeader("content-type"));
                                if (V) for (M in ka) if (ka[M] && ka[M].test(V)) {
                                    Q.unshift(M);
                                    break
                                }
                                if (Q[0] in j) k = Q[0];
                                else {
                                    for (M in j) {
                                        if (!Q[0] || n.converters[M + " " + Q[0]]) {
                                            k = M;
                                            break
                                        }
                                        G || (G = M)
                                    }
                                    k = k || G
                                }
                                k ? (k !== Q[0] && Q.unshift(k), j = j[k]) : j = void 0
                            } else j = c;
                            if (b >= 200 && b < 300 || b === 304) {
                                if (e.ifModified) {
                                    if (V =
                                    O.getResponseHeader("Last-Modified")) i.lastModified[u] = V;
                                    if (V = O.getResponseHeader("Etag")) i.etag[u] = V
                                }
                                if (b === 304) d = "notmodified",
                                x = !0;
                                else try {
                                    V = e;
                                    V.dataFilter && (j = V.dataFilter(j, V.dataType));
                                    var y = V.dataTypes;
                                    M = {};
                                    var Fa,
                                    ea,
                                    v = y.length,
                                    t,
                                    P = y[0],
                                    oa,
                                    ua,
                                    Na,
                                    Ua,
                                    fb;
                                    for (Fa = 1; Fa < v; Fa++) {
                                        if (Fa === 1) for (ea in V.converters) typeof ea === "string" && (M[ea.toLowerCase()] = V.converters[ea]);
                                        oa = P;
                                        P = y[Fa];
                                        if (P === "*") P = oa;
                                        else if (oa !== "*" && oa !== P) {
                                            ua = oa + " " + P;
                                            Na = M[ua] || M["* " + P];
                                            if (!Na) for (Ua in fb = c, M) if (t = Ua.split(" "),
                                            t[0] === oa || t[0] === "*") if (fb = M[t[1] + " " + P]) {
                                                Ua = M[Ua];
                                                Ua === !0 ? Na = fb: fb === !0 && (Na = Ua);
                                                break
                                            } ! Na && !fb && i.error("No conversion from " + ua.replace(" ", " to "));
                                            Na !== !0 && (j = Na ? Na(j) : fb(Ua(j)))
                                        }
                                    }
                                    C = j;
                                    d = "success";
                                    x = !0
                                } catch(yc) {
                                    d = "parsererror",
                                    s = yc
                                }
                            } else if (s = d, !d || b) d = "error",
                            b < 0 && (b = 0);
                            O.status = b;
                            O.statusText = d;
                            x ? g.resolveWith(f, [C, d, O]) : g.rejectWith(f, [O, d, s]);
                            O.statusCode(m);
                            m = c;
                            ca && l.trigger("ajax" + (x ? "Success": "Error"), [O, e, x ? C: s]);
                            o.resolveWith(f, [O, d]);
                            ca && (l.trigger("ajaxComplete", [O, e]), --i.active ||
                            i.event.trigger("ajaxStop"))
                        }
                    }
                    typeof b === "object" && (d = b, b = c);
                    var d = d || {},
                    e = i.ajaxSetup({},
                    d),
                    f = e.context || e,
                    l = f !== e && (f.nodeType || f instanceof i) ? i(f) : i.event,
                    g = i.Deferred(),
                    o = i._Deferred(),
                    m = e.statusCode || {},
                    u,
                    n = {},
                    x = {},
                    F,
                    C,
                    B,
                    H,
                    E,
                    D = 0,
                    ca,
                    Q,
                    O = {
                        readyState: 0,
                        setRequestHeader: function(b, c) {
                            if (!D) {
                                var d = b.toLowerCase(),
                                b = x[d] = x[d] || b;
                                n[b] = c
                            }
                            return this
                        },
                        getAllResponseHeaders: function() {
                            return D === 2 ? F: null
                        },
                        getResponseHeader: function(b) {
                            var d;
                            if (D === 2) {
                                if (!C) for (C = {}; d = Vb.exec(F);) C[d[1].toLowerCase()] =
                                d[2];
                                d = C[b.toLowerCase()]
                            }
                            return d === c ? null: d
                        },
                        overrideMimeType: function(b) {
                            if (!D) e.mimeType = b;
                            return this
                        },
                        abort: function(b) {
                            b = b || "abort";
                            B && B.abort(b);
                            h(0, b);
                            return this
                        }
                    };
                    g.promise(O);
                    O.success = O.done;
                    O.error = O.fail;
                    O.complete = o.done;
                    O.statusCode = function(b) {
                        if (b) {
                            var d;
                            if (D < 2) for (d in b) m[d] = [m[d], b[d]];
                            else d = b[O.status],
                            O.then(d, d)
                        }
                        return this
                    };
                    e.url = ((b || e.url) + "").replace(Ub, "").replace(Ta, Ea[1] + "//");
                    e.dataTypes = i.trim(e.dataType || "*").toLowerCase().split(kb);
                    if (e.crossDomain == null) E = zb.exec(e.url.toLowerCase()),
                    e.crossDomain = !(!E || !(E[1] != Ea[1] || E[2] != Ea[2] || (E[3] || (E[1] === "http:" ? 80: 443)) != (Ea[3] || (Ea[1] === "http:" ? 80: 443))));
                    if (e.data && e.processData && typeof e.data !== "string") e.data = i.param(e.data, e.traditional);
                    s(Xa, e, d, O);
                    if (D === 2) return ! 1;
                    ca = e.global;
                    e.type = e.type.toUpperCase();
                    e.hasContent = !eb.test(e.type);
                    ca && i.active++===0 && i.event.trigger("ajaxStart");
                    if (!e.hasContent && (e.data && (e.url += (wb.test(e.url) ? "&": "?") + e.data), u = e.url, e.cache === !1)) {
                        E = i.now();
                        var q = e.url.replace(ya, "$1_=" + E);
                        e.url = q + (q ===
                        e.url ? (wb.test(e.url) ? "&": "?") + "_=" + E: "")
                    } (e.data && e.hasContent && e.contentType !== !1 || d.contentType) && O.setRequestHeader("Content-Type", e.contentType);
                    e.ifModified && (u = u || e.url, i.lastModified[u] && O.setRequestHeader("If-Modified-Since", i.lastModified[u]), i.etag[u] && O.setRequestHeader("If-None-Match", i.etag[u]));
                    O.setRequestHeader("Accept", e.dataTypes[0] && e.accepts[e.dataTypes[0]] ? e.accepts[e.dataTypes[0]] + (e.dataTypes[0] !== "*" ? ", */*; q=0.01": "") : e.accepts["*"]);
                    for (Q in e.headers) O.setRequestHeader(Q,
                    e.headers[Q]);
                    if (e.beforeSend && (e.beforeSend.call(f, O, e) === !1 || D === 2)) return O.abort(),
                    !1;
                    for (Q in {
                        success: 1,
                        error: 1,
                        complete: 1
                    }) O[Q](e[Q]);
                    if (B = s(Bb, e, d, O)) {
                        O.readyState = 1;
                        ca && l.trigger("ajaxSend", [O, e]);
                        e.async && e.timeout > 0 && (H = setTimeout(function() {
                            O.abort("timeout")
                        },
                        e.timeout));
                        try {
                            D = 1,
                            B.send(n, h)
                        } catch(V) {
                            status < 2 ? h( - 1, V) : i.error(V)
                        }
                    } else h( - 1, "No Transport");
                    return O
                },
                param: function(b, d) {
                    var h = [],
                    e = function(b, d) {
                        d = i.isFunction(d) ? d() : d;
                        h[h.length] = encodeURIComponent(b) + "=" + encodeURIComponent(d)
                    };
                    if (d === c) d = i.ajaxSettings.traditional;
                    if (i.isArray(b) || b.jquery && !i.isPlainObject(b)) i.each(b,
                    function() {
                        e(this.name, this.value)
                    });
                    else for (var f in b) G(f, b[f], d, e);
                    return h.join("&").replace(Tb, "+")
                }
            });
            i.extend({
                active: 0,
                lastModified: {},
                etag: {}
            });
            var Db = i.now(),
            Oa = /(\=)\?(&|$)|\?\?/i;
            i.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    return i.expando + "_" + Db++
                }
            });
            i.ajaxPrefilter("json jsonp",
            function(b, c, h) {
                c = b.contentType === "application/x-www-form-urlencoded" && typeof b.data === "string";
                if (b.dataTypes[0] ===
                "jsonp" || b.jsonp !== !1 && (Oa.test(b.url) || c && Oa.test(b.data))) {
                    var e,
                    f = b.jsonpCallback = i.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
                    l = d[f],
                    g = b.url,
                    o = b.data,
                    m = "$1" + f + "$2";
                    b.jsonp !== !1 && (g = g.replace(Oa, m), b.url === g && (c && (o = o.replace(Oa, m)), b.data === o && (g += (/\?/.test(g) ? "&": "?") + b.jsonp + "=" + f)));
                    b.url = g;
                    b.data = o;
                    d[f] = function(b) {
                        e = [b]
                    };
                    h.always(function() {
                        d[f] = l;
                        if (e && i.isFunction(l)) d[f](e[0])
                    });
                    b.converters["script json"] = function() {
                        e || i.error(f + " was not called");
                        return e[0]
                    };
                    b.dataTypes[0] =
                    "json";
                    return "script"
                }
            });
            i.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /javascript|ecmascript/
                },
                converters: {
                    "text script": function(b) {
                        i.globalEval(b);
                        return b
                    }
                }
            });
            i.ajaxPrefilter("script",
            function(b) {
                if (b.cache === c) b.cache = !1;
                if (b.crossDomain) b.type = "GET",
                b.global = !1
            });
            i.ajaxTransport("script",
            function(b) {
                if (b.crossDomain) {
                    var d,
                    h = x.head || x.getElementsByTagName("head")[0] || x.documentElement;
                    return {
                        send: function(e,
                        f) {
                            d = x.createElement("script");
                            d.async = "async";
                            if (b.scriptCharset) d.charset = b.scriptCharset;
                            d.src = b.url;
                            d.onload = d.onreadystatechange = function(b, e) {
                                if (e || !d.readyState || /loaded|complete/.test(d.readyState)) d.onload = d.onreadystatechange = null,
                                h && d.parentNode && h.removeChild(d),
                                d = c,
                                e || f(200, "success")
                            };
                            h.insertBefore(d, h.firstChild)
                        },
                        abort: function() {
                            if (d) d.onload(0, 1)
                        }
                    }
                }
            });
            var gb = d.ActiveXObject ?
            function() {
                for (var b in va) va[b](0, 1)
            }: !1,
            Eb = 0,
            va;
            i.ajaxSettings.xhr = d.ActiveXObject ?
            function() {
                var b;
                if (! (b =
                !this.isLocal && w())) a: {
                    try {
                        b = new d.ActiveXObject("Microsoft.XMLHTTP");
                        break a
                    } catch(c) {}
                    b = void 0
                }
                return b
            }: w; (function(b) {
                i.extend(i.support, {
                    ajax: !!b,
                    cors: !!b && "withCredentials" in b
                })
            })(i.ajaxSettings.xhr());
            i.support.ajax && i.ajaxTransport(function(b) {
                if (!b.crossDomain || i.support.cors) {
                    var h;
                    return {
                        send: function(e, f) {
                            var l = b.xhr(),
                            g,
                            o;
                            b.username ? l.open(b.type, b.url, b.async, b.username, b.password) : l.open(b.type, b.url, b.async);
                            if (b.xhrFields) for (o in b.xhrFields) l[o] = b.xhrFields[o];
                            b.mimeType && l.overrideMimeType &&
                            l.overrideMimeType(b.mimeType); ! b.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
                            try {
                                for (o in e) l.setRequestHeader(o, e[o])
                            } catch(m) {}
                            l.send(b.hasContent && b.data || null);
                            h = function(d, e) {
                                var o,
                                m,
                                u,
                                n,
                                x;
                                try {
                                    if (h && (e || l.readyState === 4)) {
                                        h = c;
                                        if (g) l.onreadystatechange = i.noop,
                                        gb && delete va[g];
                                        if (e) l.readyState !== 4 && l.abort();
                                        else {
                                            o = l.status;
                                            u = l.getAllResponseHeaders();
                                            n = {};
                                            if ((x = l.responseXML) && x.documentElement) n.xml = x;
                                            n.text = l.responseText;
                                            try {
                                                m = l.statusText
                                            } catch(F) {
                                                m = ""
                                            } ! o &&
                                            b.isLocal && !b.crossDomain ? o = n.text ? 200: 404: o === 1223 && (o = 204)
                                        }
                                    }
                                } catch(C) {
                                    e || f( - 1, C)
                                }
                                n && f(o, m, n, u)
                            }; ! b.async || l.readyState === 4 ? h() : (g = ++Eb, gb && (va || (va = {},
                            i(d).unload(gb)), va[g] = h), l.onreadystatechange = h)
                        },
                        abort: function() {
                            h && h(0, 1)
                        }
                    }
                }
            });
            var Pa = {},
            qa,
            wa,
            Xb = /^(?:toggle|show|hide)$/,
            Yb = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
            Ka,
            Ya = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]],
            La,
            ma = d.webkitRequestAnimationFrame ||
            d.mozRequestAnimationFrame || d.oRequestAnimationFrame;
            i.fn.extend({
                show: function(b, d, c) {
                    if (b || b === 0) return this.animate(I("show", 3), b, d, c);
                    else {
                        for (var c = 0, h = this.length; c < h; c++) if (b = this[c], b.style) {
                            d = b.style.display;
                            if (!i._data(b, "olddisplay") && d === "none") d = b.style.display = "";
                            d === "" && i.css(b, "display") === "none" && i._data(b, "olddisplay", X(b.nodeName))
                        }
                        for (c = 0; c < h; c++) if (b = this[c], b.style && (d = b.style.display, d === "" || d === "none")) b.style.display = i._data(b, "olddisplay") || "";
                        return this
                    }
                },
                hide: function(b,
                d, c) {
                    if (b || b === 0) return this.animate(I("hide", 3), b, d, c);
                    else {
                        b = 0;
                        for (d = this.length; b < d; b++) this[b].style && (c = i.css(this[b], "display"), c !== "none" && !i._data(this[b], "olddisplay") && i._data(this[b], "olddisplay", c));
                        for (b = 0; b < d; b++) if (this[b].style) this[b].style.display = "none";
                        return this
                    }
                },
                _toggle: i.fn.toggle,
                toggle: function(b, d, c) {
                    var h = typeof b === "boolean";
                    i.isFunction(b) && i.isFunction(d) ? this._toggle.apply(this, arguments) : b == null || h ? this.each(function() {
                        var d = h ? b: i(this).is(":hidden");
                        i(this)[d ? "show":
                        "hide"]()
                    }) : this.animate(I("toggle", 3), b, d, c);
                    return this
                },
                fadeTo: function(b, d, c, h) {
                    return this.filter(":hidden").css("opacity", 0).show().end().animate({
                        opacity: d
                    },
                    b, c, h)
                },
                animate: function(b, d, c, h) {
                    var e = i.speed(d, c, h);
                    if (i.isEmptyObject(b)) return this.each(e.complete, [!1]);
                    b = i.extend({},
                    b);
                    return this[e.queue === !1 ? "each": "queue"](function() {
                        var j;
                        e.queue === !1 && i._mark(this);
                        var d = i.extend({},
                        e),
                        c = this.nodeType === 1,
                        h = c && i(this).is(":hidden"),
                        f,
                        l,
                        g,
                        o,
                        m;
                        d.animatedProperties = {};
                        for (g in b) {
                            f = i.camelCase(g);
                            g !== f && (b[f] = b[g], delete b[g]);
                            l = b[f];
                            i.isArray(l) ? (d.animatedProperties[f] = l[1], j = b[f] = l[0], l = j) : d.animatedProperties[f] = d.specialEasing && d.specialEasing[f] || d.easing || "swing";
                            if (l === "hide" && h || l === "show" && !h) return d.complete.call(this);
                            if (c && (f === "height" || f === "width")) if (d.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], i.css(this, "display") === "inline" && i.css(this, "float") === "none") i.support.inlineBlockNeedsLayout ? (l = X(this.nodeName), l === "inline" ? this.style.display = "inline-block":
                            (this.style.display = "inline", this.style.zoom = 1)) : this.style.display = "inline-block"
                        }
                        if (d.overflow != null) this.style.overflow = "hidden";
                        for (g in b) if (c = new i.fx(this, d, g), l = b[g], Xb.test(l)) c[l === "toggle" ? h ? "show": "hide": l]();
                        else f = Yb.exec(l),
                        o = c.cur(),
                        f ? (l = parseFloat(f[2]), m = f[3] || (i.cssNumber[g] ? "": "px"), m !== "px" && (i.style(this, g, (l || 1) + m), o *= (l || 1) / c.cur(), i.style(this, g, o + m)), f[1] && (l = (f[1] === "-=" ? -1: 1) * l + o), c.custom(o, l, m)) : c.custom(o, l, "");
                        return ! 0
                    })
                },
                stop: function(b, d) {
                    b && this.queue([]);
                    this.each(function() {
                        var b =
                        i.timers,
                        c = b.length;
                        for (d || i._unmark(!0, this); c--;) if (b[c].elem === this) {
                            if (d) b[c](!0);
                            b.splice(c, 1)
                        }
                    });
                    d || this.dequeue();
                    return this
                }
            });
            i.each({
                slideDown: I("show", 1),
                slideUp: I("hide", 1),
                slideToggle: I("toggle", 1),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            },
            function(b, d) {
                i.fn[b] = function(b, c, h) {
                    return this.animate(d, b, c, h)
                }
            });
            i.extend({
                speed: function(b, d, c) {
                    var h = b && typeof b === "object" ? i.extend({},
                    b) : {
                        complete: c || !c && d || i.isFunction(b) && b,
                        duration: b,
                        easing: c && d ||
                        d && !i.isFunction(d) && d
                    };
                    h.duration = i.fx.off ? 0: typeof h.duration === "number" ? h.duration: h.duration in i.fx.speeds ? i.fx.speeds[h.duration] : i.fx.speeds._default;
                    h.old = h.complete;
                    h.complete = function(b) {
                        i.isFunction(h.old) && h.old.call(this);
                        h.queue !== !1 ? i.dequeue(this) : b !== !1 && i._unmark(this)
                    };
                    return h
                },
                easing: {
                    linear: function(b, d, c, h) {
                        return c + h * b
                    },
                    swing: function(b, d, c, h) {
                        return ( - Math.cos(b * Math.PI) / 2 + 0.5) * h + c
                    }
                },
                timers: [],
                fx: function(b, d, c) {
                    this.options = d;
                    this.elem = b;
                    this.prop = c;
                    d.orig = d.orig || {}
                }
            });
            i.fx.prototype =
            {
                update: function() {
                    this.options.step && this.options.step.call(this.elem, this.now, this); (i.fx.step[this.prop] || i.fx.step._default)(this)
                },
                cur: function() {
                    if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop];
                    var b,
                    d = i.css(this.elem, this.prop);
                    return isNaN(b = parseFloat(d)) ? !d || d === "auto" ? 0: d: b
                },
                custom: function(b, d, c) {
                    function h(b) {
                        return e.step(b)
                    }
                    var e = this,
                    f = i.fx,
                    l;
                    this.startTime = La || A();
                    this.start = b;
                    this.end = d;
                    this.unit = c || this.unit || (i.cssNumber[this.prop] ?
                    "": "px");
                    this.now = this.start;
                    this.pos = this.state = 0;
                    h.elem = this.elem;
                    h() && i.timers.push(h) && !Ka && (ma ? (Ka = !0, l = function() {
                        Ka && (ma(l), f.tick())
                    },
                    ma(l)) : Ka = setInterval(f.tick, f.interval))
                },
                show: function() {
                    this.options.orig[this.prop] = i.style(this.elem, this.prop);
                    this.options.show = !0;
                    this.custom(this.prop === "width" || this.prop === "height" ? 1: 0, this.cur());
                    i(this.elem).show()
                },
                hide: function() {
                    this.options.orig[this.prop] = i.style(this.elem, this.prop);
                    this.options.hide = !0;
                    this.custom(this.cur(), 0)
                },
                step: function(b) {
                    var d =
                    La || A(),
                    c = !0,
                    h = this.elem,
                    e = this.options,
                    f;
                    if (b || d >= e.duration + this.startTime) {
                        this.now = this.end;
                        this.pos = this.state = 1;
                        this.update();
                        e.animatedProperties[this.prop] = !0;
                        for (f in e.animatedProperties) e.animatedProperties[f] !== !0 && (c = !1);
                        if (c) {
                            e.overflow != null && !i.support.shrinkWrapBlocks && i.each(["", "X", "Y"],
                            function(b, d) {
                                h.style["overflow" + d] = e.overflow[b]
                            });
                            e.hide && i(h).hide();
                            if (e.hide || e.show) for (var l in e.animatedProperties) i.style(h, l, e.orig[l]);
                            e.complete.call(h)
                        }
                        return ! 1
                    } else e.duration == Infinity ?
                    this.now = d: (b = d - this.startTime, this.state = b / e.duration, this.pos = i.easing[e.animatedProperties[this.prop]](this.state, b, 0, 1, e.duration), this.now = this.start + (this.end - this.start) * this.pos),
                    this.update();
                    return ! 0
                }
            };
            i.extend(i.fx, {
                tick: function() {
                    for (var b = i.timers, d = 0; d < b.length; ++d) b[d]() || b.splice(d--, 1);
                    b.length || i.fx.stop()
                },
                interval: 13,
                stop: function() {
                    clearInterval(Ka);
                    Ka = null
                },
                speeds: {
                    slow: 600,
                    fast: 200,
                    _default: 400
                },
                step: {
                    opacity: function(b) {
                        i.style(b.elem, "opacity", b.now)
                    },
                    _default: function(b) {
                        b.elem.style &&
                        b.elem.style[b.prop] != null ? b.elem.style[b.prop] = (b.prop === "width" || b.prop === "height" ? Math.max(0, b.now) : b.now) + b.unit: b.elem[b.prop] = b.now
                    }
                }
            });
            if (i.expr && i.expr.filters) i.expr.filters.animated = function(b) {
                return i.grep(i.timers,
                function(d) {
                    return b === d.elem
                }).length
            };
            var Zb = /^t(?:able|d|h)$/i,
            hb = /^(?:body|html)$/i;
            i.fn.offset = "getBoundingClientRect" in x.documentElement ?
            function(b) {
                var d = this[0],
                c;
                if (b) return this.each(function(d) {
                    i.offset.setOffset(this, b, d)
                });
                if (!d || !d.ownerDocument) return null;
                if (d ===
                d.ownerDocument.body) return i.offset.bodyOffset(d);
                try {
                    c = d.getBoundingClientRect()
                } catch(h) {}
                var e = d.ownerDocument,
                f = e.documentElement;
                if (!c || !i.contains(f, d)) return c ? {
                    top: c.top,
                    left: c.left
                }: {
                    top: 0,
                    left: 0
                };
                d = e.body;
                e = pa(e);
                return {
                    top: c.top + (e.pageYOffset || i.support.boxModel && f.scrollTop || d.scrollTop) - (f.clientTop || d.clientTop || 0),
                    left: c.left + (e.pageXOffset || i.support.boxModel && f.scrollLeft || d.scrollLeft) - (f.clientLeft || d.clientLeft || 0)
                }
            }: function(b) {
                var d = this[0];
                if (b) return this.each(function(d) {
                    i.offset.setOffset(this,
                    b, d)
                });
                if (!d || !d.ownerDocument) return null;
                if (d === d.ownerDocument.body) return i.offset.bodyOffset(d);
                i.offset.initialize();
                var c,
                h = d.offsetParent,
                e = d.ownerDocument,
                f = e.documentElement,
                l = e.body;
                c = (e = e.defaultView) ? e.getComputedStyle(d, null) : d.currentStyle;
                for (var g = d.offsetTop, o = d.offsetLeft; (d = d.parentNode) && d !== l && d !== f;) {
                    if (i.offset.supportsFixedPosition && c.position === "fixed") break;
                    c = e ? e.getComputedStyle(d, null) : d.currentStyle;
                    g -= d.scrollTop;
                    o -= d.scrollLeft;
                    if (d === h) {
                        g += d.offsetTop;
                        o += d.offsetLeft;
                        if (i.offset.doesNotAddBorder && (!i.offset.doesAddBorderForTableAndCells || !Zb.test(d.nodeName))) g += parseFloat(c.borderTopWidth) || 0,
                        o += parseFloat(c.borderLeftWidth) || 0;
                        h = d.offsetParent
                    }
                    i.offset.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (g += parseFloat(c.borderTopWidth) || 0, o += parseFloat(c.borderLeftWidth) || 0)
                }
                if (c.position === "relative" || c.position === "static") g += l.offsetTop,
                o += l.offsetLeft;
                i.offset.supportsFixedPosition && c.position === "fixed" && (g += Math.max(f.scrollTop, l.scrollTop), o +=
                Math.max(f.scrollLeft, l.scrollLeft));
                return {
                    top: g,
                    left: o
                }
            };
            i.offset = {
                initialize: function() {
                    var b = x.body,
                    d = x.createElement("div"),
                    c,
                    h,
                    e,
                    f = parseFloat(i.css(b, "marginTop")) || 0;
                    i.extend(d.style, {
                        position: "absolute",
                        top: 0,
                        left: 0,
                        margin: 0,
                        border: 0,
                        width: "1px",
                        height: "1px",
                        visibility: "hidden"
                    });
                    d.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
                    b.insertBefore(d, b.firstChild);
                    c = d.firstChild;
                    h = c.firstChild;
                    e = c.nextSibling.firstChild.firstChild;
                    this.doesNotAddBorder = h.offsetTop !== 5;
                    this.doesAddBorderForTableAndCells = e.offsetTop === 5;
                    h.style.position = "fixed";
                    h.style.top = "20px";
                    this.supportsFixedPosition = h.offsetTop === 20 || h.offsetTop === 15;
                    h.style.position = h.style.top = "";
                    c.style.overflow = "hidden";
                    c.style.position = "relative";
                    this.subtractsBorderForOverflowNotVisible = h.offsetTop === -5;
                    this.doesNotIncludeMarginInBodyOffset = b.offsetTop !== f;
                    b.removeChild(d);
                    i.offset.initialize = i.noop
                },
                bodyOffset: function(b) {
                    var d = b.offsetTop,
                    c = b.offsetLeft;
                    i.offset.initialize();
                    i.offset.doesNotIncludeMarginInBodyOffset && (d += parseFloat(i.css(b, "marginTop")) || 0, c += parseFloat(i.css(b, "marginLeft")) || 0);
                    return {
                        top: d,
                        left: c
                    }
                },
                setOffset: function(b, d, c) {
                    var h = i.css(b, "position");
                    if (h === "static") b.style.position = "relative";
                    var e = i(b),
                    f = e.offset(),
                    l = i.css(b, "top"),
                    g = i.css(b, "left"),
                    o = {},
                    m = {}; (h === "absolute" || h === "fixed") && i.inArray("auto", [l, g]) > -1 ? (m = e.position(), h = m.top, g =
                    m.left) : (h = parseFloat(l) || 0, g = parseFloat(g) || 0);
                    i.isFunction(d) && (d = d.call(b, c, f));
                    if (d.top != null) o.top = d.top - f.top + h;
                    if (d.left != null) o.left = d.left - f.left + g;
                    "using" in d ? d.using.call(b, o) : e.css(o)
                }
            };
            i.fn.extend({
                position: function() {
                    if (!this[0]) return null;
                    var b = this[0],
                    d = this.offsetParent(),
                    c = this.offset(),
                    h = hb.test(d[0].nodeName) ? {
                        top: 0,
                        left: 0
                    }: d.offset();
                    c.top -= parseFloat(i.css(b, "marginTop")) || 0;
                    c.left -= parseFloat(i.css(b, "marginLeft")) || 0;
                    h.top += parseFloat(i.css(d[0], "borderTopWidth")) || 0;
                    h.left +=
                    parseFloat(i.css(d[0], "borderLeftWidth")) || 0;
                    return {
                        top: c.top - h.top,
                        left: c.left - h.left
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var b = this.offsetParent || x.body; b && !hb.test(b.nodeName) && i.css(b, "position") === "static";) b = b.offsetParent;
                        return b
                    })
                }
            });
            i.each(["Left", "Top"],
            function(b, d) {
                var h = "scroll" + d;
                i.fn[h] = function(d) {
                    var e,
                    f;
                    return d === c ? (e = this[0], !e ? null: (f = pa(e)) ? "pageXOffset" in f ? f[b ? "pageYOffset": "pageXOffset"] : i.support.boxModel && f.document.documentElement[h] || f.document.body[h] :
                    e[h]) : this.each(function() { (f = pa(this)) ? f.scrollTo(!b ? d: i(f).scrollLeft(), b ? d: i(f).scrollTop()) : this[h] = d
                    })
                }
            });
            i.each(["Height", "Width"],
            function(b, d) {
                var h = d.toLowerCase();
                i.fn["inner" + d] = function() {
                    var b = this[0];
                    return b && b.style ? parseFloat(i.css(b, h, "padding")) : null
                };
                i.fn["outer" + d] = function(b) {
                    var d = this[0];
                    return d && d.style ? parseFloat(i.css(d, h, b ? "margin": "border")) : null
                };
                i.fn[h] = function(b) {
                    var e = this[0];
                    if (!e) return b == null ? null: this;
                    if (i.isFunction(b)) return this.each(function(d) {
                        var c = i(this);
                        c[h](b.call(this, d, c[h]()))
                    });
                    if (i.isWindow(e)) {
                        var f = e.document.documentElement["client" + d];
                        return e.document.compatMode === "CSS1Compat" && f || e.document.body["client" + d] || f
                    } else return e.nodeType === 9 ? Math.max(e.documentElement["client" + d], e.body["scroll" + d], e.documentElement["scroll" + d], e.body["offset" + d], e.documentElement["offset" + d]) : b === c ? (e = i.css(e, h), f = parseFloat(e), i.isNaN(f) ? e: f) : this.css(h, typeof b === "string" ? b: b + "px")
                }
            });
            d.jQuery = d.$ = i
        } (q);
        A("jquery.ui.core") &&
        function(d, c) {
            function e(c, e) {
                var n =
                c.nodeName.toLowerCase();
                if ("area" === n) {
                    var n = c.parentNode,
                    b = n.name;
                    if (!c.href || !b || n.nodeName.toLowerCase() !== "map") return ! 1;
                    n = d("img[usemap=#" + b + "]")[0];
                    return !! n && f(n)
                }
                return (/input|select|textarea|button|object/.test(n) ? !c.disabled: "a" == n ? c.href || e: e) && f(c)
            }
            function f(c) {
                return ! d(c).parents().andSelf().filter(function() {
                    return d.curCSS(this, "visibility") === "hidden" || d.expr.filters.hidden(this)
                }).length
            }
            d.ui = d.ui || {};
            d.ui.version || (d.extend(d.ui, {
                version: "1.8.14",
                keyCode: {
                    ALT: 18,
                    BACKSPACE: 8,
                    CAPS_LOCK: 20,
                    COMMA: 188,
                    COMMAND: 91,
                    COMMAND_LEFT: 91,
                    COMMAND_RIGHT: 93,
                    CONTROL: 17,
                    DELETE: 46,
                    DOWN: 40,
                    END: 35,
                    ENTER: 13,
                    ESCAPE: 27,
                    HOME: 36,
                    INSERT: 45,
                    LEFT: 37,
                    MENU: 93,
                    NUMPAD_ADD: 107,
                    NUMPAD_DECIMAL: 110,
                    NUMPAD_DIVIDE: 111,
                    NUMPAD_ENTER: 108,
                    NUMPAD_MULTIPLY: 106,
                    NUMPAD_SUBTRACT: 109,
                    PAGE_DOWN: 34,
                    PAGE_UP: 33,
                    PERIOD: 190,
                    RIGHT: 39,
                    SHIFT: 16,
                    SPACE: 32,
                    TAB: 9,
                    UP: 38,
                    WINDOWS: 91
                }
            }), d.fn.extend({
                _focus: d.fn.focus,
                focus: function(c, e) {
                    return typeof c === "number" ? this.each(function() {
                        var f = this;
                        setTimeout(function() {
                            d(f).focus();
                            e && e.call(f)
                        },
                        c)
                    }) :
                    this._focus.apply(this, arguments)
                },
                scrollParent: function() {
                    var c;
                    c = d.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
                        return /(relative|absolute|fixed)/.test(d.curCSS(this, "position", 1)) && /(auto|scroll)/.test(d.curCSS(this, "overflow", 1) + d.curCSS(this, "overflow-y", 1) + d.curCSS(this, "overflow-x", 1))
                    }).eq(0) : this.parents().filter(function() {
                        return /(auto|scroll)/.test(d.curCSS(this, "overflow", 1) + d.curCSS(this, "overflow-y",
                        1) + d.curCSS(this, "overflow-x", 1))
                    }).eq(0);
                    return /fixed/.test(this.css("position")) || !c.length ? d(document) : c
                },
                zIndex: function(e) {
                    if (e !== c) return this.css("zIndex", e);
                    if (this.length) for (var e = d(this[0]), f; e.length && e[0] !== document;) {
                        f = e.css("position");
                        if (f === "absolute" || f === "relative" || f === "fixed") if (f = parseInt(e.css("zIndex"), 10), !isNaN(f) && f !== 0) return f;
                        e = e.parent()
                    }
                    return 0
                },
                disableSelection: function() {
                    return this.bind((d.support.selectstart ? "selectstart": "mousedown") + ".ui-disableSelection",
                    function(d) {
                        d.preventDefault()
                    })
                },
                enableSelection: function() {
                    return this.unbind(".ui-disableSelection")
                }
            }), d.each(["Width", "Height"],
            function(e, f) {
                function n(c, e, f, h) {
                    d.each(b,
                    function() {
                        e -= parseFloat(d.curCSS(c, "padding" + this, !0)) || 0;
                        f && (e -= parseFloat(d.curCSS(c, "border" + this + "Width", !0)) || 0);
                        h && (e -= parseFloat(d.curCSS(c, "margin" + this, !0)) || 0)
                    });
                    return e
                }
                var b = f === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                l = f.toLowerCase(),
                o = {
                    innerWidth: d.fn.innerWidth,
                    innerHeight: d.fn.innerHeight,
                    outerWidth: d.fn.outerWidth,
                    outerHeight: d.fn.outerHeight
                };
                d.fn["inner" + f] = function(b) {
                    return b === c ? o["inner" + f].call(this) : this.each(function() {
                        d(this).css(l, n(this, b) + "px")
                    })
                };
                d.fn["outer" + f] = function(b, c) {
                    return typeof b !== "number" ? o["outer" + f].call(this, b) : this.each(function() {
                        d(this).css(l, n(this, b, !0, c) + "px")
                    })
                }
            }), d.extend(d.expr[":"], {
                data: function(c, e, f) {
                    return !! d.data(c, f[3])
                },
                focusable: function(c) {
                    return e(c, !isNaN(d.attr(c, "tabindex")))
                },
                tabbable: function(c) {
                    var f = d.attr(c, "tabindex"),
                    n = isNaN(f);
                    return (n || f >= 0) && e(c, !n)
                }
            }), d(function() {
                var c = document.body,
                e = c.appendChild(e = document.createElement("div"));
                d.extend(e.style, {
                    minHeight: "100px",
                    height: "auto",
                    padding: 0,
                    borderWidth: 0
                });
                d.support.minHeight = e.offsetHeight === 100;
                d.support.selectstart = "onselectstart" in e;
                c.removeChild(e).style.display = "none"
            }), d.extend(d.ui, {
                plugin: {
                    add: function(c, e, f) {
                        var c = d.ui[c].prototype,
                        b;
                        for (b in f) c.plugins[b] = c.plugins[b] || [],
                        c.plugins[b].push([e, f[b]])
                    },
                    call: function(d, c, e) {
                        if ((c = d.plugins[c]) && d.element[0].parentNode) for (var b = 0; b < c.length; b++) d.options[c[b][0]] && c[b][1].apply(d.element,
                        e)
                    }
                },
                contains: function(d, c) {
                    return document.compareDocumentPosition ? d.compareDocumentPosition(c) & 16: d !== c && d.contains(c)
                },
                hasScroll: function(c, e) {
                    if (d(c).css("overflow") === "hidden") return ! 1;
                    var f = e && e === "left" ? "scrollLeft": "scrollTop",
                    b = !1;
                    if (c[f] > 0) return ! 0;
                    c[f] = 1;
                    b = c[f] > 0;
                    c[f] = 0;
                    return b
                },
                isOverAxis: function(d, c, e) {
                    return d > c && d < c + e
                },
                isOver: function(c, e, f, b, l, o) {
                    return d.ui.isOverAxis(c, f, l) && d.ui.isOverAxis(e, b, o)
                }
            }))
        } (jQuery);
        A("jquery.ui.widget") &&
        function(d, c) {
            if (d.cleanData) {
                var e = d.cleanData;
                d.cleanData = function(c) {
                    for (var f = 0, n; (n = c[f]) != null; f++) d(n).triggerHandler("remove");
                    e(c)
                }
            } else {
                var f = d.fn.remove;
                d.fn.remove = function(c, e) {
                    return this.each(function() {
                        e || (!c || d.filter(c, [this]).length) && d("*", this).add([this]).each(function() {
                            d(this).triggerHandler("remove")
                        });
                        return f.call(d(this), c, e)
                    })
                }
            }
            d.widget = function(c, e, f) {
                var b = c.split(".")[0],
                l,
                c = c.split(".")[1];
                l = b + "-" + c;
                if (!f) f = e,
                e = d.Widget;
                d.expr[":"][l] = function(b) {
                    return !! d.data(b, c)
                };
                d[b] = d[b] || {};
                d[b][c] = function(b, d) {
                    arguments.length &&
                    this._createWidget(b, d)
                };
                e = new e;
                e.options = d.extend(!0, {},
                e.options);
                d[b][c].prototype = d.extend(!0, e, {
                    namespace: b,
                    widgetName: c,
                    widgetEventPrefix: d[b][c].prototype.widgetEventPrefix || c,
                    widgetBaseClass: l
                },
                f);
                d.widget.bridge(c, d[b][c])
            };
            d.widget.bridge = function(e, f) {
                d.fn[e] = function(n) {
                    var b = typeof n === "string",
                    l = Array.prototype.slice.call(arguments, 1),
                    o = this,
                    n = !b && l.length ? d.extend.apply(null, [!0, n].concat(l)) : n;
                    if (b && n.charAt(0) === "_") return o;
                    b ? this.each(function() {
                        var b = d.data(this, e),
                        f = b && d.isFunction(b[n]) ?
                        b[n].apply(b, l) : b;
                        if (f !== b && f !== c) return o = f,
                        !1
                    }) : this.each(function() {
                        var b = d.data(this, e);
                        b ? b.option(n || {})._init() : d.data(this, e, new f(n, this))
                    });
                    return o
                }
            };
            d.Widget = function(d, c) {
                arguments.length && this._createWidget(d, c)
            };
            d.Widget.prototype = {
                widgetName: "widget",
                widgetEventPrefix: "",
                options: {
                    disabled: !1
                },
                _createWidget: function(c, e) {
                    d.data(e, this.widgetName, this);
                    this.element = d(e);
                    this.options = d.extend(!0, {},
                    this.options, this._getCreateOptions(), c);
                    var f = this;
                    this.element.bind("remove." + this.widgetName,
                    function() {
                        f.destroy()
                    });
                    this._create();
                    this._trigger("create");
                    this._init()
                },
                _getCreateOptions: function() {
                    return d.metadata && d.metadata.get(this.element[0])[this.widgetName]
                },
                _create: function() {},
                _init: function() {},
                destroy: function() {
                    this.element.unbind("." + this.widgetName).removeData(this.widgetName);
                    this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled")
                },
                widget: function() {
                    return this.element
                },
                option: function(e, f) {
                    var n =
                    e;
                    if (arguments.length === 0) return d.extend({},
                    this.options);
                    if (typeof e === "string") {
                        if (f === c) return this.options[e];
                        n = {};
                        n[e] = f
                    }
                    this._setOptions(n);
                    return this
                },
                _setOptions: function(c) {
                    var e = this;
                    d.each(c,
                    function(d, b) {
                        e._setOption(d, b)
                    });
                    return this
                },
                _setOption: function(d, c) {
                    this.options[d] = c;
                    d === "disabled" && this.widget()[c ? "addClass": "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", c);
                    return this
                },
                enable: function() {
                    return this._setOption("disabled", !1)
                },
                disable: function() {
                    return this._setOption("disabled",
                    !0)
                },
                _trigger: function(c, e, f) {
                    var b = this.options[c],
                    e = d.Event(e);
                    e.type = (c === this.widgetEventPrefix ? c: this.widgetEventPrefix + c).toLowerCase();
                    f = f || {};
                    if (e.originalEvent) for (var c = d.event.props.length, l; c;) l = d.event.props[--c],
                    e[l] = e.originalEvent[l];
                    this.element.trigger(e, f);
                    return ! (d.isFunction(b) && b.call(this.element[0], e, f) === !1 || e.isDefaultPrevented())
                }
            }
        } (jQuery);
        A("jquery.ui.mouse") &&
        function(d) {
            d.widget("ui.mouse", {
                options: {
                    cancel: ":input,option",
                    distance: 1,
                    delay: 0
                },
                _mouseInit: function() {
                    var c =
                    this;
                    this.element.bind("mousedown." + this.widgetName,
                    function(d) {
                        return c._mouseDown(d)
                    }).bind("click." + this.widgetName,
                    function(e) {
                        if (!0 === d.data(e.target, c.widgetName + ".preventClickEvent")) return d.removeData(e.target, c.widgetName + ".preventClickEvent"),
                        e.stopImmediatePropagation(),
                        !1
                    });
                    this.started = !1
                },
                _mouseDestroy: function() {
                    this.element.unbind("." + this.widgetName)
                },
                _mouseDown: function(c) {
                    c.originalEvent = c.originalEvent || {};
                    if (!c.originalEvent.mouseHandled) {
                        this._mouseStarted && this._mouseUp(c);
                        this._mouseDownEvent = c;
                        var e = this,
                        f = c.which == 1,
                        g = typeof this.options.cancel == "string" ? d(c.target).closest(this.options.cancel).length: !1;
                        if (!f || g || !this._mouseCapture(c)) return ! 0;
                        this.mouseDelayMet = !this.options.delay;
                        if (!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function() {
                            e.mouseDelayMet = !0
                        },
                        this.options.delay);
                        if (this._mouseDistanceMet(c) && this._mouseDelayMet(c) && (this._mouseStarted = this._mouseStart(c) !== !1, !this._mouseStarted)) return c.preventDefault(),
                        !0; ! 0 === d.data(c.target, this.widgetName +
                        ".preventClickEvent") && d.removeData(c.target, this.widgetName + ".preventClickEvent");
                        this._mouseMoveDelegate = function(d) {
                            return e._mouseMove(d)
                        };
                        this._mouseUpDelegate = function(d) {
                            return e._mouseUp(d)
                        };
                        d(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
                        c.preventDefault();
                        return c.originalEvent.mouseHandled = !0
                    }
                },
                _mouseMove: function(c) {
                    if (d.browser.msie && !(document.documentMode >= 9) && !c.button) return this._mouseUp(c);
                    if (this._mouseStarted) return this._mouseDrag(c),
                    c.preventDefault();
                    if (this._mouseDistanceMet(c) && this._mouseDelayMet(c))(this._mouseStarted = this._mouseStart(this._mouseDownEvent, c) !== !1) ? this._mouseDrag(c) : this._mouseUp(c);
                    return ! this._mouseStarted
                },
                _mouseUp: function(c) {
                    d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
                    if (this._mouseStarted) this._mouseStarted = !1,
                    c.target == this._mouseDownEvent.target && d.data(c.target, this.widgetName + ".preventClickEvent", !0),
                    this._mouseStop(c);
                    return ! 1
                },
                _mouseDistanceMet: function(d) {
                    return Math.max(Math.abs(this._mouseDownEvent.pageX - d.pageX), Math.abs(this._mouseDownEvent.pageY - d.pageY)) >= this.options.distance
                },
                _mouseDelayMet: function() {
                    return this.mouseDelayMet
                },
                _mouseStart: function() {},
                _mouseDrag: function() {},
                _mouseStop: function() {},
                _mouseCapture: function() {
                    return ! 0
                }
            })
        } (jQuery);
        A("jquery.ui.position") &&
        function(d) {
            d.ui = d.ui || {};
            var c = /left|center|right/,
            e = /top|center|bottom/,
            f = d.fn.position,
            g = d.fn.offset;
            d.fn.position = function(g) {
                if (!g ||
                !g.of) return f.apply(this, arguments);
                var g = d.extend({},
                g),
                n = d(g.of),
                b = n[0],
                l = (g.collision || "flip").split(" "),
                o = g.offset ? g.offset.split(" ") : [0, 0],
                F,
                B,
                H;
                b.nodeType === 9 ? (F = n.width(), B = n.height(), H = {
                    top: 0,
                    left: 0
                }) : b.setTimeout ? (F = n.width(), B = n.height(), H = {
                    top: n.scrollTop(),
                    left: n.scrollLeft()
                }) : b.preventDefault ? (g.at = "left top", F = B = 0, H = {
                    top: g.of.pageY,
                    left: g.of.pageX
                }) : (F = n.outerWidth(), B = n.outerHeight(), H = n.offset());
                d.each(["my", "at"],
                function() {
                    var b = (g[this] || "").split(" ");
                    b.length === 1 && (b = c.test(b[0]) ?
                    b.concat(["center"]) : e.test(b[0]) ? ["center"].concat(b) : ["center", "center"]);
                    b[0] = c.test(b[0]) ? b[0] : "center";
                    b[1] = e.test(b[1]) ? b[1] : "center";
                    g[this] = b
                });
                l.length === 1 && (l[1] = l[0]);
                o[0] = parseInt(o[0], 10) || 0;
                o.length === 1 && (o[1] = o[0]);
                o[1] = parseInt(o[1], 10) || 0;
                g.at[0] === "right" ? H.left += F: g.at[0] === "center" && (H.left += F / 2);
                g.at[1] === "bottom" ? H.top += B: g.at[1] === "center" && (H.top += B / 2);
                H.left += o[0];
                H.top += o[1];
                return this.each(function() {
                    var b = d(this),
                    c = b.outerWidth(),
                    e = b.outerHeight(),
                    f = parseInt(d.curCSS(this,
                    "marginLeft", !0)) || 0,
                    n = parseInt(d.curCSS(this, "marginTop", !0)) || 0,
                    q = c + f + (parseInt(d.curCSS(this, "marginRight", !0)) || 0),
                    s = e + n + (parseInt(d.curCSS(this, "marginBottom", !0)) || 0),
                    G = d.extend({},
                    H),
                    w;
                    g.my[0] === "right" ? G.left -= c: g.my[0] === "center" && (G.left -= c / 2);
                    g.my[1] === "bottom" ? G.top -= e: g.my[1] === "center" && (G.top -= e / 2);
                    G.left = Math.round(G.left);
                    G.top = Math.round(G.top);
                    w = {
                        left: G.left - f,
                        top: G.top - n
                    };
                    d.each(["left", "top"],
                    function(b, h) {
                        if (d.ui.position[l[b]]) d.ui.position[l[b]][h](G, {
                            targetWidth: F,
                            targetHeight: B,
                            elemWidth: c,
                            elemHeight: e,
                            collisionPosition: w,
                            collisionWidth: q,
                            collisionHeight: s,
                            offset: o,
                            my: g.my,
                            at: g.at
                        })
                    });
                    d.fn.bgiframe && b.bgiframe();
                    b.offset(d.extend(G, {
                        using: g.using
                    }))
                })
            };
            d.ui.position = {
                fit: {
                    left: function(c, e) {
                        var b = d(q),
                        b = e.collisionPosition.left + e.collisionWidth - b.width() - b.scrollLeft();
                        c.left = b > 0 ? c.left - b: Math.max(c.left - e.collisionPosition.left, c.left)
                    },
                    top: function(c, e) {
                        var b = d(q),
                        b = e.collisionPosition.top + e.collisionHeight - b.height() - b.scrollTop();
                        c.top = b > 0 ? c.top - b: Math.max(c.top - e.collisionPosition.top,
                        c.top)
                    }
                },
                flip: {
                    left: function(c, e) {
                        if (e.at[0] !== "center") {
                            var b = d(q),
                            b = e.collisionPosition.left + e.collisionWidth - b.width() - b.scrollLeft(),
                            f = e.my[0] === "left" ? -e.elemWidth: e.my[0] === "right" ? e.elemWidth: 0,
                            g = e.at[0] === "left" ? e.targetWidth: -e.targetWidth,
                            F = -2 * e.offset[0];
                            c.left += e.collisionPosition.left < 0 ? f + g + F: b > 0 ? f + g + F: 0
                        }
                    },
                    top: function(c, e) {
                        if (e.at[1] !== "center") {
                            var b = d(q),
                            b = e.collisionPosition.top + e.collisionHeight - b.height() - b.scrollTop(),
                            f = e.my[1] === "top" ? -e.elemHeight: e.my[1] === "bottom" ? e.elemHeight:
                            0,
                            g = e.at[1] === "top" ? e.targetHeight: -e.targetHeight,
                            F = -2 * e.offset[1];
                            c.top += e.collisionPosition.top < 0 ? f + g + F: b > 0 ? f + g + F: 0
                        }
                    }
                }
            };
            if (!d.offset.setOffset) d.offset.setOffset = function(c, e) {
                if (/static/.test(d.curCSS(c, "position"))) c.style.position = "relative";
                var b = d(c),
                f = b.offset(),
                g = parseInt(d.curCSS(c, "top", !0), 10) || 0,
                F = parseInt(d.curCSS(c, "left", !0), 10) || 0,
                f = {
                    top: e.top - f.top + g,
                    left: e.left - f.left + F
                };
                "using" in e ? e.using.call(c, f) : b.css(f)
            },
            d.fn.offset = function(c) {
                var e = this[0];
                return ! e || !e.ownerDocument ? null:
                c ? this.each(function() {
                    d.offset.setOffset(this, c)
                }) : g.call(this)
            }
        } (jQuery);
        A("jquery.ui.draggable") &&
        function(d) {
            d.widget("ui.draggable", d.ui.mouse, {
                widgetEventPrefix: "drag",
                options: {
                    addClasses: !0,
                    appendTo: "parent",
                    axis: !1,
                    connectToSortable: !1,
                    containment: !1,
                    cursor: "auto",
                    cursorAt: !1,
                    grid: !1,
                    handle: !1,
                    helper: "original",
                    iframeFix: !1,
                    opacity: !1,
                    refreshPositions: !1,
                    revert: !1,
                    revertDuration: 500,
                    scope: "default",
                    scroll: !0,
                    scrollSensitivity: 20,
                    scrollSpeed: 20,
                    snap: !1,
                    snapMode: "both",
                    snapTolerance: 20,
                    stack: !1,
                    zIndex: !1
                },
                _create: function() {
                    if (this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) this.element[0].style.position = "relative";
                    this.options.addClasses && this.element.addClass("ui-draggable");
                    this.options.disabled && this.element.addClass("ui-draggable-disabled");
                    this._mouseInit()
                },
                destroy: function() {
                    if (this.element.data("draggable")) return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),
                    this._mouseDestroy(),
                    this
                },
                _mouseCapture: function(c) {
                    var e = this.options;
                    if (this.helper || e.disabled || d(c.target).is(".ui-resizable-handle")) return ! 1;
                    this.handle = this._getHandle(c);
                    if (!this.handle) return ! 1;
                    d(e.iframeFix === !0 ? "iframe": e.iframeFix).each(function() {
                        d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                            width: this.offsetWidth + "px",
                            height: this.offsetHeight + "px",
                            position: "absolute",
                            opacity: "0.001",
                            zIndex: 1E3
                        }).css(d(this).offset()).appendTo("body")
                    });
                    return ! 0
                },
                _mouseStart: function(c) {
                    var e =
                    this.options;
                    this.helper = this._createHelper(c);
                    this._cacheHelperProportions();
                    if (d.ui.ddmanager) d.ui.ddmanager.current = this;
                    this._cacheMargins();
                    this.cssPosition = this.helper.css("position");
                    this.scrollParent = this.helper.scrollParent();
                    this.offset = this.positionAbs = this.element.offset();
                    this.offset = {
                        top: this.offset.top - this.margins.top,
                        left: this.offset.left - this.margins.left
                    };
                    d.extend(this.offset, {
                        click: {
                            left: c.pageX - this.offset.left,
                            top: c.pageY - this.offset.top
                        },
                        parent: this._getParentOffset(),
                        relative: this._getRelativeOffset()
                    });
                    this.originalPosition = this.position = this._generatePosition(c);
                    this.originalPageX = c.pageX;
                    this.originalPageY = c.pageY;
                    e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt);
                    e.containment && this._setContainment();
                    if (this._trigger("start", c) === !1) return this._clear(),
                    !1;
                    this._cacheHelperProportions();
                    d.ui.ddmanager && !e.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, c);
                    this.helper.addClass("ui-draggable-dragging");
                    this._mouseDrag(c, !0);
                    d.ui.ddmanager && d.ui.ddmanager.dragStart(this, c);
                    return ! 0
                },
                _mouseDrag: function(c,
                e) {
                    this.position = this._generatePosition(c);
                    this.positionAbs = this._convertPositionTo("absolute");
                    if (!e) {
                        var f = this._uiHash();
                        if (this._trigger("drag", c, f) === !1) return this._mouseUp({}),
                        !1;
                        this.position = f.position
                    }
                    if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
                    if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
                    d.ui.ddmanager && d.ui.ddmanager.drag(this, c);
                    return ! 1
                },
                _mouseStop: function(c) {
                    var e = !1;
                    d.ui.ddmanager &&
                    !this.options.dropBehaviour && (e = d.ui.ddmanager.drop(this, c));
                    if (this.dropped) e = this.dropped,
                    this.dropped = !1;
                    if ((!this.element[0] || !this.element[0].parentNode) && this.options.helper == "original") return ! 1;
                    if (this.options.revert == "invalid" && !e || this.options.revert == "valid" && e || this.options.revert === !0 || d.isFunction(this.options.revert) && this.options.revert.call(this.element, e)) {
                        var f = this;
                        d(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10),
                        function() {
                            f._trigger("stop",
                            c) !== !1 && f._clear()
                        })
                    } else this._trigger("stop", c) !== !1 && this._clear();
                    return ! 1
                },
                _mouseUp: function(c) {
                    this.options.iframeFix === !0 && d("div.ui-draggable-iframeFix").each(function() {
                        this.parentNode.removeChild(this)
                    });
                    d.ui.ddmanager && d.ui.ddmanager.dragStop(this, c);
                    return d.ui.mouse.prototype._mouseUp.call(this, c)
                },
                cancel: function() {
                    this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();
                    return this
                },
                _getHandle: function(c) {
                    var e = !this.options.handle || !d(this.options.handle, this.element).length ?
                    !0: !1;
                    d(this.options.handle, this.element).find("*").andSelf().each(function() {
                        this == c.target && (e = !0)
                    });
                    return e
                },
                _createHelper: function(c) {
                    var e = this.options,
                    c = d.isFunction(e.helper) ? d(e.helper.apply(this.element[0], [c])) : e.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
                    c.parents("body").length || c.appendTo(e.appendTo == "parent" ? this.element[0].parentNode: e.appendTo);
                    c[0] != this.element[0] && !/(fixed|absolute)/.test(c.css("position")) && c.css("position", "absolute");
                    return c
                },
                _adjustOffsetFromHelper: function(c) {
                    typeof c ==
                    "string" && (c = c.split(" "));
                    d.isArray(c) && (c = {
                        left: +c[0],
                        top: +c[1] || 0
                    });
                    if ("left" in c) this.offset.click.left = c.left + this.margins.left;
                    if ("right" in c) this.offset.click.left = this.helperProportions.width - c.right + this.margins.left;
                    if ("top" in c) this.offset.click.top = c.top + this.margins.top;
                    if ("bottom" in c) this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top
                },
                _getParentOffset: function() {
                    this.offsetParent = this.helper.offsetParent();
                    var c = this.offsetParent.offset();
                    this.cssPosition ==
                    "absolute" && this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (c.left += this.scrollParent.scrollLeft(), c.top += this.scrollParent.scrollTop());
                    if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.browser.msie) c = {
                        top: 0,
                        left: 0
                    };
                    return {
                        top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                        left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                    }
                },
                _getRelativeOffset: function() {
                    if (this.cssPosition ==
                    "relative") {
                        var d = this.element.position();
                        return {
                            top: d.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                            left: d.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                        }
                    } else return {
                        top: 0,
                        left: 0
                    }
                },
                _cacheMargins: function() {
                    this.margins = {
                        left: parseInt(this.element.css("marginLeft"), 10) || 0,
                        top: parseInt(this.element.css("marginTop"), 10) || 0,
                        right: parseInt(this.element.css("marginRight"), 10) || 0,
                        bottom: parseInt(this.element.css("marginBottom"), 10) || 0
                    }
                },
                _cacheHelperProportions: function() {
                    this.helperProportions =
                    {
                        width: this.helper.outerWidth(),
                        height: this.helper.outerHeight()
                    }
                },
                _setContainment: function() {
                    var c = this.options;
                    if (c.containment == "parent") c.containment = this.helper[0].parentNode;
                    if (c.containment == "document" || c.containment == "window") this.containment = [c.containment == "document" ? 0: d(q).scrollLeft() - this.offset.relative.left - this.offset.parent.left, c.containment == "document" ? 0: d(q).scrollTop() - this.offset.relative.top - this.offset.parent.top, (c.containment == "document" ? 0: d(q).scrollLeft()) + d(c.containment ==
                    "document" ? document: q).width() - this.helperProportions.width - this.margins.left, (c.containment == "document" ? 0: d(q).scrollTop()) + (d(c.containment == "document" ? document: q).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                    if (!/^(document|window|parent)$/.test(c.containment) && c.containment.constructor != Array) {
                        var c = d(c.containment),
                        e = c[0];
                        if (e) {
                            c.offset();
                            var f = d(e).css("overflow") != "hidden";
                            this.containment = [(parseInt(d(e).css("borderLeftWidth"), 10) || 0) + (parseInt(d(e).css("paddingLeft"),
                            10) || 0), (parseInt(d(e).css("borderTopWidth"), 10) || 0) + (parseInt(d(e).css("paddingTop"), 10) || 0), (f ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(d(e).css("borderLeftWidth"), 10) || 0) - (parseInt(d(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(d(e).css("borderTopWidth"), 10) || 0) - (parseInt(d(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
                            this.relative_container = c
                        }
                    } else if (c.containment.constructor == Array) this.containment = c.containment
                },
                _convertPositionTo: function(c, e) {
                    if (!e) e = this.position;
                    var f = c == "absolute" ? 1: -1,
                    g = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
                    m = /(html|body)/i.test(g[0].tagName);
                    return {
                        top: e.top + this.offset.relative.top * f + this.offset.parent.top * f - (d.browser.safari && d.browser.version < 526 && this.cssPosition ==
                        "fixed" ? 0: (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : m ? 0: g.scrollTop()) * f),
                        left: e.left + this.offset.relative.left * f + this.offset.parent.left * f - (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0: (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : m ? 0: g.scrollLeft()) * f)
                    }
                },
                _generatePosition: function(c) {
                    var e = this.options,
                    f = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent:
                    this.scrollParent,
                    g = /(html|body)/i.test(f[0].tagName),
                    m = c.pageX,
                    n = c.pageY;
                    if (this.originalPosition) {
                        var b;
                        if (this.containment) this.relative_container ? (b = this.relative_container.offset(), b = [this.containment[0] + b.left, this.containment[1] + b.top, this.containment[2] + b.left, this.containment[3] + b.top]) : b = this.containment,
                        c.pageX - this.offset.click.left < b[0] && (m = b[0] + this.offset.click.left),
                        c.pageY - this.offset.click.top < b[1] && (n = b[1] + this.offset.click.top),
                        c.pageX - this.offset.click.left > b[2] && (m = b[2] + this.offset.click.left),
                        c.pageY - this.offset.click.top > b[3] && (n = b[3] + this.offset.click.top);
                        e.grid && (n = e.grid[1] ? this.originalPageY + Math.round((n - this.originalPageY) / e.grid[1]) * e.grid[1] : this.originalPageY, n = b ? !(n - this.offset.click.top < b[1] || n - this.offset.click.top > b[3]) ? n: !(n - this.offset.click.top < b[1]) ? n - e.grid[1] : n + e.grid[1] : n, m = e.grid[0] ? this.originalPageX + Math.round((m - this.originalPageX) / e.grid[0]) * e.grid[0] : this.originalPageX, m = b ? !(m - this.offset.click.left < b[0] || m - this.offset.click.left > b[2]) ? m: !(m - this.offset.click.left <
                        b[0]) ? m - e.grid[0] : m + e.grid[0] : m)
                    }
                    return {
                        top: n - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0: this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0: f.scrollTop()),
                        left: m - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0: this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0: f.scrollLeft())
                    }
                },
                _clear: function() {
                    this.helper.removeClass("ui-draggable-dragging");
                    this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
                    this.helper = null;
                    this.cancelHelperRemoval = !1
                },
                _trigger: function(c, e, f) {
                    f = f || this._uiHash();
                    d.ui.plugin.call(this, c, [e, f]);
                    if (c == "drag") this.positionAbs = this._convertPositionTo("absolute");
                    return d.Widget.prototype._trigger.call(this, c, e, f)
                },
                plugins: {},
                _uiHash: function() {
                    return {
                        helper: this.helper,
                        position: this.position,
                        originalPosition: this.originalPosition,
                        offset: this.positionAbs
                    }
                }
            });
            d.extend(d.ui.draggable, {
                version: "1.8.14"
            });
            d.ui.plugin.add("draggable", "connectToSortable", {
                start: function(c, e) {
                    var f = d(this).data("draggable"),
                    g = f.options,
                    m = d.extend({},
                    e, {
                        item: f.element
                    });
                    f.sortables = [];
                    d(g.connectToSortable).each(function() {
                        var e = d.data(this, "sortable");
                        e && !e.options.disabled && (f.sortables.push({
                            instance: e,
                            shouldRevert: e.options.revert
                        }), e.refreshPositions(), e._trigger("activate", c, m))
                    })
                },
                stop: function(c, e) {
                    var f = d(this).data("draggable"),
                    g = d.extend({},
                    e, {
                        item: f.element
                    });
                    d.each(f.sortables,
                    function() {
                        if (this.instance.isOver) {
                            this.instance.isOver =
                            0;
                            f.cancelHelperRemoval = !0;
                            this.instance.cancelHelperRemoval = !1;
                            if (this.shouldRevert) this.instance.options.revert = !0;
                            this.instance._mouseStop(c);
                            this.instance.options.helper = this.instance.options._helper;
                            f.options.helper == "original" && this.instance.currentItem.css({
                                top: "auto",
                                left: "auto"
                            })
                        } else this.instance.cancelHelperRemoval = !1,
                        this.instance._trigger("deactivate", c, g)
                    })
                },
                drag: function(c, e) {
                    var f = d(this).data("draggable"),
                    g = this;
                    d.each(f.sortables,
                    function() {
                        this.instance.positionAbs = f.positionAbs;
                        this.instance.helperProportions = f.helperProportions;
                        this.instance.offset.click = f.offset.click;
                        if (this.instance._intersectsWith(this.instance.containerCache)) {
                            if (!this.instance.isOver) this.instance.isOver = 1,
                            this.instance.currentItem = d(g).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0),
                            this.instance.options._helper = this.instance.options.helper,
                            this.instance.options.helper = function() {
                                return e.helper[0]
                            },
                            c.target = this.instance.currentItem[0],
                            this.instance._mouseCapture(c,
                            !0),
                            this.instance._mouseStart(c, !0, !0),
                            this.instance.offset.click.top = f.offset.click.top,
                            this.instance.offset.click.left = f.offset.click.left,
                            this.instance.offset.parent.left -= f.offset.parent.left - this.instance.offset.parent.left,
                            this.instance.offset.parent.top -= f.offset.parent.top - this.instance.offset.parent.top,
                            f._trigger("toSortable", c),
                            f.dropped = this.instance.element,
                            f.currentItem = f.element,
                            this.instance.fromOutside = f;
                            this.instance.currentItem && this.instance._mouseDrag(c)
                        } else if (this.instance.isOver) this.instance.isOver =
                        0,
                        this.instance.cancelHelperRemoval = !0,
                        this.instance.options.revert = !1,
                        this.instance._trigger("out", c, this.instance._uiHash(this.instance)),
                        this.instance._mouseStop(c, !0),
                        this.instance.options.helper = this.instance.options._helper,
                        this.instance.currentItem.remove(),
                        this.instance.placeholder && this.instance.placeholder.remove(),
                        f._trigger("fromSortable", c),
                        f.dropped = !1
                    })
                }
            });
            d.ui.plugin.add("draggable", "cursor", {
                start: function() {
                    var c = d("body"),
                    e = d(this).data("draggable").options;
                    if (c.css("cursor")) e._cursor =
                    c.css("cursor");
                    c.css("cursor", e.cursor)
                },
                stop: function() {
                    var c = d(this).data("draggable").options;
                    c._cursor && d("body").css("cursor", c._cursor)
                }
            });
            d.ui.plugin.add("draggable", "opacity", {
                start: function(c, e) {
                    var f = d(e.helper),
                    g = d(this).data("draggable").options;
                    if (f.css("opacity")) g._opacity = f.css("opacity");
                    f.css("opacity", g.opacity)
                },
                stop: function(c, e) {
                    var f = d(this).data("draggable").options;
                    f._opacity && d(e.helper).css("opacity", f._opacity)
                }
            });
            d.ui.plugin.add("draggable", "scroll", {
                start: function() {
                    var c =
                    d(this).data("draggable");
                    if (c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML") c.overflowOffset = c.scrollParent.offset()
                },
                drag: function(c) {
                    var e = d(this).data("draggable"),
                    f = e.options,
                    g = !1;
                    if (e.scrollParent[0] != document && e.scrollParent[0].tagName != "HTML") {
                        if (!f.axis || f.axis != "x") if (e.overflowOffset.top + e.scrollParent[0].offsetHeight - c.pageY < f.scrollSensitivity) e.scrollParent[0].scrollTop = g = e.scrollParent[0].scrollTop + f.scrollSpeed;
                        else if (c.pageY - e.overflowOffset.top < f.scrollSensitivity) e.scrollParent[0].scrollTop =
                        g = e.scrollParent[0].scrollTop - f.scrollSpeed;
                        if (!f.axis || f.axis != "y") if (e.overflowOffset.left + e.scrollParent[0].offsetWidth - c.pageX < f.scrollSensitivity) e.scrollParent[0].scrollLeft = g = e.scrollParent[0].scrollLeft + f.scrollSpeed;
                        else if (c.pageX - e.overflowOffset.left < f.scrollSensitivity) e.scrollParent[0].scrollLeft = g = e.scrollParent[0].scrollLeft - f.scrollSpeed
                    } else {
                        if (!f.axis || f.axis != "x") c.pageY - d(document).scrollTop() < f.scrollSensitivity ? g = d(document).scrollTop(d(document).scrollTop() - f.scrollSpeed) :
                        d(q).height() - (c.pageY - d(document).scrollTop()) < f.scrollSensitivity && (g = d(document).scrollTop(d(document).scrollTop() + f.scrollSpeed));
                        if (!f.axis || f.axis != "y") c.pageX - d(document).scrollLeft() < f.scrollSensitivity ? g = d(document).scrollLeft(d(document).scrollLeft() - f.scrollSpeed) : d(q).width() - (c.pageX - d(document).scrollLeft()) < f.scrollSensitivity && (g = d(document).scrollLeft(d(document).scrollLeft() + f.scrollSpeed))
                    }
                    g !== !1 && d.ui.ddmanager && !f.dropBehaviour && d.ui.ddmanager.prepareOffsets(e, c)
                }
            });
            d.ui.plugin.add("draggable",
            "snap", {
                start: function() {
                    var c = d(this).data("draggable"),
                    e = c.options;
                    c.snapElements = [];
                    d(e.snap.constructor != String ? e.snap.items || ":data(draggable)": e.snap).each(function() {
                        var e = d(this),
                        g = e.offset();
                        this != c.element[0] && c.snapElements.push({
                            item: this,
                            width: e.outerWidth(),
                            height: e.outerHeight(),
                            top: g.top,
                            left: g.left
                        })
                    })
                },
                drag: function(c, e) {
                    for (var f = d(this).data("draggable"), g = f.options, m = g.snapTolerance, n = e.offset.left, b = n + f.helperProportions.width, l = e.offset.top, o = l + f.helperProportions.height, F =
                    f.snapElements.length - 1; F >= 0; F--) {
                        var B = f.snapElements[F].left,
                        H = B + f.snapElements[F].width,
                        h = f.snapElements[F].top,
                        u = h + f.snapElements[F].height;
                        if (B - m < n && n < H + m && h - m < l && l < u + m || B - m < n && n < H + m && h - m < o && o < u + m || B - m < b && b < H + m && h - m < l && l < u + m || B - m < b && b < H + m && h - m < o && o < u + m) {
                            if (g.snapMode != "inner") {
                                var C = Math.abs(h - o) <= m,
                                E = Math.abs(u - l) <= m,
                                D = Math.abs(B - b) <= m,
                                q = Math.abs(H - n) <= m;
                                if (C) e.position.top = f._convertPositionTo("relative", {
                                    top: h - f.helperProportions.height,
                                    left: 0
                                }).top - f.margins.top;
                                if (E) e.position.top = f._convertPositionTo("relative",
                                {
                                    top: u,
                                    left: 0
                                }).top - f.margins.top;
                                if (D) e.position.left = f._convertPositionTo("relative", {
                                    top: 0,
                                    left: B - f.helperProportions.width
                                }).left - f.margins.left;
                                if (q) e.position.left = f._convertPositionTo("relative", {
                                    top: 0,
                                    left: H
                                }).left - f.margins.left
                            }
                            var s = C || E || D || q;
                            if (g.snapMode != "outer") {
                                C = Math.abs(h - l) <= m;
                                E = Math.abs(u - o) <= m;
                                D = Math.abs(B - n) <= m;
                                q = Math.abs(H - b) <= m;
                                if (C) e.position.top = f._convertPositionTo("relative", {
                                    top: h,
                                    left: 0
                                }).top - f.margins.top;
                                if (E) e.position.top = f._convertPositionTo("relative", {
                                    top: u - f.helperProportions.height,
                                    left: 0
                                }).top - f.margins.top;
                                if (D) e.position.left = f._convertPositionTo("relative", {
                                    top: 0,
                                    left: B
                                }).left - f.margins.left;
                                if (q) e.position.left = f._convertPositionTo("relative", {
                                    top: 0,
                                    left: H - f.helperProportions.width
                                }).left - f.margins.left
                            } ! f.snapElements[F].snapping && (C || E || D || q || s) && f.options.snap.snap && f.options.snap.snap.call(f.element, c, d.extend(f._uiHash(), {
                                snapItem: f.snapElements[F].item
                            }));
                            f.snapElements[F].snapping = C || E || D || q || s
                        } else f.snapElements[F].snapping && f.options.snap.release && f.options.snap.release.call(f.element,
                        c, d.extend(f._uiHash(), {
                            snapItem: f.snapElements[F].item
                        })),
                        f.snapElements[F].snapping = !1
                    }
                }
            });
            d.ui.plugin.add("draggable", "stack", {
                start: function() {
                    var c = d(this).data("draggable").options,
                    c = d.makeArray(d(c.stack)).sort(function(c, e) {
                        return (parseInt(d(c).css("zIndex"), 10) || 0) - (parseInt(d(e).css("zIndex"), 10) || 0)
                    });
                    if (c.length) {
                        var e = parseInt(c[0].style.zIndex) || 0;
                        d(c).each(function(d) {
                            this.style.zIndex = e + d
                        });
                        this[0].style.zIndex = e + c.length
                    }
                }
            });
            d.ui.plugin.add("draggable", "zIndex", {
                start: function(c,
                e) {
                    var f = d(e.helper),
                    g = d(this).data("draggable").options;
                    if (f.css("zIndex")) g._zIndex = f.css("zIndex");
                    f.css("zIndex", g.zIndex)
                },
                stop: function(c, e) {
                    var f = d(this).data("draggable").options;
                    f._zIndex && d(e.helper).css("zIndex", f._zIndex)
                }
            })
        } (jQuery);
        A("jquery.ui.droppable") &&
        function(d) {
            d.widget("ui.droppable", {
                widgetEventPrefix: "drop",
                options: {
                    accept: "*",
                    activeClass: !1,
                    addClasses: !0,
                    greedy: !1,
                    hoverClass: !1,
                    scope: "default",
                    tolerance: "intersect"
                },
                _create: function() {
                    var c = this.options,
                    e = c.accept;
                    this.isover =
                    0;
                    this.isout = 1;
                    this.accept = d.isFunction(e) ? e: function(d) {
                        return d.is(e)
                    };
                    this.proportions = {
                        width: this.element[0].offsetWidth,
                        height: this.element[0].offsetHeight
                    };
                    d.ui.ddmanager.droppables[c.scope] = d.ui.ddmanager.droppables[c.scope] || [];
                    d.ui.ddmanager.droppables[c.scope].push(this);
                    c.addClasses && this.element.addClass("ui-droppable")
                },
                destroy: function() {
                    for (var c = d.ui.ddmanager.droppables[this.options.scope], e = 0; e < c.length; e++) c[e] == this && c.splice(e, 1);
                    this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");
                    return this
                },
                _setOption: function(c, e) {
                    if (c == "accept") this.accept = d.isFunction(e) ? e: function(d) {
                        return d.is(e)
                    };
                    d.Widget.prototype._setOption.apply(this, arguments)
                },
                _activate: function(c) {
                    var e = d.ui.ddmanager.current;
                    this.options.activeClass && this.element.addClass(this.options.activeClass);
                    e && this._trigger("activate", c, this.ui(e))
                },
                _deactivate: function(c) {
                    var e = d.ui.ddmanager.current;
                    this.options.activeClass && this.element.removeClass(this.options.activeClass);
                    e && this._trigger("deactivate", c, this.ui(e))
                },
                _over: function(c) {
                    var e = d.ui.ddmanager.current;
                    if (e && (e.currentItem || e.element)[0] != this.element[0]) if (this.accept.call(this.element[0], e.currentItem || e.element)) this.options.hoverClass && this.element.addClass(this.options.hoverClass),
                    this._trigger("over", c, this.ui(e))
                },
                _out: function(c) {
                    var e = d.ui.ddmanager.current;
                    if (e && (e.currentItem || e.element)[0] != this.element[0]) if (this.accept.call(this.element[0], e.currentItem || e.element)) this.options.hoverClass && this.element.removeClass(this.options.hoverClass),
                    this._trigger("out", c, this.ui(e))
                },
                _drop: function(c, e) {
                    var f = e || d.ui.ddmanager.current;
                    if (!f || (f.currentItem || f.element)[0] == this.element[0]) return ! 1;
                    var g = !1;
                    this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                        var c = d.data(this, "droppable");
                        if (c.options.greedy && !c.options.disabled && c.options.scope == f.options.scope && c.accept.call(c.element[0], f.currentItem || f.element) && d.ui.intersect(f, d.extend(c, {
                            offset: c.element.offset()
                        }), c.options.tolerance)) return g = !0,
                        !1
                    });
                    return g ?
                    !1: this.accept.call(this.element[0], f.currentItem || f.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", c, this.ui(f)), this.element) : !1
                },
                ui: function(d) {
                    return {
                        draggable: d.currentItem || d.element,
                        helper: d.helper,
                        position: d.position,
                        offset: d.positionAbs
                    }
                },
                _inBounds: function(d) {
                    return typeof this.options.inBounds === "function" ? this.options.inBounds(d) : !1
                }
            });
            d.extend(d.ui.droppable,
            {
                version: "1.8.14"
            });
            d.ui.intersect = function(c, e, f) {
                if (!e.offset) return ! 1;
                var g = (c.positionAbs || c.position.absolute).left,
                m = g + c.helperProportions.width,
                n = (c.positionAbs || c.position.absolute).top,
                b = n + c.helperProportions.height,
                l = e.offset.left,
                o = l + e.proportions.width,
                F = e.offset.top,
                B = F + e.proportions.height;
                switch (f) {
                case "fit":
                    return l <= g && m <= o && F <= n && b <= B;
                case "intersect":
                    return l < g + c.helperProportions.width / 2 && m - c.helperProportions.width / 2 < o && F < n + c.helperProportions.height / 2 && b - c.helperProportions.height /
                    2 < B;
                case "pointer":
                    return d.ui.isOver((c.positionAbs || c.position.absolute).top + (c.clickOffset || c.offset.click).top, (c.positionAbs || c.position.absolute).left + (c.clickOffset || c.offset.click).left, F, l, e.proportions.height, e.proportions.width);
                case "touch":
                    return (n >= F && n <= B || b >= F && b <= B || n < F && b > B) && (g >= l && g <= o || m >= l && m <= o || g < l && m > o);
                default:
                    return ! 1
                }
            };
            d.ui.ddmanager = {
                current: null,
                droppables: {
                    "default": []
                },
                prepareOffsets: function(c, e) {
                    var f = d.ui.ddmanager.droppables[c.options.scope] || [],
                    g = e ? e.type: null,
                    m = (c.currentItem || c.element).find(":data(droppable)").andSelf(),
                    n = 0;
                    a: for (; n < f.length; n++) if (! (f[n].options.disabled || c && !f[n].accept.call(f[n].element[0], c.currentItem || c.element))) {
                        for (var b = 0; b < m.length; b++) if (m[b] == f[n].element[0]) {
                            f[n].proportions.height = 0;
                            continue a
                        }
                        f[n].visible = f[n].element.css("display") != "none";
                        if (f[n].visible) g == "mousedown" && f[n]._activate.call(f[n], e),
                        f[n].offset = f[n].element.offset(),
                        f[n].proportions = {
                            width: f[n].element[0].offsetWidth,
                            height: f[n].element[0].offsetHeight
                        }
                    }
                },
                drop: function(c, e) {
                    var f = !1;
                    d.each(d.ui.ddmanager.droppables[c.options.scope] || [],
                    function() {
                        if (this.options && (!this.options.disabled && this.visible && this._inBounds(e) && d.ui.intersect(c, this, this.options.tolerance) && (f = f || this._drop.call(this, e)), !this.options.disabled && this.visible && this.accept.call(this.element[0], c.currentItem || c.element))) this.isout = 1,
                        this.isover = 0,
                        this._deactivate.call(this, e)
                    });
                    return f
                },
                dragStart: function(c, e) {
                    c.element.parentsUntil("body").bind("scroll.droppable",
                    function() {
                        c.options.refreshPositions ||
                        d.ui.ddmanager.prepareOffsets(c, e)
                    })
                },
                drag: function(c, e) {
                    c.options.refreshPositions && d.ui.ddmanager.prepareOffsets(c, e);
                    d.each(d.ui.ddmanager.droppables[c.options.scope] || [],
                    function() {
                        if (!this.options.disabled && !this.greedyChild && this.visible) {
                            var f = this._inBounds(e) && d.ui.intersect(c, this, this.options.tolerance);
                            if (f = !f && this.isover == 1 ? "isout": f && this.isover == 0 ? "isover": null) {
                                var g;
                                if (this.options.greedy) {
                                    var m = this.element.parents(":data(droppable):eq(0)");
                                    if (m.length) g = d.data(m[0], "droppable"),
                                    g.greedyChild = f == "isover" ? 1: 0
                                }
                                if (g && f == "isover") g.isover = 0,
                                g.isout = 1,
                                g._out.call(g, e);
                                this[f] = 1;
                                this[f == "isout" ? "isover": "isout"] = 0;
                                this[f == "isover" ? "_over": "_out"].call(this, e);
                                if (g && f == "isout") g.isout = 0,
                                g.isover = 1,
                                g._over.call(g, e)
                            }
                        }
                    })
                },
                dragStop: function(c, e) {
                    c.element.parentsUntil("body").unbind("scroll.droppable");
                    c.options.refreshPositions || d.ui.ddmanager.prepareOffsets(c, e)
                }
            }
        } (jQuery);
        A("jquery.ui.sortable") &&
        function(d) {
            d.widget("ui.sortable", d.ui.mouse, {
                widgetEventPrefix: "sort",
                options: {
                    appendTo: "parent",
                    axis: !1,
                    connectWith: !1,
                    containment: !1,
                    cursor: "auto",
                    cursorAt: !1,
                    dropOnEmpty: !0,
                    forcePlaceholderSize: !1,
                    forceHelperSize: !1,
                    grid: !1,
                    handle: !1,
                    helper: "original",
                    items: "> *",
                    opacity: !1,
                    placeholder: !1,
                    revert: !1,
                    scroll: !0,
                    scrollSensitivity: 20,
                    scrollSpeed: 20,
                    scope: "default",
                    tolerance: "intersect",
                    zIndex: 1E3
                },
                _create: function() {
                    var d = this.options;
                    this.containerCache = {};
                    this.element.addClass("ui-sortable");
                    this.refresh();
                    this.floating = this.items.length ? d.axis === "x" || /left|right/.test(this.items[0].item.css("float")) ||
                    /inline|table-cell/.test(this.items[0].item.css("display")) : !1;
                    this.offset = this.element.offset();
                    this._mouseInit()
                },
                destroy: function() {
                    this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");
                    this._mouseDestroy();
                    for (var d = this.items.length - 1; d >= 0; d--) this.items[d].item.removeData("sortable-item");
                    return this
                },
                _setOption: function(c, e) {
                    c === "disabled" ? (this.options[c] = e, this.widget()[e ? "addClass": "removeClass"]("ui-sortable-disabled")) : d.Widget.prototype._setOption.apply(this,
                    arguments)
                },
                _mouseCapture: function(c, e) {
                    if (this.reverting) return ! 1;
                    if (this.options.disabled || this.options.type == "static") return ! 1;
                    this._refreshItems(c);
                    var f = null,
                    g = this;
                    d(c.target).parents().each(function() {
                        if (d.data(this, "sortable-item") == g) return f = d(this),
                        !1
                    });
                    d.data(c.target, "sortable-item") == g && (f = d(c.target));
                    if (!f) return ! 1;
                    if (this.options.handle && !e) {
                        var m = !1;
                        d(this.options.handle, f).find("*").andSelf().each(function() {
                            this == c.target && (m = !0)
                        });
                        if (!m) return ! 1
                    }
                    this.currentItem = f;
                    this._removeCurrentsFromItems();
                    return ! 0
                },
                _mouseStart: function(c, e, f) {
                    e = this.options;
                    this.currentContainer = this;
                    this.refreshPositions();
                    this.helper = this._createHelper(c);
                    this._cacheHelperProportions();
                    this._cacheMargins();
                    this.scrollParent = this.helper.scrollParent();
                    this.offset = this.currentItem.offset();
                    this.offset = {
                        top: this.offset.top - this.margins.top,
                        left: this.offset.left - this.margins.left
                    };
                    this.helper.css("position", "absolute");
                    this.cssPosition = this.helper.css("position");
                    d.extend(this.offset, {
                        click: {
                            left: c.pageX - this.offset.left,
                            top: c.pageY - this.offset.top
                        },
                        parent: this._getParentOffset(),
                        relative: this._getRelativeOffset()
                    });
                    this.originalPosition = this._generatePosition(c);
                    this.originalPageX = c.pageX;
                    this.originalPageY = c.pageY;
                    e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt);
                    this.domPosition = {
                        prev: this.currentItem.prev()[0],
                        parent: this.currentItem.parent()[0]
                    };
                    this.helper[0] != this.currentItem[0] && this.currentItem.hide();
                    this._createPlaceholder();
                    e.containment && this._setContainment();
                    if (e.cursor) {
                        if (d("body").css("cursor")) this._storedCursor =
                        d("body").css("cursor");
                        d("body").css("cursor", e.cursor)
                    }
                    if (e.opacity) {
                        if (this.helper.css("opacity")) this._storedOpacity = this.helper.css("opacity");
                        this.helper.css("opacity", e.opacity)
                    }
                    if (e.zIndex) {
                        if (this.helper.css("zIndex")) this._storedZIndex = this.helper.css("zIndex");
                        this.helper.css("zIndex", e.zIndex)
                    }
                    if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") this.overflowOffset = this.scrollParent.offset();
                    this._trigger("start", c, this._uiHash());
                    this._preserveHelperProportions || this._cacheHelperProportions();
                    if (!f) for (f = this.containers.length - 1; f >= 0; f--) this.containers[f]._trigger("activate", c, this._uiHash(this));
                    if (d.ui.ddmanager) d.ui.ddmanager.current = this;
                    d.ui.ddmanager && !e.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, c);
                    this.dragging = !0;
                    this.helper.addClass("ui-sortable-helper");
                    this._mouseDrag(c);
                    return ! 0
                },
                _mouseDrag: function(c) {
                    this.position = this._generatePosition(c);
                    this.positionAbs = this._convertPositionTo("absolute");
                    if (!this.lastPositionAbs) this.lastPositionAbs = this.positionAbs;
                    if (this.options.scroll) {
                        var e =
                        this.options,
                        f = !1;
                        if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                            if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - c.pageY < e.scrollSensitivity) this.scrollParent[0].scrollTop = f = this.scrollParent[0].scrollTop + e.scrollSpeed;
                            else if (c.pageY - this.overflowOffset.top < e.scrollSensitivity) this.scrollParent[0].scrollTop = f = this.scrollParent[0].scrollTop - e.scrollSpeed;
                            if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - c.pageX < e.scrollSensitivity) this.scrollParent[0].scrollLeft =
                            f = this.scrollParent[0].scrollLeft + e.scrollSpeed;
                            else if (c.pageX - this.overflowOffset.left < e.scrollSensitivity) this.scrollParent[0].scrollLeft = f = this.scrollParent[0].scrollLeft - e.scrollSpeed
                        } else c.pageY - d(document).scrollTop() < e.scrollSensitivity ? f = d(document).scrollTop(d(document).scrollTop() - e.scrollSpeed) : d(q).height() - (c.pageY - d(document).scrollTop()) < e.scrollSensitivity && (f = d(document).scrollTop(d(document).scrollTop() + e.scrollSpeed)),
                        c.pageX - d(document).scrollLeft() < e.scrollSensitivity ? f = d(document).scrollLeft(d(document).scrollLeft() -
                        e.scrollSpeed) : d(q).width() - (c.pageX - d(document).scrollLeft()) < e.scrollSensitivity && (f = d(document).scrollLeft(d(document).scrollLeft() + e.scrollSpeed));
                        f !== !1 && d.ui.ddmanager && !e.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, c)
                    }
                    this.positionAbs = this._convertPositionTo("absolute");
                    if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
                    if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
                    for (e = this.items.length - 1; e >=
                    0; e--) {
                        var f = this.items[e],
                        g = f.item[0],
                        m = this._intersectsWithPointer(f);
                        if (m && g != this.currentItem[0] && this.placeholder[m == 1 ? "next": "prev"]()[0] != g && !d.ui.contains(this.placeholder[0], g) && (this.options.type == "semi-dynamic" ? !d.ui.contains(this.element[0], g) : 1)) {
                            this.direction = m == 1 ? "down": "up";
                            if (this.options.tolerance == "pointer" || this._intersectsWithSides(f)) this._rearrange(c, f);
                            else break;
                            this._trigger("change", c, this._uiHash());
                            break
                        }
                    }
                    this._contactContainers(c);
                    d.ui.ddmanager && d.ui.ddmanager.drag(this,
                    c);
                    this._trigger("sort", c, this._uiHash());
                    this.lastPositionAbs = this.positionAbs;
                    return ! 1
                },
                _mouseStop: function(c, e) {
                    if (c) {
                        d.ui.ddmanager && !this.options.dropBehaviour && d.ui.ddmanager.drop(this, c);
                        if (this.options.revert) {
                            var f = this,
                            g = f.placeholder.offset();
                            f.reverting = !0;
                            d(this.helper).animate({
                                left: g.left - this.offset.parent.left - f.margins.left + (this.offsetParent[0] == document.body ? 0: this.offsetParent[0].scrollLeft),
                                top: g.top - this.offset.parent.top - f.margins.top + (this.offsetParent[0] == document.body ? 0:
                                this.offsetParent[0].scrollTop)
                            },
                            parseInt(this.options.revert, 10) || 500,
                            function() {
                                f._clear(c)
                            })
                        } else this._clear(c, e);
                        return ! 1
                    }
                },
                cancel: function() {
                    if (this.dragging) {
                        this._mouseUp({
                            target: null
                        });
                        this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                        for (var c = this.containers.length - 1; c >= 0; c--) if (this.containers[c]._trigger("deactivate", null, this._uiHash(this)), this.containers[c].containerCache.over) this.containers[c]._trigger("out",
                        null, this._uiHash(this)),
                        this.containers[c].containerCache.over = 0
                    }
                    this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove(), d.extend(this, {
                        helper: null,
                        dragging: !1,
                        reverting: !1,
                        _noFinalSort: null
                    }), this.domPosition.prev ? d(this.domPosition.prev).after(this.currentItem) : d(this.domPosition.parent).prepend(this.currentItem));
                    return this
                },
                serialize: function(c) {
                    var e =
                    this._getItemsAsjQuery(c && c.connected),
                    f = [],
                    c = c || {};
                    d(e).each(function() {
                        var e = (d(c.item || this).attr(c.attribute || "id") || "").match(c.expression || /(.+)[-=_](.+)/);
                        e && f.push((c.key || e[1] + "[]") + "=" + (c.key && c.expression ? e[1] : e[2]))
                    }); ! f.length && c.key && f.push(c.key + "=");
                    return f.join("&")
                },
                toArray: function(c) {
                    var e = this._getItemsAsjQuery(c && c.connected),
                    f = [],
                    c = c || {};
                    e.each(function() {
                        f.push(d(c.item || this).attr(c.attribute || "id") || "")
                    });
                    return f
                },
                _intersectsWith: function(d) {
                    var e = this.positionAbs.left,
                    f = e + this.helperProportions.width,
                    g = this.positionAbs.top,
                    m = g + this.helperProportions.height,
                    n = d.left,
                    b = n + d.width,
                    l = d.top,
                    o = l + d.height,
                    F = this.offset.click.top,
                    B = this.offset.click.left;
                    return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width": "height"] > d[this.floating ? "width": "height"] ? g + F > l && g + F < o && e + B > n && e + B < b: n < e + this.helperProportions.width / 2 && f - this.helperProportions.width / 2 < b && l < g + this.helperProportions.height /
                    2 && m - this.helperProportions.height / 2 < o
                },
                _intersectsWithPointer: function(c) {
                    var e = d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, c.top, c.height),
                    c = d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, c.left, c.width),
                    e = e && c,
                    c = this._getDragVerticalDirection(),
                    f = this._getDragHorizontalDirection();
                    return ! e ? !1: this.floating ? f && f == "right" || c == "down" ? 2: 1: c && (c == "down" ? 2: 1)
                },
                _intersectsWithSides: function(c) {
                    var e = d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, c.top + c.height /
                    2, c.height),
                    c = d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, c.left + c.width / 2, c.width),
                    f = this._getDragVerticalDirection(),
                    g = this._getDragHorizontalDirection();
                    return this.floating && g ? g == "right" && c || g == "left" && !c: f && (f == "down" && e || f == "up" && !e)
                },
                _getDragVerticalDirection: function() {
                    var d = this.positionAbs.top - this.lastPositionAbs.top;
                    return d != 0 && (d > 0 ? "down": "up")
                },
                _getDragHorizontalDirection: function() {
                    var d = this.positionAbs.left - this.lastPositionAbs.left;
                    return d != 0 && (d > 0 ? "right": "left")
                },
                refresh: function(d) {
                    this._refreshItems(d);
                    this.refreshPositions();
                    return this
                },
                _connectWith: function() {
                    var d = this.options;
                    return d.connectWith.constructor == String ? [d.connectWith] : d.connectWith
                },
                _getItemsAsjQuery: function(c) {
                    var e = [],
                    f = [],
                    g = this._connectWith();
                    if (g && c) for (c = g.length - 1; c >= 0; c--) for (var m = d(g[c]), n = m.length - 1; n >= 0; n--) {
                        var b = d.data(m[n], "sortable");
                        b && b != this && !b.options.disabled && f.push([d.isFunction(b.options.items) ? b.options.items.call(b.element) : d(b.options.items, b.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
                        b])
                    }
                    f.push([d.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                        options: this.options,
                        item: this.currentItem
                    }) : d(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
                    for (c = f.length - 1; c >= 0; c--) f[c][0].each(function() {
                        e.push(this)
                    });
                    return d(e)
                },
                _removeCurrentsFromItems: function() {
                    for (var d = this.currentItem.find(":data(sortable-item)"), e = 0; e < this.items.length; e++) for (var f = 0; f < d.length; f++) d[f] == this.items[e].item[0] && this.items.splice(e,
                    1)
                },
                _refreshItems: function(c) {
                    this.items = [];
                    this.containers = [this];
                    var e = this.items,
                    f = [[d.isFunction(this.options.items) ? this.options.items.call(this.element[0], c, {
                        item: this.currentItem
                    }) : d(this.options.items, this.element), this]],
                    g = this._connectWith();
                    if (g) for (var m = g.length - 1; m >= 0; m--) for (var n = d(g[m]), b = n.length - 1; b >= 0; b--) {
                        var l = d.data(n[b], "sortable");
                        l && l != this && !l.options.disabled && (f.push([d.isFunction(l.options.items) ? l.options.items.call(l.element[0], c, {
                            item: this.currentItem
                        }) : d(l.options.items,
                        l.element), l]), this.containers.push(l))
                    }
                    for (m = f.length - 1; m >= 0; m--) {
                        c = f[m][1];
                        g = f[m][0];
                        b = 0;
                        for (n = g.length; b < n; b++) l = d(g[b]),
                        l.data("sortable-item", c),
                        e.push({
                            item: l,
                            instance: c,
                            width: 0,
                            height: 0,
                            left: 0,
                            top: 0
                        })
                    }
                },
                refreshPositions: function(c) {
                    if (this.offsetParent && this.helper) this.offset.parent = this._getParentOffset();
                    for (var e = this.items.length - 1; e >= 0; e--) {
                        var f = this.items[e];
                        if (! (f.instance != this.currentContainer && this.currentContainer && f.item[0] != this.currentItem[0])) {
                            var g = this.options.toleranceElement ?
                            d(this.options.toleranceElement, f.item) : f.item;
                            if (!c) f.width = g.outerWidth(),
                            f.height = g.outerHeight();
                            g = g.offset();
                            f.left = g.left;
                            f.top = g.top
                        }
                    }
                    if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
                    else for (e = this.containers.length - 1; e >= 0; e--) g = this.containers[e].element.offset(),
                    this.containers[e].containerCache.left = g.left,
                    this.containers[e].containerCache.top = g.top,
                    this.containers[e].containerCache.width = this.containers[e].element.outerWidth(),
                    this.containers[e].containerCache.height = this.containers[e].element.outerHeight();
                    return this
                },
                _createPlaceholder: function(c) {
                    var e = c || this,
                    f = e.options;
                    if (!f.placeholder || f.placeholder.constructor == String) {
                        var g = f.placeholder;
                        f.placeholder = {
                            element: function() {
                                var c = d(document.createElement(e.currentItem[0].nodeName)).addClass(g || e.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                                if (!g) c.style.visibility = "hidden";
                                return c
                            },
                            update: function(d, c) {
                                if (!g || f.forcePlaceholderSize) c.height() ||
                                c.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)),
                                c.width() || c.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10))
                            }
                        }
                    }
                    e.placeholder = d(f.placeholder.element.call(e.element, e.currentItem));
                    e.currentItem.after(e.placeholder);
                    f.placeholder.update(e, e.placeholder)
                },
                _contactContainers: function(c) {
                    for (var e = null, f = null, g = this.containers.length -
                    1; g >= 0; g--) if (!d.ui.contains(this.currentItem[0], this.containers[g].element[0])) if (this._intersectsWith(this.containers[g].containerCache)) {
                        if (!e || !d.ui.contains(this.containers[g].element[0], e.element[0])) e = this.containers[g],
                        f = g
                    } else if (this.containers[g].containerCache.over) this.containers[g]._trigger("out", c, this._uiHash(this)),
                    this.containers[g].containerCache.over = 0;
                    if (e) if (this.containers.length === 1) this.containers[f]._trigger("over", c, this._uiHash(this)),
                    this.containers[f].containerCache.over =
                    1;
                    else if (this.currentContainer != this.containers[f]) {
                        for (var e = 1E4, g = null, m = this.positionAbs[this.containers[f].floating ? "left": "top"], n = this.items.length - 1; n >= 0; n--) if (d.ui.contains(this.containers[f].element[0], this.items[n].item[0])) {
                            var b = this.items[n][this.containers[f].floating ? "left": "top"];
                            Math.abs(b - m) < e && (e = Math.abs(b - m), g = this.items[n])
                        }
                        if (g || this.options.dropOnEmpty) this.currentContainer = this.containers[f],
                        g ? this._rearrange(c, g, null, !0) : this._rearrange(c, null, this.containers[f].element,
                        !0),
                        this._trigger("change", c, this._uiHash()),
                        this.containers[f]._trigger("change", c, this._uiHash(this)),
                        this.options.placeholder.update(this.currentContainer, this.placeholder),
                        this.containers[f]._trigger("over", c, this._uiHash(this)),
                        this.containers[f].containerCache.over = 1
                    }
                },
                _createHelper: function(c) {
                    var e = this.options,
                    c = d.isFunction(e.helper) ? d(e.helper.apply(this.element[0], [c, this.currentItem])) : e.helper == "clone" ? this.currentItem.clone() : this.currentItem;
                    c.parents("body").length || d(e.appendTo !=
                    "parent" ? e.appendTo: this.currentItem[0].parentNode)[0].appendChild(c[0]);
                    if (c[0] == this.currentItem[0]) this._storedCSS = {
                        width: this.currentItem[0].style.width,
                        height: this.currentItem[0].style.height,
                        position: this.currentItem.css("position"),
                        top: this.currentItem.css("top"),
                        left: this.currentItem.css("left")
                    }; (c[0].style.width == "" || e.forceHelperSize) && c.width(this.currentItem.width()); (c[0].style.height == "" || e.forceHelperSize) && c.height(this.currentItem.height());
                    return c
                },
                _adjustOffsetFromHelper: function(c) {
                    typeof c ==
                    "string" && (c = c.split(" "));
                    d.isArray(c) && (c = {
                        left: +c[0],
                        top: +c[1] || 0
                    });
                    if ("left" in c) this.offset.click.left = c.left + this.margins.left;
                    if ("right" in c) this.offset.click.left = this.helperProportions.width - c.right + this.margins.left;
                    if ("top" in c) this.offset.click.top = c.top + this.margins.top;
                    if ("bottom" in c) this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top
                },
                _getParentOffset: function() {
                    this.offsetParent = this.helper.offsetParent();
                    var c = this.offsetParent.offset();
                    this.cssPosition ==
                    "absolute" && this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (c.left += this.scrollParent.scrollLeft(), c.top += this.scrollParent.scrollTop());
                    if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.browser.msie) c = {
                        top: 0,
                        left: 0
                    };
                    return {
                        top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                        left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                    }
                },
                _getRelativeOffset: function() {
                    if (this.cssPosition ==
                    "relative") {
                        var d = this.currentItem.position();
                        return {
                            top: d.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                            left: d.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                        }
                    } else return {
                        top: 0,
                        left: 0
                    }
                },
                _cacheMargins: function() {
                    this.margins = {
                        left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                        top: parseInt(this.currentItem.css("marginTop"), 10) || 0
                    }
                },
                _cacheHelperProportions: function() {
                    this.helperProportions = {
                        width: this.helper.outerWidth(),
                        height: this.helper.outerHeight()
                    }
                },
                _setContainment: function() {
                    var c = this.options;
                    if (c.containment == "parent") c.containment = this.helper[0].parentNode;
                    if (c.containment == "document" || c.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, d(c.containment == "document" ? document: q).width() - this.helperProportions.width - this.margins.left, (d(c.containment == "document" ? document: q).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height -
                    this.margins.top];
                    if (!/^(document|window|parent)$/.test(c.containment)) {
                        var e = d(c.containment)[0],
                        c = d(c.containment).offset(),
                        f = d(e).css("overflow") != "hidden";
                        this.containment = [c.left + (parseInt(d(e).css("borderLeftWidth"), 10) || 0) + (parseInt(d(e).css("paddingLeft"), 10) || 0) - this.margins.left, c.top + (parseInt(d(e).css("borderTopWidth"), 10) || 0) + (parseInt(d(e).css("paddingTop"), 10) || 0) - this.margins.top, c.left + (f ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(d(e).css("borderLeftWidth"), 10) ||
                        0) - (parseInt(d(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, c.top + (f ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(d(e).css("borderTopWidth"), 10) || 0) - (parseInt(d(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
                    }
                },
                _convertPositionTo: function(c, e) {
                    if (!e) e = this.position;
                    var f = c == "absolute" ? 1: -1,
                    g = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0])) ?
                    this.offsetParent: this.scrollParent,
                    m = /(html|body)/i.test(g[0].tagName);
                    return {
                        top: e.top + this.offset.relative.top * f + this.offset.parent.top * f - (d.browser.safari && this.cssPosition == "fixed" ? 0: (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : m ? 0: g.scrollTop()) * f),
                        left: e.left + this.offset.relative.left * f + this.offset.parent.left * f - (d.browser.safari && this.cssPosition == "fixed" ? 0: (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : m ? 0: g.scrollLeft()) * f)
                    }
                },
                _generatePosition: function(c) {
                    var e =
                    this.options,
                    f = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent: this.scrollParent,
                    g = /(html|body)/i.test(f[0].tagName);
                    if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) this.offset.relative = this._getRelativeOffset();
                    var m = c.pageX,
                    n = c.pageY;
                    this.originalPosition && (this.containment && (c.pageX - this.offset.click.left < this.containment[0] && (m = this.containment[0] +
                    this.offset.click.left), c.pageY - this.offset.click.top < this.containment[1] && (n = this.containment[1] + this.offset.click.top), c.pageX - this.offset.click.left > this.containment[2] && (m = this.containment[2] + this.offset.click.left), c.pageY - this.offset.click.top > this.containment[3] && (n = this.containment[3] + this.offset.click.top)), e.grid && (n = this.originalPageY + Math.round((n - this.originalPageY) / e.grid[1]) * e.grid[1], n = this.containment ? !(n - this.offset.click.top < this.containment[1] || n - this.offset.click.top > this.containment[3]) ?
                    n: !(n - this.offset.click.top < this.containment[1]) ? n - e.grid[1] : n + e.grid[1] : n, m = this.originalPageX + Math.round((m - this.originalPageX) / e.grid[0]) * e.grid[0], m = this.containment ? !(m - this.offset.click.left < this.containment[0] || m - this.offset.click.left > this.containment[2]) ? m: !(m - this.offset.click.left < this.containment[0]) ? m - e.grid[0] : m + e.grid[0] : m));
                    return {
                        top: n - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (d.browser.safari && this.cssPosition == "fixed" ? 0: this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() :
                        g ? 0: f.scrollTop()),
                        left: m - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (d.browser.safari && this.cssPosition == "fixed" ? 0: this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0: f.scrollLeft())
                    }
                },
                _rearrange: function(d, e, f, g) {
                    f ? f[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? e.item[0] : e.item[0].nextSibling);
                    this.counter = this.counter ? ++this.counter: 1;
                    var m = this,
                    n = this.counter;
                    q.setTimeout(function() {
                        n ==
                        m.counter && m.refreshPositions(!g)
                    },
                    0)
                },
                _clear: function(c, e) {
                    this.reverting = !1;
                    var f = []; ! this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem);
                    this._noFinalSort = null;
                    if (this.helper[0] == this.currentItem[0]) {
                        for (var g in this._storedCSS) if (this._storedCSS[g] == "auto" || this._storedCSS[g] == "static") this._storedCSS[g] = "";
                        this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                    } else this.currentItem.show();
                    this.fromOutside && !e && f.push(function(d) {
                        this._trigger("receive",
                        d, this._uiHash(this.fromOutside))
                    }); (this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !e && f.push(function(d) {
                        this._trigger("update", d, this._uiHash())
                    });
                    if (!d.ui.contains(this.element[0], this.currentItem[0])) {
                        e || f.push(function(d) {
                            this._trigger("remove", d, this._uiHash())
                        });
                        for (g = this.containers.length - 1; g >= 0; g--) d.ui.contains(this.containers[g].element[0], this.currentItem[0]) && !e && (f.push(function(d) {
                            return function(c) {
                                d._trigger("receive",
                                c, this._uiHash(this))
                            }
                        }.call(this, this.containers[g])), f.push(function(d) {
                            return function(c) {
                                d._trigger("update", c, this._uiHash(this))
                            }
                        }.call(this, this.containers[g])))
                    }
                    for (g = this.containers.length - 1; g >= 0; g--) if (e || f.push(function(d) {
                        return function(c) {
                            d._trigger("deactivate", c, this._uiHash(this))
                        }
                    }.call(this, this.containers[g])), this.containers[g].containerCache.over) f.push(function(d) {
                        return function(c) {
                            d._trigger("out", c, this._uiHash(this))
                        }
                    }.call(this, this.containers[g])),
                    this.containers[g].containerCache.over =
                    0;
                    this._storedCursor && d("body").css("cursor", this._storedCursor);
                    this._storedOpacity && this.helper.css("opacity", this._storedOpacity);
                    this._storedZIndex && this.helper.css("zIndex", this._storedZIndex == "auto" ? "": this._storedZIndex);
                    this.dragging = !1;
                    if (this.cancelHelperRemoval) {
                        if (!e) {
                            this._trigger("beforeStop", c, this._uiHash());
                            for (g = 0; g < f.length; g++) f[g].call(this, c);
                            this._trigger("stop", c, this._uiHash())
                        }
                        return ! 1
                    }
                    e || this._trigger("beforeStop", c, this._uiHash());
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
                    this.helper[0] != this.currentItem[0] && this.helper.remove();
                    this.helper = null;
                    if (!e) {
                        for (g = 0; g < f.length; g++) f[g].call(this, c);
                        this._trigger("stop", c, this._uiHash())
                    }
                    this.fromOutside = !1;
                    return ! 0
                },
                _trigger: function() {
                    d.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
                },
                _uiHash: function(c) {
                    var e = c || this;
                    return {
                        helper: e.helper,
                        placeholder: e.placeholder || d([]),
                        position: e.position,
                        originalPosition: e.originalPosition,
                        offset: e.positionAbs,
                        item: e.currentItem,
                        sender: c ? c.element: null
                    }
                }
            });
            d.extend(d.ui.sortable,
            {
                version: "1.8.14"
            })
        } (jQuery);
        A("jquery.ui.datepicker") &&
        function(d, c) {
            function e() {
                this.debug = !1;
                this._curInst = null;
                this._keyEvent = !1;
                this._disabledInputs = [];
                this._inDialog = this._datepickerShowing = !1;
                this._mainDivId = "ui-datepicker-div";
                this._inlineClass = "ui-datepicker-inline";
                this._appendClass = "ui-datepicker-append";
                this._triggerClass = "ui-datepicker-trigger";
                this._dialogClass = "ui-datepicker-dialog";
                this._disableClass = "ui-datepicker-disabled";
                this._unselectableClass = "ui-datepicker-unselectable";
                this._currentClass =
                "ui-datepicker-current-day";
                this._dayOverClass = "ui-datepicker-days-cell-over";
                this.regional = [];
                this.regional[""] = {
                    closeText: "Done",
                    prevText: "Prev",
                    nextText: "Next",
                    currentText: "Today",
                    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    dayNamesShort: ["Sun", "Mon",
                    "Tue", "Wed", "Thu", "Fri", "Sat"],
                    dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                    weekHeader: "Wk",
                    dateFormat: "mm/dd/yy",
                    firstDay: 0,
                    isRTL: !1,
                    showMonthAfterYear: !1,
                    yearSuffix: ""
                };
                this._defaults = {
                    showOn: "focus",
                    showAnim: "fadeIn",
                    showOptions: {},
                    defaultDate: null,
                    appendText: "",
                    buttonText: "...",
                    buttonImage: "",
                    buttonImageOnly: !1,
                    hideIfNoPrevNext: !1,
                    navigationAsDateFormat: !1,
                    gotoCurrent: !1,
                    changeMonth: !1,
                    changeYear: !1,
                    yearRange: "c-10:c+10",
                    showOtherMonths: !1,
                    selectOtherMonths: !1,
                    showWeek: !1,
                    calculateWeek: this.iso8601Week,
                    shortYearCutoff: "+10",
                    minDate: null,
                    maxDate: null,
                    duration: "fast",
                    beforeShowDay: null,
                    beforeShow: null,
                    onSelect: null,
                    onChangeMonthYear: null,
                    onClose: null,
                    numberOfMonths: 1,
                    showCurrentAtPos: 0,
                    stepMonths: 1,
                    stepBigMonths: 12,
                    altField: "",
                    altFormat: "",
                    constrainInput: !0,
                    showButtonPanel: !1,
                    autoSize: !1,
                    disabled: !1
                };
                d.extend(this._defaults, this.regional[""]);
                this.dpDiv = f(d('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
            }
            function f(b) {
                return b.bind("mouseout",
                function(b) {
                    b = d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");
                    b.length && b.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")
                }).bind("mouseover",
                function(c) {
                    c = d(c.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");
                    if (!d.datepicker._isDisabledDatepicker(n.inline ? b.parent()[0] : n.input[0]) && c.length) c.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
                    c.addClass("ui-state-hover"),
                    c.hasClass("ui-datepicker-prev") && c.addClass("ui-datepicker-prev-hover"),
                    c.hasClass("ui-datepicker-next") && c.addClass("ui-datepicker-next-hover")
                })
            }
            function g(b, e) {
                d.extend(b, e);
                for (var f in e) if (e[f] == null || e[f] == c) b[f] = e[f];
                return b
            }
            d.extend(d.ui, {
                datepicker: {
                    version: "1.8.16"
                }
            });
            var m = (new Date).getTime(),
            n;
            d.extend(e.prototype, {
                markerClassName: "hasDatepicker",
                maxRows: 4,
                log: function() {
                    this.debug && console.log.apply("", arguments)
                },
                _widgetDatepicker: function() {
                    return this.dpDiv
                },
                setDefaults: function(b) {
                    g(this._defaults, b || {});
                    return this
                },
                _attachDatepicker: function(b, c) {
                    var e = null,
                    f;
                    for (f in this._defaults) {
                        var g = b.getAttribute("date:" + f);
                        if (g) {
                            e = e || {};
                            try {
                                e[f] = eval(g)
                            } catch(m) {
                                e[f] = g
                            }
                        }
                    }
                    f = b.nodeName.toLowerCase();
                    g = f == "div" || f == "span";
                    if (!b.id) this.uuid += 1,
                    b.id = "dp" + this.uuid;
                    var h = this._newInst(d(b), g);
                    h.settings = d.extend({},
                    c || {},
                    e || {});
                    f == "input" ? this._connectDatepicker(b, h) : g && this._inlineDatepicker(b, h)
                },
                _newInst: function(b, c) {
                    return {
                        id: b[0].id.replace(/([^A-Za-z0-9_-])/g,
                        "\\\\$1"),
                        input: b,
                        selectedDay: 0,
                        selectedMonth: 0,
                        selectedYear: 0,
                        drawMonth: 0,
                        drawYear: 0,
                        inline: c,
                        dpDiv: !c ? this.dpDiv: f(d('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
                    }
                },
                _connectDatepicker: function(b, c) {
                    var e = d(b);
                    c.append = d([]);
                    c.trigger = d([]);
                    e.hasClass(this.markerClassName) || (this._attachments(e, c), e.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
                    function(b, d, e) {
                        c.settings[d] = e
                    }).bind("getData.datepicker",
                    function(b, d) {
                        return this._get(c, d)
                    }), this._autoSize(c), d.data(b, "datepicker", c), c.settings.disabled && this._disableDatepicker(b))
                },
                _attachments: function(b, c) {
                    var e = this._get(c, "appendText"),
                    f = this._get(c, "isRTL");
                    c.append && c.append.remove();
                    if (e) c.append = d('<span class="' + this._appendClass + '">' + e + "</span>"),
                    b[f ? "before": "after"](c.append);
                    b.unbind("focus", this._showDatepicker);
                    c.trigger && c.trigger.remove();
                    e = this._get(c, "showOn"); (e == "focus" ||
                    e == "both") && b.focus(this._showDatepicker);
                    if (e == "button" || e == "both") {
                        var e = this._get(c, "buttonText"),
                        g = this._get(c, "buttonImage");
                        c.trigger = d(this._get(c, "buttonImageOnly") ? d("<img/>").addClass(this._triggerClass).attr({
                            src: g,
                            alt: e,
                            title: e
                        }) : d('<button type="button"></button>').addClass(this._triggerClass).html(g == "" ? e: d("<img/>").attr({
                            src: g,
                            alt: e,
                            title: e
                        })));
                        b[f ? "before": "after"](c.trigger);
                        c.trigger.click(function() {
                            d.datepicker._datepickerShowing && d.datepicker._lastInput == b[0] ? d.datepicker._hideDatepicker() :
                            d.datepicker._showDatepicker(b[0]);
                            return ! 1
                        })
                    }
                },
                _autoSize: function(b) {
                    if (this._get(b, "autoSize") && !b.inline) {
                        var d = new Date(2009, 11, 20),
                        c = this._get(b, "dateFormat");
                        if (c.match(/[DM]/)) {
                            var e = function(b) {
                                for (var d = 0, c = 0, e = 0; e < b.length; e++) if (b[e].length > d) d = b[e].length,
                                c = e;
                                return c
                            };
                            d.setMonth(e(this._get(b, c.match(/MM/) ? "monthNames": "monthNamesShort")));
                            d.setDate(e(this._get(b, c.match(/DD/) ? "dayNames": "dayNamesShort")) + 20 - d.getDay())
                        }
                        b.input.attr("size", this._formatDate(b, d).length)
                    }
                },
                _inlineDatepicker: function(b,
                c) {
                    var e = d(b);
                    e.hasClass(this.markerClassName) || (e.addClass(this.markerClassName).append(c.dpDiv).bind("setData.datepicker",
                    function(b, d, e) {
                        c.settings[d] = e
                    }).bind("getData.datepicker",
                    function(b, d) {
                        return this._get(c, d)
                    }), d.data(b, "datepicker", c), this._setDate(c, this._getDefaultDate(c), !0), this._updateDatepicker(c), this._updateAlternate(c), c.settings.disabled && this._disableDatepicker(b), c.dpDiv.css("display", "block"))
                },
                _dialogDatepicker: function(b, c, e, f, m) {
                    b = this._dialogInst;
                    if (!b) this.uuid += 1,
                    this._dialogInput =
                    d('<input type="text" id="dp' + this.uuid + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>'),
                    this._dialogInput.keydown(this._doKeyDown),
                    d("body").append(this._dialogInput),
                    b = this._dialogInst = this._newInst(this._dialogInput, !1),
                    b.settings = {},
                    d.data(this._dialogInput[0], "datepicker", b);
                    g(b.settings, f || {});
                    c = c && c.constructor == Date ? this._formatDate(b, c) : c;
                    this._dialogInput.val(c);
                    this._pos = m ? m.length ? m: [m.pageX, m.pageY] : null;
                    if (!this._pos) this._pos = [document.documentElement.clientWidth /
                    2 - 100 + (document.documentElement.scrollLeft || document.body.scrollLeft), document.documentElement.clientHeight / 2 - 150 + (document.documentElement.scrollTop || document.body.scrollTop)];
                    this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
                    b.settings.onSelect = e;
                    this._inDialog = !0;
                    this.dpDiv.addClass(this._dialogClass);
                    this._showDatepicker(this._dialogInput[0]);
                    d.blockUI && d.blockUI(this.dpDiv);
                    d.data(this._dialogInput[0], "datepicker", b);
                    return this
                },
                _destroyDatepicker: function(b) {
                    var c =
                    d(b),
                    e = d.data(b, "datepicker");
                    if (c.hasClass(this.markerClassName)) {
                        var f = b.nodeName.toLowerCase();
                        d.removeData(b, "datepicker");
                        f == "input" ? (e.append.remove(), e.trigger.remove(), c.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (f == "div" || f == "span") && c.removeClass(this.markerClassName).empty()
                    }
                },
                _enableDatepicker: function(b) {
                    var c = d(b),
                    e = d.data(b, "datepicker");
                    if (c.hasClass(this.markerClassName)) {
                        var f =
                        b.nodeName.toLowerCase();
                        if (f == "input") b.disabled = !1,
                        e.trigger.filter("button").each(function() {
                            this.disabled = !1
                        }).end().filter("img").css({
                            opacity: "1.0",
                            cursor: ""
                        });
                        else if (f == "div" || f == "span") c = c.children("." + this._inlineClass),
                        c.children().removeClass("ui-state-disabled"),
                        c.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled");
                        this._disabledInputs = d.map(this._disabledInputs,
                        function(d) {
                            return d == b ? null: d
                        })
                    }
                },
                _disableDatepicker: function(b) {
                    var c = d(b),
                    e = d.data(b, "datepicker");
                    if (c.hasClass(this.markerClassName)) {
                        var f = b.nodeName.toLowerCase();
                        if (f == "input") b.disabled = !0,
                        e.trigger.filter("button").each(function() {
                            this.disabled = !0
                        }).end().filter("img").css({
                            opacity: "0.5",
                            cursor: "default"
                        });
                        else if (f == "div" || f == "span") c = c.children("." + this._inlineClass),
                        c.children().addClass("ui-state-disabled"),
                        c.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled");
                        this._disabledInputs = d.map(this._disabledInputs,
                        function(d) {
                            return d == b ? null: d
                        });
                        this._disabledInputs[this._disabledInputs.length] =
                        b
                    }
                },
                _isDisabledDatepicker: function(b) {
                    if (!b) return ! 1;
                    for (var d = 0; d < this._disabledInputs.length; d++) if (this._disabledInputs[d] == b) return ! 0;
                    return ! 1
                },
                _getInst: function(b) {
                    try {
                        return d.data(b, "datepicker")
                    } catch(c) {
                        throw "Missing instance data for this datepicker";
                    }
                },
                _optionDatepicker: function(b, e, f) {
                    var m = this._getInst(b);
                    if (arguments.length == 2 && typeof e == "string") return e == "defaults" ? d.extend({},
                    d.datepicker._defaults) : m ? e == "all" ? d.extend({},
                    m.settings) : this._get(m, e) : null;
                    var n = e || {};
                    typeof e == "string" &&
                    (n = {},
                    n[e] = f);
                    if (m) {
                        this._curInst == m && this._hideDatepicker();
                        var H = this._getDateDatepicker(b, !0),
                        h = this._getMinMaxDate(m, "min"),
                        u = this._getMinMaxDate(m, "max");
                        g(m.settings, n);
                        if (h !== null && n.dateFormat !== c && n.minDate === c) m.settings.minDate = this._formatDate(m, h);
                        if (u !== null && n.dateFormat !== c && n.maxDate === c) m.settings.maxDate = this._formatDate(m, u);
                        this._attachments(d(b), m);
                        this._autoSize(m);
                        this._setDate(m, H);
                        this._updateAlternate(m);
                        this._updateDatepicker(m)
                    }
                },
                _changeDatepicker: function(b, d, c) {
                    this._optionDatepicker(b,
                    d, c)
                },
                _refreshDatepicker: function(b) { (b = this._getInst(b)) && this._updateDatepicker(b)
                },
                _setDateDatepicker: function(b, d) {
                    var c = this._getInst(b);
                    c && (this._setDate(c, d), this._updateDatepicker(c), this._updateAlternate(c))
                },
                _getDateDatepicker: function(b, d) {
                    var c = this._getInst(b);
                    c && !c.inline && this._setDateFromField(c, d);
                    return c ? this._getDate(c) : null
                },
                _doKeyDown: function(b) {
                    var c = d.datepicker._getInst(b.target),
                    e = !0,
                    f = c.dpDiv.is(".ui-datepicker-rtl");
                    c._keyEvent = !0;
                    if (d.datepicker._datepickerShowing) switch (b.keyCode) {
                    case 9:
                        d.datepicker._hideDatepicker();
                        e = !1;
                        break;
                    case 13:
                        return e = d("td." + d.datepicker._dayOverClass + ":not(." + d.datepicker._currentClass + ")", c.dpDiv),
                        e[0] && d.datepicker._selectDay(b.target, c.selectedMonth, c.selectedYear, e[0]),
                        (b = d.datepicker._get(c, "onSelect")) ? (e = d.datepicker._formatDate(c), b.apply(c.input ? c.input[0] : null, [e, c])) : d.datepicker._hideDatepicker(),
                        !1;
                    case 27:
                        d.datepicker._hideDatepicker();
                        break;
                    case 33:
                        d.datepicker._adjustDate(b.target, b.ctrlKey ? -d.datepicker._get(c, "stepBigMonths") : -d.datepicker._get(c, "stepMonths"), "M");
                        break;
                    case 34:
                        d.datepicker._adjustDate(b.target, b.ctrlKey ? +d.datepicker._get(c, "stepBigMonths") : +d.datepicker._get(c, "stepMonths"), "M");
                        break;
                    case 35:
                        (b.ctrlKey || b.metaKey) && d.datepicker._clearDate(b.target);
                        e = b.ctrlKey || b.metaKey;
                        break;
                    case 36:
                        (b.ctrlKey || b.metaKey) && d.datepicker._gotoToday(b.target);
                        e = b.ctrlKey || b.metaKey;
                        break;
                    case 37:
                        if (b.ctrlKey || b.metaKey) d.datepicker._adjustDate(b.target, f ? 1: -1, "D");
                        e = b.ctrlKey || b.metaKey;
                        b.originalEvent.altKey && d.datepicker._adjustDate(b.target, b.ctrlKey ?
                        -d.datepicker._get(c, "stepBigMonths") : -d.datepicker._get(c, "stepMonths"), "M");
                        break;
                    case 38:
                        (b.ctrlKey || b.metaKey) && d.datepicker._adjustDate(b.target, -7, "D");
                        e = b.ctrlKey || b.metaKey;
                        break;
                    case 39:
                        if (b.ctrlKey || b.metaKey) d.datepicker._adjustDate(b.target, f ? -1: 1, "D");
                        e = b.ctrlKey || b.metaKey;
                        b.originalEvent.altKey && d.datepicker._adjustDate(b.target, b.ctrlKey ? +d.datepicker._get(c, "stepBigMonths") : +d.datepicker._get(c, "stepMonths"), "M");
                        break;
                    case 40:
                        (b.ctrlKey || b.metaKey) && d.datepicker._adjustDate(b.target,
                        7, "D");
                        e = b.ctrlKey || b.metaKey;
                        break;
                    default:
                        e = !1
                    } else b.keyCode == 36 && b.ctrlKey ? d.datepicker._showDatepicker(this) : e = !1;
                    e && (b.preventDefault(), b.stopPropagation())
                },
                _doKeyPress: function(b) {
                    var e = d.datepicker._getInst(b.target);
                    if (d.datepicker._get(e, "constrainInput")) {
                        var e = d.datepicker._possibleChars(d.datepicker._get(e, "dateFormat")),
                        f = String.fromCharCode(b.charCode == c ? b.keyCode: b.charCode);
                        return b.ctrlKey || b.metaKey || f < " " || !e || e.indexOf(f) > -1
                    }
                },
                _doKeyUp: function(b) {
                    b = d.datepicker._getInst(b.target);
                    if (b.input.val() != b.lastVal) try {
                        if (d.datepicker.parseDate(d.datepicker._get(b, "dateFormat"), b.input ? b.input.val() : null, d.datepicker._getFormatConfig(b))) d.datepicker._setDateFromField(b),
                        d.datepicker._updateAlternate(b),
                        d.datepicker._updateDatepicker(b)
                    } catch(c) {
                        d.datepicker.log(c)
                    }
                    return ! 0
                },
                _showDatepicker: function(b) {
                    b = b.target || b;
                    b.nodeName.toLowerCase() != "input" && (b = d("input", b.parentNode)[0]);
                    if (! (d.datepicker._isDisabledDatepicker(b) || d.datepicker._lastInput == b)) {
                        var c = d.datepicker._getInst(b);
                        d.datepicker._curInst && d.datepicker._curInst != c && (d.datepicker._datepickerShowing && d.datepicker._triggerOnClose(d.datepicker._curInst), d.datepicker._curInst.dpDiv.stop(!0, !0));
                        var e = d.datepicker._get(c, "beforeShow"),
                        e = e ? e.apply(b, [b, c]) : {};
                        if (e !== !1) {
                            g(c.settings, e);
                            c.lastVal = null;
                            d.datepicker._lastInput = b;
                            d.datepicker._setDateFromField(c);
                            if (d.datepicker._inDialog) b.value = "";
                            if (!d.datepicker._pos) d.datepicker._pos = d.datepicker._findPos(b),
                            d.datepicker._pos[1] += b.offsetHeight;
                            var f = !1;
                            d(b).parents().each(function() {
                                f |=
                                d(this).css("position") == "fixed";
                                return ! f
                            });
                            f && d.browser.opera && (d.datepicker._pos[0] -= document.documentElement.scrollLeft, d.datepicker._pos[1] -= document.documentElement.scrollTop);
                            e = {
                                left: d.datepicker._pos[0],
                                top: d.datepicker._pos[1]
                            };
                            d.datepicker._pos = null;
                            c.dpDiv.empty();
                            c.dpDiv.css({
                                position: "absolute",
                                display: "block",
                                top: "-1000px"
                            });
                            d.datepicker._updateDatepicker(c);
                            e = d.datepicker._checkOffset(c, e, f);
                            c.dpDiv.css({
                                position: d.datepicker._inDialog && d.blockUI ? "static": f ? "fixed": "absolute",
                                display: "none",
                                left: e.left + "px",
                                top: e.top + "px"
                            });
                            if (!c.inline) {
                                var e = d.datepicker._get(c, "showAnim"),
                                m = d.datepicker._get(c, "duration"),
                                n = function() {
                                    var b = c.dpDiv.find("iframe.ui-datepicker-cover");
                                    if (b.length) {
                                        var e = d.datepicker._getBorders(c.dpDiv);
                                        b.css({
                                            left: -e[0],
                                            top: -e[1],
                                            width: c.dpDiv.outerWidth(),
                                            height: c.dpDiv.outerHeight()
                                        })
                                    }
                                };
                                c.dpDiv.zIndex(d(b).zIndex() + 1);
                                d.datepicker._datepickerShowing = !0;
                                if (d.effects && d.effects[e]) c.dpDiv.show(e, d.datepicker._get(c, "showOptions"), m, n);
                                else c.dpDiv[e || "show"](e ? m: null,
                                n); (!e || !m) && n();
                                c.input.is(":visible") && !c.input.is(":disabled") && c.input.focus();
                                d.datepicker._curInst = c
                            }
                        }
                    }
                },
                _updateDatepicker: function(b) {
                    this.maxRows = 4;
                    var c = d.datepicker._getBorders(b.dpDiv);
                    n = b;
                    b.dpDiv.empty().append(this._generateHTML(b));
                    var e = b.dpDiv.find("iframe.ui-datepicker-cover");
                    e.length && e.css({
                        left: -c[0],
                        top: -c[1],
                        width: b.dpDiv.outerWidth(),
                        height: b.dpDiv.outerHeight()
                    });
                    b.dpDiv.find("." + this._dayOverClass + " a").mouseover();
                    c = this._getNumberOfMonths(b);
                    e = c[1];
                    b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
                    e > 1 && b.dpDiv.addClass("ui-datepicker-multi-" + e).css("width", 17 * e + "em");
                    b.dpDiv[(c[0] != 1 || c[1] != 1 ? "add": "remove") + "Class"]("ui-datepicker-multi");
                    b.dpDiv[(this._get(b, "isRTL") ? "add": "remove") + "Class"]("ui-datepicker-rtl");
                    b == d.datepicker._curInst && d.datepicker._datepickerShowing && b.input && b.input.is(":visible") && !b.input.is(":disabled") && b.input[0] != document.activeElement && b.input.focus();
                    if (b.yearshtml) {
                        var f = b.yearshtml;
                        setTimeout(function() {
                            f === b.yearshtml && b.yearshtml && b.dpDiv.find("select.ui-datepicker-year:first").replaceWith(b.yearshtml);
                            f = b.yearshtml = null
                        },
                        0)
                    }
                },
                _getBorders: function(b) {
                    var c = function(b) {
                        return {
                            thin: 1,
                            medium: 2,
                            thick: 3
                        } [b] || b
                    };
                    return [parseFloat(c(b.css("border-left-width"))), parseFloat(c(b.css("border-top-width")))]
                },
                _checkOffset: function(b, c, e) {
                    var f = b.dpDiv.outerWidth(),
                    g = b.dpDiv.outerHeight(),
                    m = b.input ? b.input.outerWidth() : 0,
                    h = b.input ? b.input.outerHeight() : 0,
                    u = document.documentElement.clientWidth + d(document).scrollLeft(),
                    n = document.documentElement.clientHeight + d(document).scrollTop();
                    c.left -= this._get(b, "isRTL") ?
                    f - m: 0;
                    c.left -= e && c.left == b.input.offset().left ? d(document).scrollLeft() : 0;
                    c.top -= e && c.top == b.input.offset().top + h ? d(document).scrollTop() : 0;
                    c.left -= Math.min(c.left, c.left + f > u && u > f ? Math.abs(c.left + f - u) : 0);
                    c.top -= Math.min(c.top, c.top + g > n && n > g ? Math.abs(g + h) : 0);
                    return c
                },
                _findPos: function(b) {
                    for (var c = this._get(this._getInst(b), "isRTL"); b && (b.type == "hidden" || b.nodeType != 1 || d.expr.filters.hidden(b));) b = b[c ? "previousSibling": "nextSibling"];
                    b = d(b).offset();
                    return [b.left, b.top]
                },
                _triggerOnClose: function(b) {
                    var c =
                    this._get(b, "onClose");
                    c && c.apply(b.input ? b.input[0] : null, [b.input ? b.input.val() : "", b])
                },
                _hideDatepicker: function(b) {
                    var c = this._curInst;
                    if (c && !(b && c != d.data(b, "datepicker")) && this._datepickerShowing) {
                        var b = this._get(c, "showAnim"),
                        e = this._get(c, "duration"),
                        f = function() {
                            d.datepicker._tidyDialog(c);
                            this._curInst = null
                        };
                        if (d.effects && d.effects[b]) c.dpDiv.hide(b, d.datepicker._get(c, "showOptions"), e, f);
                        else c.dpDiv[b == "slideDown" ? "slideUp": b == "fadeIn" ? "fadeOut": "hide"](b ? e: null, f);
                        b || f();
                        d.datepicker._triggerOnClose(c);
                        this._datepickerShowing = !1;
                        this._lastInput = null;
                        this._inDialog && (this._dialogInput.css({
                            position: "absolute",
                            left: "0",
                            top: "-100px"
                        }), d.blockUI && (d.unblockUI(), d("body").append(this.dpDiv)));
                        this._inDialog = !1
                    }
                },
                _tidyDialog: function(b) {
                    b.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
                },
                _checkExternalClick: function(b) {
                    d.datepicker._curInst && (b = d(b.target), b[0].id != d.datepicker._mainDivId && b.parents("#" + d.datepicker._mainDivId).length == 0 && !b.hasClass(d.datepicker.markerClassName) &&
                    !b.hasClass(d.datepicker._triggerClass) && d.datepicker._datepickerShowing && (!d.datepicker._inDialog || !d.blockUI) && d.datepicker._hideDatepicker())
                },
                _adjustDate: function(b, c, e) {
                    var b = d(b),
                    f = this._getInst(b[0]);
                    this._isDisabledDatepicker(b[0]) || (this._adjustInstDate(f, c + (e == "M" ? this._get(f, "showCurrentAtPos") : 0), e), this._updateDatepicker(f))
                },
                _gotoToday: function(b) {
                    var b = d(b),
                    c = this._getInst(b[0]);
                    if (this._get(c, "gotoCurrent") && c.currentDay) c.selectedDay = c.currentDay,
                    c.drawMonth = c.selectedMonth = c.currentMonth,
                    c.drawYear = c.selectedYear = c.currentYear;
                    else {
                        var e = new Date;
                        c.selectedDay = e.getDate();
                        c.drawMonth = c.selectedMonth = e.getMonth();
                        c.drawYear = c.selectedYear = e.getFullYear()
                    }
                    this._notifyChange(c);
                    this._adjustDate(b)
                },
                _selectMonthYear: function(b, c, e) {
                    var b = d(b),
                    f = this._getInst(b[0]);
                    f["selected" + (e == "M" ? "Month": "Year")] = f["draw" + (e == "M" ? "Month": "Year")] = parseInt(c.options[c.selectedIndex].value, 10);
                    this._notifyChange(f);
                    this._adjustDate(b)
                },
                _selectDay: function(b, c, e, f) {
                    var g = d(b);
                    if (!d(f).hasClass(this._unselectableClass) &&
                    !this._isDisabledDatepicker(g[0])) g = this._getInst(g[0]),
                    g.selectedDay = g.currentDay = d("a", f).html(),
                    g.selectedMonth = g.currentMonth = c,
                    g.selectedYear = g.currentYear = e,
                    this._selectDate(b, this._formatDate(g, g.currentDay, g.currentMonth, g.currentYear))
                },
                _clearDate: function(b) {
                    b = d(b);
                    this._getInst(b[0]);
                    this._selectDate(b, "")
                },
                _selectDate: function(b, c) {
                    var e = this._getInst(d(b)[0]),
                    c = c != null ? c: this._formatDate(e);
                    e.input && e.input.val(c);
                    this._updateAlternate(e);
                    var f = this._get(e, "onSelect");
                    f ? f.apply(e.input ?
                    e.input[0] : null, [c, e]) : e.input && e.input.trigger("change");
                    e.inline ? this._updateDatepicker(e) : (this._hideDatepicker(), this._lastInput = e.input[0], typeof e.input[0] != "object" && e.input.focus(), this._lastInput = null)
                },
                _updateAlternate: function(b) {
                    var c = this._get(b, "altField");
                    if (c) {
                        var e = this._get(b, "altFormat") || this._get(b, "dateFormat"),
                        f = this._getDate(b),
                        g = this.formatDate(e, f, this._getFormatConfig(b));
                        d(c).each(function() {
                            d(this).val(g)
                        })
                    }
                },
                noWeekends: function(b) {
                    b = b.getDay();
                    return [b > 0 && b < 6, ""]
                },
                iso8601Week: function(b) {
                    b =
                    new Date(b.getTime());
                    b.setDate(b.getDate() + 4 - (b.getDay() || 7));
                    var c = b.getTime();
                    b.setMonth(0);
                    b.setDate(1);
                    return Math.floor(Math.round((c - b) / 864E5) / 7) + 1
                },
                parseDate: function(b, c, e) {
                    if (b == null || c == null) throw "Invalid arguments";
                    c = typeof c == "object" ? c.toString() : c + "";
                    if (c == "") return null;
                    for (var f = (e ? e.shortYearCutoff: null) || this._defaults.shortYearCutoff, f = typeof f != "string" ? f: (new Date).getFullYear() % 100 + parseInt(f, 10), g = (e ? e.dayNamesShort: null) || this._defaults.dayNamesShort, m = (e ? e.dayNames: null) ||
                    this._defaults.dayNames, h = (e ? e.monthNamesShort: null) || this._defaults.monthNamesShort, u = (e ? e.monthNames: null) || this._defaults.monthNames, n = e = -1, E = -1, D = -1, q = !1, s = function(c) { (c = I + 1 < b.length && b.charAt(I + 1) == c) && I++;
                        return c
                    },
                    G = function(b) {
                        var d = s(b),
                        b = c.substring(K).match(RegExp("^\\d{1," + (b == "@" ? 14: b == "!" ? 20: b == "y" && d ? 4: b == "o" ? 3: 2) + "}"));
                        if (!b) throw "Missing number at position " + K;
                        K += b[0].length;
                        return parseInt(b[0], 10)
                    },
                    w = function(b, e, h) {
                        var b = d.map(s(b) ? h: e,
                        function(b, c) {
                            return [[c, b]]
                        }).sort(function(b,
                        c) {
                            return - (b[1].length - c[1].length)
                        }),
                        f = -1;
                        d.each(b,
                        function(b, d) {
                            var e = d[1];
                            if (c.substr(K, e.length).toLowerCase() == e.toLowerCase()) return f = d[0],
                            K += e.length,
                            !1
                        });
                        if (f != -1) return f + 1;
                        else throw "Unknown name at position " + K;
                    },
                    A = function() {
                        if (c.charAt(K) != b.charAt(I)) throw "Unexpected literal at position " + K;
                        K++
                    },
                    K = 0, I = 0; I < b.length; I++) if (q) b.charAt(I) == "'" && !s("'") ? q = !1: A();
                    else switch (b.charAt(I)) {
                    case "d":
                        E = G("d");
                        break;
                    case "D":
                        w("D", g, m);
                        break;
                    case "o":
                        D = G("o");
                        break;
                    case "m":
                        n = G("m");
                        break;
                    case "M":
                        n =
                        w("M", h, u);
                        break;
                    case "y":
                        e = G("y");
                        break;
                    case "@":
                        var X = new Date(G("@")),
                        e = X.getFullYear(),
                        n = X.getMonth() + 1,
                        E = X.getDate();
                        break;
                    case "!":
                        X = new Date((G("!") - this._ticksTo1970) / 1E4);
                        e = X.getFullYear();
                        n = X.getMonth() + 1;
                        E = X.getDate();
                        break;
                    case "'":
                        s("'") ? A() : q = !0;
                        break;
                    default:
                        A()
                    }
                    if (K < c.length) throw "Extra/unparsed characters found in date: " + c.substring(K);
                    e == -1 ? e = (new Date).getFullYear() : e < 100 && (e += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (e <= f ? 0: -100));
                    if (D > -1) {
                        n = 1;
                        E = D;
                        do {
                            f = this._getDaysInMonth(e,
                            n - 1);
                            if (E <= f) break;
                            n++;
                            E -= f
                        }
                        while (1)
                    }
                    X = this._daylightSavingAdjust(new Date(e, n - 1, E));
                    if (X.getFullYear() != e || X.getMonth() + 1 != n || X.getDate() != E) throw "Invalid date";
                    return X
                },
                ATOM: "yy-mm-dd",
                COOKIE: "D, dd M yy",
                ISO_8601: "yy-mm-dd",
                RFC_822: "D, d M y",
                RFC_850: "DD, dd-M-y",
                RFC_1036: "D, d M y",
                RFC_1123: "D, d M yy",
                RFC_2822: "D, d M yy",
                RSS: "D, d M y",
                TICKS: "!",
                TIMESTAMP: "@",
                W3C: "yy-mm-dd",
                _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 864E9,
                formatDate: function(b, c, d) {
                    if (!c) return "";
                    var e = (d ? d.dayNamesShort: null) || this._defaults.dayNamesShort,
                    f = (d ? d.dayNames: null) || this._defaults.dayNames,
                    g = (d ? d.monthNamesShort: null) || this._defaults.monthNamesShort,
                    d = (d ? d.monthNames: null) || this._defaults.monthNames,
                    h = function(c) { (c = q + 1 < b.length && b.charAt(q + 1) == c) && q++;
                        return c
                    },
                    u = function(b, c, d) {
                        c = "" + c;
                        if (h(b)) for (; c.length < d;) c = "0" + c;
                        return c
                    },
                    m = function(b, c, d, e) {
                        return h(b) ? e[c] : d[c]
                    },
                    n = "",
                    D = !1;
                    if (c) for (var q = 0; q < b.length; q++) if (D) b.charAt(q) == "'" && !h("'") ? D = !1: n += b.charAt(q);
                    else switch (b.charAt(q)) {
                    case "d":
                        n +=
                        u("d", c.getDate(), 2);
                        break;
                    case "D":
                        n += m("D", c.getDay(), e, f);
                        break;
                    case "o":
                        n += u("o", Math.round(((new Date(c.getFullYear(), c.getMonth(), c.getDate())).getTime() - (new Date(c.getFullYear(), 0, 0)).getTime()) / 864E5), 3);
                        break;
                    case "m":
                        n += u("m", c.getMonth() + 1, 2);
                        break;
                    case "M":
                        n += m("M", c.getMonth(), g, d);
                        break;
                    case "y":
                        n += h("y") ? c.getFullYear() : (c.getYear() % 100 < 10 ? "0": "") + c.getYear() % 100;
                        break;
                    case "@":
                        n += c.getTime();
                        break;
                    case "!":
                        n += c.getTime() * 1E4 + this._ticksTo1970;
                        break;
                    case "'":
                        h("'") ? n += "'": D = !0;
                        break;
                    default:
                        n += b.charAt(q)
                    }
                    return n
                },
                _possibleChars: function(b) {
                    for (var c = "", d = !1, e = function(c) { (c = f + 1 < b.length && b.charAt(f + 1) == c) && f++;
                        return c
                    },
                    f = 0; f < b.length; f++) if (d) b.charAt(f) == "'" && !e("'") ? d = !1: c += b.charAt(f);
                    else switch (b.charAt(f)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        c += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        e("'") ? c += "'": d = !0;
                        break;
                    default:
                        c += b.charAt(f)
                    }
                    return c
                },
                _get: function(b, d) {
                    return b.settings[d] !== c ? b.settings[d] : this._defaults[d]
                },
                _setDateFromField: function(b, c) {
                    if (b.input.val() !=
                    b.lastVal) {
                        var d = this._get(b, "dateFormat"),
                        e = b.lastVal = b.input ? b.input.val() : null,
                        f,
                        g;
                        f = g = this._getDefaultDate(b);
                        var h = this._getFormatConfig(b);
                        try {
                            f = this.parseDate(d, e, h) || g
                        } catch(u) {
                            this.log(u),
                            e = c ? "": e
                        }
                        b.selectedDay = f.getDate();
                        b.drawMonth = b.selectedMonth = f.getMonth();
                        b.drawYear = b.selectedYear = f.getFullYear();
                        b.currentDay = e ? f.getDate() : 0;
                        b.currentMonth = e ? f.getMonth() : 0;
                        b.currentYear = e ? f.getFullYear() : 0;
                        this._adjustInstDate(b)
                    }
                },
                _getDefaultDate: function(b) {
                    return this._restrictMinMax(b, this._determineDate(b,
                    this._get(b, "defaultDate"), new Date))
                },
                _determineDate: function(b, c, e) {
                    var h;
                    var f = function(b) {
                        var c = new Date;
                        c.setDate(c.getDate() + b);
                        return c
                    };
                    if (h = (c = c == null || c === "" ? e: typeof c == "string" ?
                    function(c) {
                        try {
                            return d.datepicker.parseDate(d.datepicker._get(b, "dateFormat"), c, d.datepicker._getFormatConfig(b))
                        } catch(e) {}
                        for (var h = (c.toLowerCase().match(/^c/) ? d.datepicker._getDate(b) : null) || new Date, f = h.getFullYear(), g = h.getMonth(), h = h.getDate(), l = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, o = l.exec(c); o;) {
                            switch (o[2] ||
                            "d") {
                            case "d":
                            case "D":
                                h += parseInt(o[1], 10);
                                break;
                            case "w":
                            case "W":
                                h += parseInt(o[1], 10) * 7;
                                break;
                            case "m":
                            case "M":
                                g += parseInt(o[1], 10);
                                h = Math.min(h, d.datepicker._getDaysInMonth(f, g));
                                break;
                            case "y":
                            case "Y":
                                f += parseInt(o[1], 10),
                                h = Math.min(h, d.datepicker._getDaysInMonth(f, g))
                            }
                            o = l.exec(c)
                        }
                        return new Date(f, g, h)
                    } (c) : typeof c == "number" ? isNaN(c) ? e: f(c) : new Date(c.getTime())) && c.toString() == "Invalid Date" ? e: c, c = h) c.setHours(0),
                    c.setMinutes(0),
                    c.setSeconds(0),
                    c.setMilliseconds(0);
                    return this._daylightSavingAdjust(c)
                },
                _daylightSavingAdjust: function(b) {
                    if (!b) return null;
                    b.setHours(b.getHours() > 12 ? b.getHours() + 2: 0);
                    return b
                },
                _setDate: function(b, c, d) {
                    var e = !c,
                    f = b.selectedMonth,
                    g = b.selectedYear,
                    c = this._restrictMinMax(b, this._determineDate(b, c, new Date));
                    b.selectedDay = b.currentDay = c.getDate();
                    b.drawMonth = b.selectedMonth = b.currentMonth = c.getMonth();
                    b.drawYear = b.selectedYear = b.currentYear = c.getFullYear(); (f != b.selectedMonth || g != b.selectedYear) && !d && this._notifyChange(b);
                    this._adjustInstDate(b);
                    b.input && b.input.val(e ?
                    "": this._formatDate(b))
                },
                _getDate: function(b) {
                    return ! b.currentYear || b.input && b.input.val() == "" ? null: this._daylightSavingAdjust(new Date(b.currentYear, b.currentMonth, b.currentDay))
                },
                _generateHTML: function(b) {
                    var c = new Date,
                    c = this._daylightSavingAdjust(new Date(c.getFullYear(), c.getMonth(), c.getDate())),
                    e = this._get(b, "isRTL"),
                    f = this._get(b, "showButtonPanel"),
                    g = this._get(b, "hideIfNoPrevNext"),
                    n = this._get(b, "navigationAsDateFormat"),
                    h = this._getNumberOfMonths(b),
                    u = this._get(b, "showCurrentAtPos"),
                    C = this._get(b,
                    "stepMonths"),
                    E = h[0] != 1 || h[1] != 1,
                    D = this._daylightSavingAdjust(!b.currentDay ? new Date(9999, 9, 9) : new Date(b.currentYear, b.currentMonth, b.currentDay)),
                    q = this._getMinMaxDate(b, "min"),
                    s = this._getMinMaxDate(b, "max"),
                    u = b.drawMonth - u,
                    G = b.drawYear;
                    u < 0 && (u += 12, G--);
                    if (s) for (var w = this._daylightSavingAdjust(new Date(s.getFullYear(), s.getMonth() - h[0] * h[1] + 1, s.getDate())), w = q && w < q ? q: w; this._daylightSavingAdjust(new Date(G, u, 1)) > w;) u--,
                    u < 0 && (u = 11, G--);
                    b.drawMonth = u;
                    b.drawYear = G;
                    var w = this._get(b, "prevText"),
                    w =
                    !n ? w: this.formatDate(w, this._daylightSavingAdjust(new Date(G, u - C, 1)), this._getFormatConfig(b)),
                    w = this._canAdjustMonth(b, -1, G, u) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + m + ".datepicker._adjustDate('#" + b.id + "', -" + C + ", 'M');\" title=\"" + w + '"><span class="ui-icon ui-icon-circle-triangle-' + (e ? "e": "w") + '">' + w + "</span></a>": g ? "": '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + w + '"><span class="ui-icon ui-icon-circle-triangle-' + (e ? "e": "w") + '">' + w + "</span></a>",
                    A = this._get(b, "nextText"),
                    A = !n ? A: this.formatDate(A, this._daylightSavingAdjust(new Date(G, u + C, 1)), this._getFormatConfig(b)),
                    g = this._canAdjustMonth(b, 1, G, u) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + m + ".datepicker._adjustDate('#" + b.id + "', +" + C + ", 'M');\" title=\"" + A + '"><span class="ui-icon ui-icon-circle-triangle-' + (e ? "w": "e") + '">' + A + "</span></a>": g ? "": '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + A + '"><span class="ui-icon ui-icon-circle-triangle-' +
                    (e ? "w": "e") + '">' + A + "</span></a>",
                    C = this._get(b, "currentText"),
                    A = this._get(b, "gotoCurrent") && b.currentDay ? D: c,
                    C = !n ? C: this.formatDate(C, A, this._getFormatConfig(b)),
                    n = !b.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + m + '.datepicker._hideDatepicker();">' + this._get(b, "closeText") + "</button>": "",
                    f = f ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (e ? n: "") + (this._isInRange(b, A) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' +
                    m + ".datepicker._gotoToday('#" + b.id + "');\">" + C + "</button>": "") + (e ? "": n) + "</div>": "",
                    n = parseInt(this._get(b, "firstDay"), 10),
                    n = isNaN(n) ? 0: n,
                    C = this._get(b, "showWeek"),
                    A = this._get(b, "dayNames");
                    this._get(b, "dayNamesShort");
                    var K = this._get(b, "dayNamesMin"),
                    I = this._get(b, "monthNames"),
                    X = this._get(b, "monthNamesShort"),
                    pa = this._get(b, "beforeShowDay"),
                    x = this._get(b, "showOtherMonths"),
                    ca = this._get(b, "selectOtherMonths");
                    this._get(b, "calculateWeek");
                    for (var Q = this._getDefaultDate(b), i = "", ia = 0; ia < h[0]; ia++) {
                        var na =
                        "";
                        this.maxRows = 4;
                        for (var ha = 0; ha < h[1]; ha++) {
                            var N = this._daylightSavingAdjust(new Date(G, u, b.selectedDay)),
                            aa = " ui-corner-all",
                            ba = "";
                            if (E) {
                                ba += '<div class="ui-datepicker-group';
                                if (h[1] > 1) switch (ha) {
                                case 0:
                                    ba += " ui-datepicker-group-first";
                                    aa = " ui-corner-" + (e ? "right": "left");
                                    break;
                                case h[1] - 1: ba += " ui-datepicker-group-last";
                                    aa = " ui-corner-" + (e ? "left": "right");
                                    break;
                                default:
                                    ba += " ui-datepicker-group-middle",
                                    aa = ""
                                }
                                ba += '">'
                            }
                            ba += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + aa +
                            '">' + (/all|left/.test(aa) && ia == 0 ? e ? g: w: "") + (/all|right/.test(aa) && ia == 0 ? e ? w: g: "") + this._generateMonthYearHeader(b, u, G, q, s, ia > 0 || ha > 0, I, X) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                            for (var da = C ? '<th class="ui-datepicker-week-col">' + this._get(b, "weekHeader") + "</th>": "", aa = 0; aa < 7; aa++) {
                                var Z = (aa + n) % 7;
                                da += "<th" + ((aa + n + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"': "") + '><span title="' + A[Z] + '">' + K[Z] + "</span></th>"
                            }
                            ba += da + "</tr></thead><tbody>";
                            da = this._getDaysInMonth(G, u);
                            if (G == b.selectedYear &&
                            u == b.selectedMonth) b.selectedDay = Math.min(b.selectedDay, da);
                            aa = (this._getFirstDayOfMonth(G, u) - n + 7) % 7;
                            da = Math.ceil((aa + da) / 7);
                            this.maxRows = da = E ? this.maxRows > da ? this.maxRows: da: da;
                            for (var Z = this._daylightSavingAdjust(new Date(G, u, 1 - aa)), J = 0; J < da; J++) {
                                ba += "<tr>";
                                for (var O = !C ? "": '<td class="ui-datepicker-week-col">' + this._get(b, "calculateWeek")(Z) + "</td>", aa = 0; aa < 7; aa++) {
                                    var V = pa ? pa.apply(b.input ? b.input[0] : null, [Z]) : [!0, ""],
                                    ea = Z.getMonth() != u,
                                    ra = ea && !ca || !V[0] || q && Z < q || s && Z > s;
                                    O += '<td class="' + ((aa + n +
                                    6) % 7 >= 5 ? " ui-datepicker-week-end": "") + (ea ? " ui-datepicker-other-month": "") + (Z.getTime() == N.getTime() && u == b.selectedMonth && b._keyEvent || Q.getTime() == Z.getTime() && Q.getTime() == N.getTime() ? " " + this._dayOverClass: "") + (ra ? " " + this._unselectableClass + " ui-state-disabled": "") + (ea && !x ? "": " " + V[1] + (Z.getTime() == D.getTime() ? " " + this._currentClass: "") + (Z.getTime() == c.getTime() ? " ui-datepicker-today": "")) + '"' + ((!ea || x) && V[2] ? ' title="' + V[2] + '"': "") + (ra ? "": ' onclick="DP_jQuery_' + m + ".datepicker._selectDay('#" +
                                    b.id + "'," + Z.getMonth() + "," + Z.getFullYear() + ', this);return false;"') + ">" + (ea && !x ? "&#xa0;": ra ? '<span class="ui-state-default">' + Z.getDate() + "</span>": '<a class="ui-state-default' + (Z.getTime() == c.getTime() ? " ui-state-highlight": "") + (Z.getTime() == D.getTime() ? " ui-state-active": "") + (ea ? " ui-priority-secondary": "") + '" href="#">' + Z.getDate() + "</a>") + "</td>";
                                    Z.setDate(Z.getDate() + 1);
                                    Z = this._daylightSavingAdjust(Z)
                                }
                                ba += O + "</tr>"
                            }
                            u++;
                            u > 11 && (u = 0, G++);
                            ba += "</tbody></table>" + (E ? "</div>" + (h[0] > 0 && ha == h[1] - 1 ? '<div class="ui-datepicker-row-break"></div>':
                            "") : "");
                            na += ba
                        }
                        i += na
                    }
                    i += f + (d.browser.msie && parseInt(d.browser.version, 10) < 7 && !b.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>': "");
                    b._keyEvent = !1;
                    return i
                },
                _generateMonthYearHeader: function(b, c, d, e, f, g, h, u) {
                    var n = this._get(b, "changeMonth"),
                    E = this._get(b, "changeYear"),
                    D = this._get(b, "showMonthAfterYear"),
                    q = '<div class="ui-datepicker-title">',
                    s = "";
                    if (g || !n) s += '<span class="ui-datepicker-month">' + h[c] + "</span>";
                    else {
                        var h = e && e.getFullYear() == d,
                        w = f && f.getFullYear() ==
                        d;
                        s += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + m + ".datepicker._selectMonthYear('#" + b.id + "', this, 'M');\" >";
                        for (var A = 0; A < 12; A++) if ((!h || A >= e.getMonth()) && (!w || A <= f.getMonth())) s += '<option value="' + A + '"' + (A == c ? ' selected="selected"': "") + ">" + u[A] + "</option>";
                        s += "</select>"
                    }
                    D || (q += s + (g || !n || !E ? "&#xa0;": ""));
                    if (!b.yearshtml) if (b.yearshtml = "", g || !E) q += '<span class="ui-datepicker-year">' + d + "</span>";
                    else {
                        var u = this._get(b, "yearRange").split(":"),
                        ga = (new Date).getFullYear(),
                        h = function(b) {
                            b =
                            b.match(/c[+-].*/) ? d + parseInt(b.substring(1), 10) : b.match(/[+-].*/) ? ga + parseInt(b, 10) : parseInt(b, 10);
                            return isNaN(b) ? ga: b
                        },
                        c = h(u[0]),
                        u = Math.max(c, h(u[1] || "")),
                        c = e ? Math.max(c, e.getFullYear()) : c,
                        u = f ? Math.min(u, f.getFullYear()) : u;
                        for (b.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + m + ".datepicker._selectMonthYear('#" + b.id + "', this, 'Y');\" >"; c <= u; c++) b.yearshtml += '<option value="' + c + '"' + (c == d ? ' selected="selected"': "") + ">" + c + "</option>";
                        b.yearshtml += "</select>";
                        q += b.yearshtml;
                        b.yearshtml =
                        null
                    }
                    q += this._get(b, "yearSuffix");
                    D && (q += (g || !n || !E ? "&#xa0;": "") + s);
                    q += "</div>";
                    return q
                },
                _adjustInstDate: function(b, c, d) {
                    var e = b.drawYear + (d == "Y" ? c: 0),
                    f = b.drawMonth + (d == "M" ? c: 0),
                    c = Math.min(b.selectedDay, this._getDaysInMonth(e, f)) + (d == "D" ? c: 0),
                    e = this._restrictMinMax(b, this._daylightSavingAdjust(new Date(e, f, c)));
                    b.selectedDay = e.getDate();
                    b.drawMonth = b.selectedMonth = e.getMonth();
                    b.drawYear = b.selectedYear = e.getFullYear(); (d == "M" || d == "Y") && this._notifyChange(b)
                },
                _restrictMinMax: function(b, c) {
                    var d = this._getMinMaxDate(b,
                    "min"),
                    e = this._getMinMaxDate(b, "max"),
                    d = d && c < d ? d: c;
                    return e && d > e ? e: d
                },
                _notifyChange: function(b) {
                    var c = this._get(b, "onChangeMonthYear");
                    c && c.apply(b.input ? b.input[0] : null, [b.selectedYear, b.selectedMonth + 1, b])
                },
                _getNumberOfMonths: function(b) {
                    b = this._get(b, "numberOfMonths");
                    return b == null ? [1, 1] : typeof b == "number" ? [1, b] : b
                },
                _getMinMaxDate: function(b, c) {
                    return this._determineDate(b, this._get(b, c + "Date"), null)
                },
                _getDaysInMonth: function(b, c) {
                    return 32 - this._daylightSavingAdjust(new Date(b, c, 32)).getDate()
                },
                _getFirstDayOfMonth: function(b, c) {
                    return (new Date(b, c, 1)).getDay()
                },
                _canAdjustMonth: function(b, c, d, e) {
                    var f = this._getNumberOfMonths(b),
                    d = this._daylightSavingAdjust(new Date(d, e + (c < 0 ? c: f[0] * f[1]), 1));
                    c < 0 && d.setDate(this._getDaysInMonth(d.getFullYear(), d.getMonth()));
                    return this._isInRange(b, d)
                },
                _isInRange: function(b, c) {
                    var d = this._getMinMaxDate(b, "min"),
                    e = this._getMinMaxDate(b, "max");
                    return (!d || c.getTime() >= d.getTime()) && (!e || c.getTime() <= e.getTime())
                },
                _getFormatConfig: function(b) {
                    var c = this._get(b,
                    "shortYearCutoff"),
                    c = typeof c != "string" ? c: (new Date).getFullYear() % 100 + parseInt(c, 10);
                    return {
                        shortYearCutoff: c,
                        dayNamesShort: this._get(b, "dayNamesShort"),
                        dayNames: this._get(b, "dayNames"),
                        monthNamesShort: this._get(b, "monthNamesShort"),
                        monthNames: this._get(b, "monthNames")
                    }
                },
                _formatDate: function(b, c, d, e) {
                    if (!c) b.currentDay = b.selectedDay,
                    b.currentMonth = b.selectedMonth,
                    b.currentYear = b.selectedYear;
                    c = c ? typeof c == "object" ? c: this._daylightSavingAdjust(new Date(e, d, c)) : this._daylightSavingAdjust(new Date(b.currentYear,
                    b.currentMonth, b.currentDay));
                    return this.formatDate(this._get(b, "dateFormat"), c, this._getFormatConfig(b))
                }
            });
            d.fn.datepicker = function(b) {
                if (!this.length) return this;
                if (!d.datepicker.initialized) d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv),
                d.datepicker.initialized = !0;
                var c = Array.prototype.slice.call(arguments, 1);
                return typeof b == "string" && (b == "isDisabled" || b == "getDate" || b == "widget") ? d.datepicker["_" + b + "Datepicker"].apply(d.datepicker, [this[0]].concat(c)) :
                b == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? d.datepicker["_" + b + "Datepicker"].apply(d.datepicker, [this[0]].concat(c)) : this.each(function() {
                    typeof b == "string" ? d.datepicker["_" + b + "Datepicker"].apply(d.datepicker, [this].concat(c)) : d.datepicker._attachDatepicker(this, b)
                })
            };
            d.datepicker = new e;
            d.datepicker.initialized = !1;
            d.datepicker.uuid = (new Date).getTime();
            d.datepicker.version = "1.8.16";
            q["DP_jQuery_" + m] = d
        } (jQuery);
        if (A("jquery.cookie")) jQuery.cookie = function(d, c, e) {
            if (typeof c != "undefined") {
                e =
                e || {};
                if (c === null) c = "",
                e.expires = -1;
                var f = "";
                if (e.expires && (typeof e.expires == "number" || e.expires.toUTCString)) typeof e.expires == "number" ? (f = new Date, f.setTime(f.getTime() + e.expires * 864E5)) : f = e.expires,
                f = "; expires=" + f.toUTCString();
                var g = e.path ? "; path=" + e.path: "",
                m = e.domain ? "; domain=" + e.domain: "",
                e = e.secure ? "; secure": "";
                document.cookie = [d, "=", encodeURIComponent(c), f, g, m, e].join("")
            } else {
                c = null;
                if (document.cookie && document.cookie != "") {
                    e = document.cookie.split(";");
                    for (f = 0; f < e.length; f++) if (g = jQuery.trim(e[f]),
                    g.substring(0, d.length + 1) == d + "=") {
                        c = decodeURIComponent(g.substring(d.length + 1));
                        break
                    }
                }
                return c
            }
        };
        if (A("json2")) {
            if (!this.JSON) this.JSON = {}; (function() {
                function d(b) {
                    return b < 10 ? "0" + b: b
                }
                function c(c) {
                    g.lastIndex = 0;
                    return g.test(c) ? '"' + c.replace(g,
                    function(c) {
                        var d = b[c];
                        return typeof d === "string" ? d: "\\u" + ("0000" + c.charCodeAt(0).toString(16)).slice( - 4)
                    }) + '"': '"' + c + '"'
                }
                function e(b, d) {
                    var f,
                    g,
                    h,
                    u,
                    C = m,
                    E,
                    D = d[b];
                    D && typeof D === "object" && typeof D.toJSON === "function" && (D = D.toJSON(b));
                    typeof l === "function" &&
                    (D = l.call(d, b, D));
                    switch (typeof D) {
                    case "string":
                        return c(D);
                    case "number":
                        return isFinite(D) ? String(D) : "null";
                    case "boolean":
                    case "null":
                        return String(D);
                    case "object":
                        if (!D) return "null";
                        m += n;
                        E = [];
                        if (Object.prototype.toString.apply(D) === "[object Array]") {
                            u = D.length;
                            for (f = 0; f < u; f += 1) E[f] = e(f, D) || "null";
                            h = E.length === 0 ? "[]": m ? "[\n" + m + E.join(",\n" + m) + "\n" + C + "]": "[" + E.join(",") + "]";
                            m = C;
                            return h
                        }
                        if (l && typeof l === "object") {
                            u = l.length;
                            for (f = 0; f < u; f += 1) g = l[f],
                            typeof g === "string" && (h = e(g, D)) && E.push(c(g) +
                            (m ? ": ": ":") + h)
                        } else for (g in D) Object.hasOwnProperty.call(D, g) && (h = e(g, D)) && E.push(c(g) + (m ? ": ": ":") + h);
                        h = E.length === 0 ? "{}": m ? "{\n" + m + E.join(",\n" + m) + "\n" + C + "}": "{" + E.join(",") + "}";
                        m = C;
                        return h
                    }
                }
                if (typeof Date.prototype.toJSON !== "function") Date.prototype.toJSON = function() {
                    return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + d(this.getUTCMonth() + 1) + "-" + d(this.getUTCDate()) + "T" + d(this.getUTCHours()) + ":" + d(this.getUTCMinutes()) + ":" + d(this.getUTCSeconds()) + "Z": null
                },
                String.prototype.toJSON = Number.prototype.toJSON =
                Boolean.prototype.toJSON = function() {
                    return this.valueOf()
                };
                var f = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                g = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                m,
                n,
                b = {
                    "\u0008": "\\b",
                    "\t": "\\t",
                    "\n": "\\n",
                    "\u000c": "\\f",
                    "\r": "\\r",
                    '"': '\\"',
                    "\\": "\\\\"
                },
                l;
                if (typeof JSON.stringify !== "function") JSON.stringify = function(b, c, d) {
                    var f;
                    n = m = "";
                    if (typeof d === "number") for (f =
                    0; f < d; f += 1) n += " ";
                    else typeof d === "string" && (n = d);
                    if ((l = c) && typeof c !== "function" && (typeof c !== "object" || typeof c.length !== "number")) throw Error("JSON.stringify");
                    return e("", {
                        "": b
                    })
                };
                if (typeof JSON.parse !== "function") JSON.parse = function(b, c) {
                    function d(b, e) {
                        var f,
                        g,
                        l = b[e];
                        if (l && typeof l === "object") for (f in l) Object.hasOwnProperty.call(l, f) && (g = d(l, f), g !== void 0 ? l[f] = g: delete l[f]);
                        return c.call(b, e, l)
                    }
                    var e,
                    b = String(b);
                    f.lastIndex = 0;
                    f.test(b) && (b = b.replace(f,
                    function(b) {
                        return "\\u" + ("0000" + b.charCodeAt(0).toString(16)).slice( - 4)
                    }));
                    if (/^[\],:{}\s]*$/.test(b.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return e = eval("(" + b + ")"),
                    typeof c === "function" ? d({
                        "": e
                    },
                    "") : e;
                    throw new SyntaxError("JSON.parse");
                }
            })()
        }
        if (A("date")) Date.CultureInfo = {
            name: "en-US",
            englishName: "English (United States)",
            nativeName: "English (United States)",
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            abbreviatedDayNames: ["Sun",
            "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            amDesignator: "AM",
            pmDesignator: "PM",
            firstDayOfWeek: 0,
            twoDigitYearMax: 2029,
            dateElementOrder: "mdy",
            formatPatterns: {
                shortDate: "M/d/yyyy",
                longDate: "dddd, MMMM dd, yyyy",
                shortTime: "h:mm tt",
                longTime: "h:mm:ss tt",
                fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
                sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                monthDay: "MMMM dd",
                yearMonth: "MMMM, yyyy"
            },
            regexPatterns: {
                jan: /^jan(uary)?/i,
                feb: /^feb(ruary)?/i,
                mar: /^mar(ch)?/i,
                apr: /^apr(il)?/i,
                may: /^may/i,
                jun: /^jun(e)?/i,
                jul: /^jul(y)?/i,
                aug: /^aug(ust)?/i,
                sep: /^sep(t(ember)?)?/i,
                oct: /^oct(ober)?/i,
                nov: /^nov(ember)?/i,
                dec: /^dec(ember)?/i,
                sun: /^su(n(day)?)?/i,
                mon: /^mo(n(day)?)?/i,
                tue: /^tu(e(s(day)?)?)?/i,
                wed: /^we(d(nesday)?)?/i,
                thu: /^th(u(r(s(day)?)?)?)?/i,
                fri: /^fr(i(day)?)?/i,
                sat: /^sa(t(urday)?)?/i,
                future: /^next/i,
                past: /^last|past|prev(ious)?/i,
                add: /^(\+|aft(er)?|from|hence)/i,
                subtract: /^(\-|bef(ore)?|ago)/i,
                yesterday: /^yes(terday)?/i,
                today: /^t(od(ay)?)?/i,
                tomorrow: /^tom(orrow)?/i,
                now: /^n(ow)?/i,
                millisecond: /^ms|milli(second)?s?/i,
                second: /^sec(ond)?s?/i,
                minute: /^mn|min(ute)?s?/i,
                hour: /^h(our)?s?/i,
                week: /^w(eek)?s?/i,
                month: /^m(onth)?s?/i,
                day: /^d(ay)?s?/i,
                year: /^y(ear)?s?/i,
                shortMeridian: /^(a|p)/i,
                longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt|utc)/i,
                ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                timeContext: /^\s*(\:|a(?!u|p)|p)/i
            },
            timezones: [{
                name: "UTC",
                offset: "-000"
            },
            {
                name: "GMT",
                offset: "-000"
            },
            {
                name: "EST",
                offset: "-0500"
            },
            {
                name: "EDT",
                offset: "-0400"
            },
            {
                name: "CST",
                offset: "-0600"
            },
            {
                name: "CDT",
                offset: "-0500"
            },
            {
                name: "MST",
                offset: "-0700"
            },
            {
                name: "MDT",
                offset: "-0600"
            },
            {
                name: "PST",
                offset: "-0800"
            },
            {
                name: "PDT",
                offset: "-0700"
            }]
        },
        function() {
            var d = Date,
            c = d.prototype,
            e = d.CultureInfo,
            f = function(b, c) {
                c || (c = 2);
                return ("000" + b).slice(c * -1)
            };
            c.clearTime = function() {
                this.setHours(0);
                this.setMinutes(0);
                this.setSeconds(0);
                this.setMilliseconds(0);
                return this
            };
            c.setTimeToNow = function() {
                var b = new Date;
                this.setHours(b.getHours());
                this.setMinutes(b.getMinutes());
                this.setSeconds(b.getSeconds());
                this.setMilliseconds(b.getMilliseconds());
                return this
            };
            d.today = function() {
                return (new Date).clearTime()
            };
            d.compare = function(b,
            c) {
                if (isNaN(b) || isNaN(c)) throw Error(b + " - " + c);
                else if (b instanceof Date && c instanceof Date) return b < c ? -1: b > c ? 1: 0;
                else throw new TypeError(b + " - " + c);
            };
            d.equals = function(b, c) {
                return b.compareTo(c) === 0
            };
            d.getDayNumberFromName = function(b) {
                for (var c = e.dayNames, d = e.abbreviatedDayNames, f = e.shortestDayNames, b = b.toLowerCase(), g = 0; g < c.length; g++) if (c[g].toLowerCase() == b || d[g].toLowerCase() == b || f[g].toLowerCase() == b) return g;
                return - 1
            };
            d.getMonthNumberFromName = function(b) {
                for (var c = e.monthNames, d = e.abbreviatedMonthNames,
                b = b.toLowerCase(), f = 0; f < c.length; f++) if (c[f].toLowerCase() == b || d[f].toLowerCase() == b) return f;
                return - 1
            };
            d.isLeapYear = function(b) {
                return b % 4 === 0 && b % 100 !== 0 || b % 400 === 0
            };
            d.getDaysInMonth = function(b, c) {
                return [31, d.isLeapYear(b) ? 29: 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][c]
            };
            d.getTimezoneAbbreviation = function(b) {
                for (var c = e.timezones, d = 0; d < c.length; d++) if (c[d].offset === b) return c[d].name;
                return null
            };
            d.getTimezoneOffset = function(b) {
                for (var c = e.timezones, d = 0; d < c.length; d++) if (c[d].name === b.toUpperCase()) return c[d].offset;
                return null
            };
            c.clone = function() {
                return new Date(this.getTime())
            };
            c.compareTo = function(b) {
                return Date.compare(this, b)
            };
            c.equals = function(b) {
                return Date.equals(this, b || new Date)
            };
            c.between = function(b, c) {
                return this.getTime() >= b.getTime() && this.getTime() <= c.getTime()
            };
            c.isAfter = function(b) {
                return this.compareTo(b || new Date) === 1
            };
            c.isBefore = function(b) {
                return this.compareTo(b || new Date) === -1
            };
            c.isToday = function() {
                return this.isSameDay(new Date)
            };
            c.isSameDay = function(b) {
                return this.clone().clearTime().equals(b.clone().clearTime())
            };
            c.addMilliseconds = function(b) {
                this.setMilliseconds(this.getMilliseconds() + b);
                return this
            };
            c.addSeconds = function(b) {
                return this.addMilliseconds(b * 1E3)
            };
            c.addMinutes = function(b) {
                return this.addMilliseconds(b * 6E4)
            };
            c.addHours = function(b) {
                return this.addMilliseconds(b * 36E5)
            };
            c.addDays = function(b) {
                this.setDate(this.getDate() + b);
                return this
            };
            c.addWeeks = function(b) {
                return this.addDays(b * 7)
            };
            c.addMonths = function(b) {
                var c = this.getDate();
                this.setDate(1);
                this.setMonth(this.getMonth() + b);
                this.setDate(Math.min(c,
                d.getDaysInMonth(this.getFullYear(), this.getMonth())));
                return this
            };
            c.addYears = function(b) {
                return this.addMonths(b * 12)
            };
            c.add = function(b) {
                if (typeof b == "number") return this._orient = b,
                this;
                b.milliseconds && this.addMilliseconds(b.milliseconds);
                b.seconds && this.addSeconds(b.seconds);
                b.minutes && this.addMinutes(b.minutes);
                b.hours && this.addHours(b.hours);
                b.weeks && this.addWeeks(b.weeks);
                b.months && this.addMonths(b.months);
                b.years && this.addYears(b.years);
                b.days && this.addDays(b.days);
                return this
            };
            var g,
            m,
            n;
            c.getWeek =
            function() {
                var b,
                c,
                d,
                e,
                f;
                g = !g ? this.getFullYear() : g;
                m = !m ? this.getMonth() + 1: m;
                n = !n ? this.getDate() : n;
                m <= 2 ? (b = g - 1, c = (b / 4 | 0) - (b / 100 | 0) + (b / 400 | 0), d = c - (((b - 1) / 4 | 0) - ((b - 1) / 100 | 0) + ((b - 1) / 400 | 0)), e = 0, f = n - 1 + 31 * (m - 1)) : (b = g, c = (b / 4 | 0) - (b / 100 | 0) + (b / 400 | 0), d = c - (((b - 1) / 4 | 0) - ((b - 1) / 100 | 0) + ((b - 1) / 400 | 0)), e = d + 1, f = n + (153 * (m - 3) + 2) / 5 + 58 + d);
                b = (b + c) % 7;
                e = f + 3 - (f + b - e) % 7 | 0;
                g = m = n = null;
                return e < 0 ? 53 - ((b - d) / 5 | 0) : e > 364 + d ? 1: (e / 7 | 0) + 1
            };
            c.getISOWeek = function() {
                g = this.getUTCFullYear();
                m = this.getUTCMonth() + 1;
                n = this.getUTCDate();
                return f(this.getWeek())
            };
            c.setWeek = function(b) {
                return this.moveToDayOfWeek(1).addWeeks(b - this.getWeek())
            };
            d._validate = function(b, c, d, e) {
                if (typeof b == "undefined") return ! 1;
                else if (typeof b != "number") throw new TypeError(b + " is not a Number.");
                else if (b < c || b > d) throw new RangeError(b + " is not a valid value for " + e + ".");
                return ! 0
            };
            d.validateMillisecond = function(b) {
                return d._validate(b, 0, 999, "millisecond")
            };
            d.validateSecond = function(b) {
                return d._validate(b, 0, 59, "second")
            };
            d.validateMinute = function(b) {
                return d._validate(b, 0, 59, "minute")
            };
            d.validateHour = function(b) {
                return d._validate(b, 0, 23, "hour")
            };
            d.validateDay = function(b, c, e) {
                return d._validate(b, 1, d.getDaysInMonth(c, e), "day")
            };
            d.validateMonth = function(b) {
                return d._validate(b, 0, 11, "month")
            };
            d.validateYear = function(b) {
                return d._validate(b, 0, 9999, "year")
            };
            c.set = function(b) {
                d.validateMillisecond(b.millisecond) && this.addMilliseconds(b.millisecond - this.getMilliseconds());
                d.validateSecond(b.second) && this.addSeconds(b.second - this.getSeconds());
                d.validateMinute(b.minute) && this.addMinutes(b.minute -
                this.getMinutes());
                d.validateHour(b.hour) && this.addHours(b.hour - this.getHours());
                d.validateMonth(b.month) && this.addMonths(b.month - this.getMonth());
                d.validateYear(b.year) && this.addYears(b.year - this.getFullYear());
                d.validateDay(b.day, this.getFullYear(), this.getMonth()) && this.addDays(b.day - this.getDate());
                b.timezone && this.setTimezone(b.timezone);
                b.timezoneOffset && this.setTimezoneOffset(b.timezoneOffset);
                b.week && d._validate(b.week, 0, 53, "week") && this.setWeek(b.week);
                return this
            };
            c.moveToFirstDayOfMonth =
            function() {
                return this.set({
                    day: 1
                })
            };
            c.moveToLastDayOfMonth = function() {
                return this.set({
                    day: d.getDaysInMonth(this.getFullYear(), this.getMonth())
                })
            };
            c.moveToNthOccurrence = function(b, c) {
                var d = 0;
                if (c > 0) d = c - 1;
                else if (c === -1) return this.moveToLastDayOfMonth(),
                this.getDay() !== b && this.moveToDayOfWeek(b, -1),
                this;
                return this.moveToFirstDayOfMonth().addDays( - 1).moveToDayOfWeek(b, 1).addWeeks(d)
            };
            c.moveToDayOfWeek = function(b, c) {
                var d = (b - this.getDay() + 7 * (c || 1)) % 7;
                return this.addDays(d === 0 ? d + 7 * (c || 1) : d)
            };
            c.moveToMonth =
            function(b, c) {
                var d = (b - this.getMonth() + 12 * (c || 1)) % 12;
                return this.addMonths(d === 0 ? d + 12 * (c || 1) : d)
            };
            c.getOrdinalNumber = function() {
                return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864E5) + 1
            };
            c.getTimezone = function() {
                return d.getTimezoneAbbreviation(this.getUTCOffset())
            };
            c.setTimezoneOffset = function(b) {
                var c = this.getTimezoneOffset();
                return this.addMinutes(Number(b) * -6 / 10 - c)
            };
            c.setTimezone = function(b) {
                return this.setTimezoneOffset(d.getTimezoneOffset(b))
            };
            c.hasDaylightSavingTime =
            function() {
                return Date.today().set({
                    month: 0,
                    day: 1
                }).getTimezoneOffset() !== Date.today().set({
                    month: 6,
                    day: 1
                }).getTimezoneOffset()
            };
            c.isDaylightSavingTime = function() {
                return this.hasDaylightSavingTime() && (new Date).getTimezoneOffset() === Date.today().set({
                    month: 6,
                    day: 1
                }).getTimezoneOffset()
            };
            c.getUTCOffset = function() {
                var b = this.getTimezoneOffset() * -10 / 6;
                return b < 0 ? (b = (b - 1E4).toString(), b.charAt(0) + b.substr(2)) : (b = (b + 1E4).toString(), "+" + b.substr(1))
            };
            c.getElapsed = function(b) {
                return (b || new Date) - this
            };
            if (!c.toISOString) c.toISOString =
            function() {
                function b(b) {
                    return b < 10 ? "0" + b: b
                }
                return '"' + this.getUTCFullYear() + "-" + b(this.getUTCMonth() + 1) + "-" + b(this.getUTCDate()) + "T" + b(this.getUTCHours()) + ":" + b(this.getUTCMinutes()) + ":" + b(this.getUTCSeconds()) + 'Z"'
            };
            c._toString = c.toString;
            c.toString = function(b) {
                var c = this;
                if (b && b.length == 1) {
                    var d = e.formatPatterns;
                    c.t = c.toString;
                    switch (b) {
                    case "d":
                        return c.t(d.shortDate);
                    case "D":
                        return c.t(d.longDate);
                    case "F":
                        return c.t(d.fullDateTime);
                    case "m":
                        return c.t(d.monthDay);
                    case "r":
                        return c.t(d.rfc1123);
                    case "s":
                        return c.t(d.sortableDateTime);
                    case "t":
                        return c.t(d.shortTime);
                    case "T":
                        return c.t(d.longTime);
                    case "u":
                        return c.t(d.universalSortableDateTime);
                    case "y":
                        return c.t(d.yearMonth)
                    }
                }
                var g = function(b) {
                    switch (b * 1) {
                    case 1:
                    case 21:
                    case 31:
                        return "st";
                    case 2:
                    case 22:
                        return "nd";
                    case 3:
                    case 23:
                        return "rd";
                    default:
                        return "th"
                    }
                };
                return b ? b.replace(/(\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g,
                function(b) {
                    if (b.charAt(0) === "\\") return b.replace("\\", "");
                    c.h = c.getHours;
                    switch (b) {
                    case "hh":
                        return f(c.h() <
                        13 ? c.h() === 0 ? 12: c.h() : c.h() - 12);
                    case "h":
                        return c.h() < 13 ? c.h() === 0 ? 12: c.h() : c.h() - 12;
                    case "HH":
                        return f(c.h());
                    case "H":
                        return c.h();
                    case "mm":
                        return f(c.getMinutes());
                    case "m":
                        return c.getMinutes();
                    case "ss":
                        return f(c.getSeconds());
                    case "s":
                        return c.getSeconds();
                    case "yyyy":
                        return f(c.getFullYear(), 4);
                    case "yy":
                        return f(c.getFullYear());
                    case "dddd":
                        return e.dayNames[c.getDay()];
                    case "ddd":
                        return e.abbreviatedDayNames[c.getDay()];
                    case "dd":
                        return f(c.getDate());
                    case "d":
                        return c.getDate();
                    case "MMMM":
                        return e.monthNames[c.getMonth()];
                    case "MMM":
                        return e.abbreviatedMonthNames[c.getMonth()];
                    case "MM":
                        return f(c.getMonth() + 1);
                    case "M":
                        return c.getMonth() + 1;
                    case "t":
                        return c.h() < 12 ? e.amDesignator.substring(0, 1) : e.pmDesignator.substring(0, 1);
                    case "tt":
                        return c.h() < 12 ? e.amDesignator: e.pmDesignator;
                    case "S":
                        return g(c.getDate());
                    default:
                        return b
                    }
                }):
                this._toString()
            }
        } (),
        function() {
            var d = Date,
            c = d.prototype,
            e = d.CultureInfo,
            f = Number.prototype;
            c._orient = 1;
            c._nth = null;
            c._is = !1;
            c._same = !1;
            c._isSecond = !1;
            f._dateElement = "day";
            c.next = function() {
                this._orient =
                1;
                return this
            };
            d.next = function() {
                return d.today().next()
            };
            c.last = c.prev = c.previous = function() {
                this._orient = -1;
                return this
            };
            d.last = d.prev = d.previous = function() {
                return d.today().last()
            };
            c.is = function() {
                this._is = !0;
                return this
            };
            c.same = function() {
                this._same = !0;
                this._isSecond = !1;
                return this
            };
            c.today = function() {
                return this.same().day()
            };
            c.weekday = function() {
                return this._is ? (this._is = !1, !this.is().sat() && !this.is().sun()) : !1
            };
            c.at = function(b) {
                return typeof b === "string" ? d.parse(this.toString("d") + " " + b) :
                this.set(b)
            };
            f.fromNow = f.after = function(b) {
                var c = {};
                c[this._dateElement] = this;
                return (!b ? new Date: b.clone()).add(c)
            };
            f.ago = f.before = function(b) {
                var c = {};
                c[this._dateElement] = this * -1;
                return (!b ? new Date: b.clone()).add(c)
            };
            var g = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/),
            m = "january february march april may june july august september october november december".split(/\s/),
            n = "Millisecond Second Minute Hour Day Week Month Year".split(/\s/),
            b = "Milliseconds Seconds Minutes Hours Date Week Month FullYear".split(/\s/),
            l = "final first second third fourth fifth".split(/\s/);
            c.toObject = function() {
                for (var c = {},
                d = 0; d < n.length; d++) c[n[d].toLowerCase()] = this["get" + b[d]]();
                return c
            };
            d.fromObject = function(b) {
                b.week = null;
                return Date.today().set(b)
            };
            for (var o = function(b) {
                return function() {
                    if (this._is) return this._is = !1,
                    this.getDay() == b;
                    if (this._nth !== null) {
                        this._isSecond && this.addSeconds(this._orient * -1);
                        this._isSecond = !1;
                        var c = this._nth;
                        this._nth = null;
                        var e = this.clone().moveToLastDayOfMonth();
                        this.moveToNthOccurrence(b, c);
                        if (this > e) throw new RangeError(d.getDayName(b) + " does not occur " + c + " times in the month of " + d.getMonthName(e.getMonth()) + " " + e.getFullYear() + ".");
                        return this
                    }
                    return this.moveToDayOfWeek(b, this._orient)
                }
            },
            q = function(b) {
                return function() {
                    var c = d.today(),
                    f = b - c.getDay();
                    b === 0 && e.firstDayOfWeek === 1 && c.getDay() !== 0 && (f += 7);
                    return c.addDays(f)
                }
            },
            B = 0; B < g.length; B++) d[g[B].toUpperCase()] = d[g[B].toUpperCase().substring(0, 3)] = B,
            d[g[B]] = d[g[B].substring(0, 3)] = q(B),
            c[g[B]] = c[g[B].substring(0, 3)] = o(B);
            g = function(b) {
                return function() {
                    return this._is ?
                    (this._is = !1, this.getMonth() === b) : this.moveToMonth(b, this._orient)
                }
            };
            o = function(b) {
                return function() {
                    return d.today().set({
                        month: b,
                        day: 1
                    })
                }
            };
            for (q = 0; q < m.length; q++) d[m[q].toUpperCase()] = d[m[q].toUpperCase().substring(0, 3)] = q,
            d[m[q]] = d[m[q].substring(0, 3)] = o(q),
            c[m[q]] = c[m[q].substring(0, 3)] = g(q);
            g = function(b) {
                return function(c) {
                    if (this._isSecond) return this._isSecond = !1,
                    this;
                    if (this._same) {
                        this._same = this._is = !1;
                        for (var d = this.toObject(), c = (c || new Date).toObject(), e = "", f = b.toLowerCase(), g = n.length -
                        1; g > -1; g--) {
                            e = n[g].toLowerCase();
                            if (d[e] != c[e]) return ! 1;
                            if (f == e) break
                        }
                        return ! 0
                    }
                    b.substring(b.length - 1) != "s" && (b += "s");
                    return this["add" + b](this._orient)
                }
            };
            o = function(b) {
                return function() {
                    this._dateElement = b;
                    return this
                }
            };
            for (q = 0; q < n.length; q++) m = n[q].toLowerCase(),
            c[m] = c[m + "s"] = g(n[q]),
            f[m] = f[m + "s"] = o(m);
            c._ss = g("Second");
            f = function(b) {
                return function(c) {
                    if (this._same) return this._ss(c);
                    if (c || c === 0) return this.moveToNthOccurrence(c, b);
                    this._nth = b;
                    return b === 2 && (c === void 0 || c === null) ? (this._isSecond =
                    !0, this.addSeconds(this._orient)) : this
                }
            };
            for (m = 0; m < l.length; m++) c[l[m]] = m === 0 ? f( - 1) : f(m)
        } (),
        function() {
            Date.Parsing = {
                Exception: function(c) {
                    this.message = "Parse error at '" + c.substring(0, 10) + " ...'"
                }
            };
            for (var d = Date.Parsing, c = d.Operators = {
                rtoken: function(c) {
                    return function(e) {
                        var b = e.match(c);
                        if (b) return [b[0], e.substring(b[0].length)];
                        else throw new d.Exception(e);
                    }
                },
                token: function() {
                    return function(d) {
                        return c.rtoken(RegExp("^s*" + d + "s*"))(d)
                    }
                },
                stoken: function(d) {
                    return c.rtoken(RegExp("^" + d))
                },
                until: function(c) {
                    return function(d) {
                        for (var b =
                        [], e = null; d.length;) {
                            try {
                                e = c.call(this, d)
                            } catch(f) {
                                b.push(e[0]);
                                d = e[1];
                                continue
                            }
                            break
                        }
                        return [b, d]
                    }
                },
                many: function(c) {
                    return function(d) {
                        for (var b = [], e = null; d.length;) {
                            try {
                                e = c.call(this, d)
                            } catch(f) {
                                break
                            }
                            b.push(e[0]);
                            d = e[1]
                        }
                        return [b, d]
                    }
                },
                optional: function(c) {
                    return function(d) {
                        var b = null;
                        try {
                            b = c.call(this, d)
                        } catch(e) {
                            return [null, d]
                        }
                        return [b[0], b[1]]
                    }
                },
                not: function(c) {
                    return function(e) {
                        try {
                            c.call(this, e)
                        } catch(b) {
                            return [null, e]
                        }
                        throw new d.Exception(e);
                    }
                },
                ignore: function(c) {
                    return c ?
                    function(d) {
                        var b =
                        null,
                        b = c.call(this, d);
                        return [null, b[1]]
                    }: null
                },
                product: function() {
                    for (var d = arguments[0], e = Array.prototype.slice.call(arguments, 1), b = [], f = 0; f < d.length; f++) b.push(c.each(d[f], e));
                    return b
                },
                cache: function(c) {
                    var e = {},
                    b = null;
                    return function(f) {
                        try {
                            b = e[f] = e[f] || c.call(this, f)
                        } catch(g) {
                            b = e[f] = g
                        }
                        if (b instanceof d.Exception) throw b;
                        else return b
                    }
                },
                any: function() {
                    var c = arguments;
                    return function(e) {
                        for (var b = null, f = 0; f < c.length; f++) if (c[f] != null) {
                            try {
                                b = c[f].call(this, e)
                            } catch(g) {
                                b = null
                            }
                            if (b) return b
                        }
                        throw new d.Exception(e);
                    }
                },
                each: function() {
                    var c = arguments;
                    return function(e) {
                        for (var b = [], f = null, g = 0; g < c.length; g++) if (c[g] != null) {
                            try {
                                f = c[g].call(this, e)
                            } catch(q) {
                                throw new d.Exception(e);
                            }
                            b.push(f[0]);
                            e = f[1]
                        }
                        return [b, e]
                    }
                },
                all: function() {
                    var c = c;
                    return c.each(c.optional(arguments))
                },
                sequence: function(e, f, b) {
                    f = f || c.rtoken(/^\s*/);
                    b = b || null;
                    return e.length == 1 ? e[0] : function(c) {
                        for (var g = null, q = null, B = [], H = 0; H < e.length; H++) {
                            try {
                                g = e[H].call(this, c)
                            } catch(h) {
                                break
                            }
                            B.push(g[0]);
                            try {
                                q = f.call(this, g[1])
                            } catch(u) {
                                q = null;
                                break
                            }
                            c =
                            q[1]
                        }
                        if (!g) throw new d.Exception(c);
                        if (q) throw new d.Exception(q[1]);
                        if (b) try {
                            g = b.call(this, g[1])
                        } catch(C) {
                            throw new d.Exception(g[1]);
                        }
                        return [B, g ? g[1] : c]
                    }
                },
                between: function(d, e, b) {
                    var b = b || d,
                    f = c.each(c.ignore(d), e, c.ignore(b));
                    return function(b) {
                        b = f.call(this, b);
                        return [[b[0][0], r[0][2]], b[1]]
                    }
                },
                list: function(d, e, b) {
                    e = e || c.rtoken(/^\s*/);
                    b = b || null;
                    return d instanceof Array ? c.each(c.product(d.slice(0, -1), c.ignore(e)), d.slice( - 1), c.ignore(b)) : c.each(c.many(c.each(d, c.ignore(e))), px, c.ignore(b))
                },
                set: function(e,
                f, b) {
                    f = f || c.rtoken(/^\s*/);
                    b = b || null;
                    return function(g) {
                        for (var o = null, q = o = null, B = null, H = [[], g], h = !1, u = 0; u < e.length; u++) {
                            o = q = null;
                            h = e.length == 1;
                            try {
                                o = e[u].call(this, g)
                            } catch(C) {
                                continue
                            }
                            B = [[o[0]], o[1]];
                            if (o[1].length > 0 && !h) try {
                                q = f.call(this, o[1])
                            } catch(E) {
                                h = !0
                            } else h = !0; ! h && q[1].length === 0 && (h = !0);
                            if (!h) {
                                o = [];
                                for (h = 0; h < e.length; h++) u != h && o.push(e[h]);
                                o = c.set(o, f).call(this, q[1]);
                                o[0].length > 0 && (B[0] = B[0].concat(o[0]), B[1] = o[1])
                            }
                            B[1].length < H[1].length && (H = B);
                            if (H[1].length === 0) break
                        }
                        if (H[0].length ===
                        0) return H;
                        if (b) {
                            try {
                                q = b.call(this, H[1])
                            } catch(D) {
                                throw new d.Exception(H[1]);
                            }
                            H[1] = q[1]
                        }
                        return H
                    }
                },
                forward: function(c, d) {
                    return function(b) {
                        return c[d].call(this, b)
                    }
                },
                replace: function(c, d) {
                    return function(b) {
                        b = c.call(this, b);
                        return [d, b[1]]
                    }
                },
                process: function(c, d) {
                    return function(b) {
                        b = c.call(this, b);
                        return [d.call(this, b[0]), b[1]]
                    }
                },
                min: function(c, e) {
                    return function(b) {
                        var f = e.call(this, b);
                        if (f[0].length < c) throw new d.Exception(b);
                        return f
                    }
                }
            },
            e = function(c) {
                return function() {
                    var d = null,
                    b = [];
                    arguments.length >
                    1 ? d = Array.prototype.slice.call(arguments) : arguments[0] instanceof Array && (d = arguments[0]);
                    if (d) for (var e = d.shift(); 0 < e.length;) return d.unshift(e[0]),
                    b.push(c.apply(null, d)),
                    d.shift(),
                    b;
                    else return c.apply(null, arguments)
                }
            },
            f = "optional not ignore cache".split(/\s/), g = 0; g < f.length; g++) c[f[g]] = e(c[f[g]]);
            e = function(c) {
                return function() {
                    return arguments[0] instanceof Array ? c.apply(null, arguments[0]) : c.apply(null, arguments)
                }
            };
            f = "each any all".split(/\s/);
            for (g = 0; g < f.length; g++) c[f[g]] = e(c[f[g]])
        } (),
        function() {
            var d =
            Date,
            c = d.CultureInfo,
            e = function(b) {
                for (var c = [], d = 0; d < b.length; d++) b[d] instanceof Array ? c = c.concat(e(b[d])) : b[d] && c.push(b[d]);
                return c
            };
            d.Grammar = {};
            d.Translator = {
                hour: function(b) {
                    return function() {
                        this.hour = Number(b)
                    }
                },
                minute: function(b) {
                    return function() {
                        this.minute = Number(b)
                    }
                },
                second: function(b) {
                    return function() {
                        this.second = Number(b)
                    }
                },
                meridian: function(b) {
                    return function() {
                        this.meridian = b.slice(0, 1).toLowerCase()
                    }
                },
                timezone: function(b) {
                    return function() {
                        var c = b.replace(/[^\d\+\-]/g, "");
                        c.length ?
                        this.timezoneOffset = Number(c) : this.timezone = b.toLowerCase()
                    }
                },
                day: function(b) {
                    var c = b[0];
                    return function() {
                        this.day = Number(c.match(/\d+/)[0])
                    }
                },
                month: function(b) {
                    return function() {
                        this.month = b.length == 3 ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(b) / 4: Number(b) - 1
                    }
                },
                year: function(b) {
                    return function() {
                        var d = Number(b);
                        this.year = b.length > 2 ? d: d + (d + 2E3 < c.twoDigitYearMax ? 2E3: 1900)
                    }
                },
                rday: function(b) {
                    return function() {
                        switch (b) {
                        case "yesterday":
                            this.days = -1;
                            break;
                        case "tomorrow":
                            this.days = 1;
                            break;
                        case "today":
                            this.days = 0;
                            break;
                        case "now":
                            this.days = 0,
                            this.now = !0
                        }
                    }
                },
                finishExact: function(b) {
                    for (var b = b instanceof Array ? b: [b], c = 0; c < b.length; c++) b[c] && b[c].call(this);
                    b = new Date;
                    if ((this.hour || this.minute) && !this.month && !this.year && !this.day) this.day = b.getDate();
                    if (!this.year) this.year = b.getFullYear();
                    if (!this.month && this.month !== 0) this.month = b.getMonth();
                    if (!this.day) this.day = 1;
                    if (!this.hour) this.hour = 0;
                    if (!this.minute) this.minute = 0;
                    if (!this.second) this.second = 0;
                    if (this.meridian && this.hour) if (this.meridian ==
                    "p" && this.hour < 12) this.hour += 12;
                    else if (this.meridian == "a" && this.hour == 12) this.hour = 0;
                    if (this.day > d.getDaysInMonth(this.year, this.month)) throw new RangeError(this.day + " is not a valid value for days.");
                    b = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second);
                    this.timezone ? b.set({
                        timezone: this.timezone
                    }) : this.timezoneOffset && b.set({
                        timezoneOffset: this.timezoneOffset
                    });
                    return b
                },
                finish: function(b) {
                    b = b instanceof Array ? e(b) : [b];
                    if (b.length === 0) return null;
                    for (var c = 0; c < b.length; c++) typeof b[c] ==
                    "function" && b[c].call(this);
                    b = d.today();
                    if (this.now && !this.unit && !this.operator) return new Date;
                    else this.now && (b = new Date);
                    var c = !!(this.days && this.days !== null || this.orient || this.operator),
                    f,
                    g,
                    h;
                    h = this.orient == "past" || this.operator == "subtract" ? -1: 1; ! this.now && "hour minute second".indexOf(this.unit) != -1 && b.setTimeToNow();
                    if ((this.month || this.month === 0) && "year day hour minute second".indexOf(this.unit) != -1) this.value = this.month + 1,
                    this.month = null,
                    c = !0;
                    if (!c && this.weekday && !this.day && !this.days) {
                        f = Date[this.weekday]();
                        this.day = f.getDate();
                        if (!this.month) this.month = f.getMonth();
                        this.year = f.getFullYear()
                    }
                    if (c && this.weekday && this.unit != "month") this.unit = "day",
                    f = d.getDayNumberFromName(this.weekday) - b.getDay(),
                    g = 7,
                    this.days = f ? (f + h * g) % g: h * g;
                    if (this.month && this.unit == "day" && this.operator) this.value = this.month + 1,
                    this.month = null;
                    if (this.value != null && this.month != null && this.year != null) this.day = this.value * 1;
                    if (this.month && !this.day && this.value && (b.set({
                        day: this.value * 1
                    }), !c)) this.day = this.value * 1;
                    if (!this.month && this.value &&
                    this.unit == "month" && !this.now) this.month = this.value,
                    c = !0;
                    if (c && (this.month || this.month === 0) && this.unit != "year") this.unit = "month",
                    f = this.month - b.getMonth(),
                    g = 12,
                    this.months = f ? (f + h * g) % g: h * g,
                    this.month = null;
                    if (!this.unit) this.unit = "day";
                    if (!this.value && this.operator && this.operator !== null && this[this.unit + "s"] && this[this.unit + "s"] !== null) this[this.unit + "s"] = this[this.unit + "s"] + (this.operator == "add" ? 1: -1) + (this.value || 0) * h;
                    else if (this[this.unit + "s"] == null || this.operator != null) {
                        if (!this.value) this.value =
                        1;
                        this[this.unit + "s"] = this.value * h
                    }
                    if (this.meridian && this.hour) if (this.meridian == "p" && this.hour < 12) this.hour += 12;
                    else if (this.meridian == "a" && this.hour == 12) this.hour = 0;
                    if (this.weekday && !this.day && !this.days && (f = Date[this.weekday](), this.day = f.getDate(), f.getMonth() !== b.getMonth())) this.month = f.getMonth();
                    if ((this.month || this.month === 0) && !this.day) this.day = 1;
                    if (!this.orient && !this.operator && this.unit == "week" && this.value && !this.day && !this.month) return Date.today().setWeek(this.value);
                    if (c && this.timezone &&
                    this.day && this.days) this.day = this.days;
                    return c ? b.add(this) : b.set(this)
                }
            };
            var f = d.Parsing.Operators,
            g = d.Grammar,
            m = d.Translator,
            n;
            g.datePartDelimiter = f.rtoken(/^([\s\-\.\,\/\x27]+)/);
            g.timePartDelimiter = f.stoken(":");
            g.whiteSpace = f.rtoken(/^\s*/);
            g.generalDelimiter = f.rtoken(/^(([\s\,]|at|@|on)+)/);
            var b = {};
            g.ctoken = function(d) {
                var e = b[d];
                if (!e) {
                    for (var e = c.regexPatterns, g = d.split(/\s+/), l = [], h = 0; h < g.length; h++) l.push(f.replace(f.rtoken(e[g[h]]), g[h]));
                    e = b[d] = f.any.apply(null, l)
                }
                return e
            };
            g.ctoken2 =
            function(b) {
                return f.rtoken(c.regexPatterns[b])
            };
            g.h = f.cache(f.process(f.rtoken(/^(0[0-9]|1[0-2]|[1-9])/), m.hour));
            g.hh = f.cache(f.process(f.rtoken(/^(0[0-9]|1[0-2])/), m.hour));
            g.H = f.cache(f.process(f.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/), m.hour));
            g.HH = f.cache(f.process(f.rtoken(/^([0-1][0-9]|2[0-3])/), m.hour));
            g.m = f.cache(f.process(f.rtoken(/^([0-5][0-9]|[0-9])/), m.minute));
            g.mm = f.cache(f.process(f.rtoken(/^[0-5][0-9]/), m.minute));
            g.s = f.cache(f.process(f.rtoken(/^([0-5][0-9]|[0-9])/), m.second));
            g.ss =
            f.cache(f.process(f.rtoken(/^[0-5][0-9]/), m.second));
            g.hms = f.cache(f.sequence([g.H, g.m, g.s], g.timePartDelimiter));
            g.t = f.cache(f.process(g.ctoken2("shortMeridian"), m.meridian));
            g.tt = f.cache(f.process(g.ctoken2("longMeridian"), m.meridian));
            g.z = f.cache(f.process(f.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), m.timezone));
            g.zz = f.cache(f.process(f.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), m.timezone));
            g.zzz = f.cache(f.process(g.ctoken2("timezone"), m.timezone));
            g.timeSuffix = f.each(f.ignore(g.whiteSpace),
            f.set([g.tt, g.zzz]));
            g.time = f.each(f.optional(f.ignore(f.stoken("T"))), g.hms, g.timeSuffix);
            g.d = f.cache(f.process(f.each(f.rtoken(/^([0-2]\d|3[0-1]|\d)/), f.optional(g.ctoken2("ordinalSuffix"))), m.day));
            g.dd = f.cache(f.process(f.each(f.rtoken(/^([0-2]\d|3[0-1])/), f.optional(g.ctoken2("ordinalSuffix"))), m.day));
            g.ddd = g.dddd = f.cache(f.process(g.ctoken("sun mon tue wed thu fri sat"),
            function(b) {
                return function() {
                    this.weekday = b
                }
            }));
            g.M = f.cache(f.process(f.rtoken(/^(1[0-2]|0\d|\d)/), m.month));
            g.MM = f.cache(f.process(f.rtoken(/^(1[0-2]|0\d)/),
            m.month));
            g.MMM = g.MMMM = f.cache(f.process(g.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), m.month));
            g.y = f.cache(f.process(f.rtoken(/^(\d\d?)/), m.year));
            g.yy = f.cache(f.process(f.rtoken(/^(\d\d)/), m.year));
            g.yyy = f.cache(f.process(f.rtoken(/^(\d\d?\d?\d?)/), m.year));
            g.yyyy = f.cache(f.process(f.rtoken(/^(\d\d\d\d)/), m.year));
            n = function() {
                return f.each(f.any.apply(null, arguments), f.not(g.ctoken2("timeContext")))
            };
            g.day = n(g.d, g.dd);
            g.month = n(g.M, g.MMM);
            g.year = n(g.yyyy, g.yy);
            g.orientation = f.process(g.ctoken("past future"),
            function(b) {
                return function() {
                    this.orient = b
                }
            });
            g.operator = f.process(g.ctoken("add subtract"),
            function(b) {
                return function() {
                    this.operator = b
                }
            });
            g.rday = f.process(g.ctoken("yesterday tomorrow today now"), m.rday);
            g.unit = f.process(g.ctoken("second minute hour day week month year"),
            function(b) {
                return function() {
                    this.unit = b
                }
            });
            g.value = f.process(f.rtoken(/^\d\d?(st|nd|rd|th)?/),
            function(b) {
                return function() {
                    this.value = b.replace(/\D/g, "")
                }
            });
            g.expression = f.set([g.rday, g.operator, g.value, g.unit, g.orientation,
            g.ddd, g.MMM]);
            n = function() {
                return f.set(arguments, g.datePartDelimiter)
            };
            g.mdy = n(g.ddd, g.month, g.day, g.year);
            g.ymd = n(g.ddd, g.year, g.month, g.day);
            g.dmy = n(g.ddd, g.day, g.month, g.year);
            g.date = function(b) {
                return (g[c.dateElementOrder] || g.mdy).call(this, b)
            };
            g.format = f.process(f.many(f.any(f.process(f.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/),
            function(b) {
                if (g[b]) return g[b];
                else throw d.Parsing.Exception(b);
            }), f.process(f.rtoken(/^[^dMyhHmstz]+/),
            function(b) {
                return f.ignore(f.stoken(b))
            }))),
            function(b) {
                return f.process(f.each.apply(null, b), m.finishExact)
            });
            var l = {};
            g.formats = function(b) {
                if (b instanceof Array) {
                    for (var c = [], d = 0; d < b.length; d++) c.push(l[b[d]] = l[b[d]] || g.format(b[d])[0]);
                    return f.any.apply(null, c)
                } else return l[b] = l[b] || g.format(b)[0]
            };
            g._formats = g.formats(['"yyyy-MM-ddTHH:mm:ssZ"', "yyyy-MM-ddTHH:mm:ssZ", "yyyy-MM-ddTHH:mm:ssz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mmZ", "yyyy-MM-ddTHH:mmz", "yyyy-MM-ddTHH:mm", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "MMddyyyy",
            "ddMMyyyy", "Mddyyyy", "ddMyyyy", "Mdyyyy", "dMyyyy", "yyyy", "Mdyy", "dMyy", "d"]);
            g._start = f.process(f.set([g.date, g.time, g.expression], g.generalDelimiter, g.whiteSpace), m.finish);
            g.start = function(b) {
                try {
                    var c = g._formats.call({},
                    b);
                    if (c[1].length === 0) return c
                } catch(d) {}
                return g._start.call({},
                b)
            };
            d._parse = d.parse;
            d.parse = function(b) {
                var c = null;
                if (!b) return null;
                if (b instanceof Date) return b;
                try {
                    c = d.Grammar.start.call({},
                    b.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"))
                } catch(e) {
                    return null
                }
                return c[1].length ===
                0 ? c[0] : null
            };
            d.getParseFunction = function(b) {
                var c = d.Grammar.formats(b);
                return function(b) {
                    var d = null;
                    try {
                        d = c.call({},
                        b)
                    } catch(e) {
                        return null
                    }
                    return d[1].length === 0 ? d[0] : null
                }
            };
            d.parseExact = function(b, c) {
                return d.getParseFunction(c)(b)
            }
        } ();
        if (A("socket.io")) {
            var zc = this.io = {
                version: "0.6.3",
                setPath: function(d) {
                    q.console && console.error && console.error("io.setPath will be removed. Please set the variable WEB_SOCKET_SWF_LOCATION pointing to WebSocketMain.swf");
                    this.path = /\/$/.test(d) ? d: d + "/";
                    WEB_SOCKET_SWF_LOCATION =
                    d + "lib/vendor/web-socket-js/WebSocketMain.swf"
                }
            };
            if ("jQuery" in this) jQuery.io = this.io;
            typeof q != "undefined" && typeof WEB_SOCKET_SWF_LOCATION === "undefined" && (WEB_SOCKET_SWF_LOCATION = "/socket.io/lib/vendor/web-socket-js/WebSocketMain.swf"); (function() {
                var d = this.io,
                c = !1;
                d.util = {
                    load: function(d) {
                        if (/loaded|complete/.test(document.readyState) || c) return d();
                        "attachEvent" in q ? q.attachEvent("onload", d) : q.addEventListener("load", d, !1)
                    },
                    defer: function(c) {
                        if (!d.util.webkit) return c();
                        d.util.load(function() {
                            setTimeout(c,
                            100)
                        })
                    },
                    inherit: function(c, d) {
                        for (var g in d.prototype) c.prototype[g] = d.prototype[g]
                    },
                    indexOf: function(c, d, g) {
                        for (var m = c.length, g = g < 0 ? Math.max(0, m + g) : g || 0; g < m; g++) if (c[g] === d) return g;
                        return - 1
                    },
                    isArray: function(c) {
                        return Object.prototype.toString.call(c) === "[object Array]"
                    },
                    merge: function(c, d) {
                        for (var g in d) d.hasOwnProperty(g) && (c[g] = d[g])
                    }
                };
                d.util.webkit = /webkit/i.test(navigator.userAgent);
                d.util.load(function() {
                    c = !0
                })
            })(); (function() {
                var d = this.io,
                c = d.Transport = function(c, f) {
                    this.base = c;
                    this.options =
                    {
                        timeout: 15E3
                    };
                    d.util.merge(this.options, f)
                };
                c.prototype.send = function() {
                    throw Error("Missing send() implementation");
                };
                c.prototype.connect = function() {
                    throw Error("Missing connect() implementation");
                };
                c.prototype.disconnect = function() {
                    throw Error("Missing disconnect() implementation");
                };
                c.prototype.encode = function(c) {
                    for (var f = "", g, c = d.util.isArray(c) ? c: [c], m = 0, n = c.length; m < n; m++) {
                        if (c[m] === null || c[m] === void 0) g = "";
                        else if (g = c[m], Object.prototype.toString.call(g) == "[object Object]") if ("JSON" in q) g =
                        "~j~" + JSON.stringify(g);
                        else {
                            if ("console" in q && console.error) console.error("Socket.IO Error: Trying to encode as JSON, but JSON.stringify is missing.");
                            else throw Error("Socket.IO Error: Trying to encode as JSON, but JSON.stringify is missing.");
                            g = '{ "$error": "Socket.IO Error: Trying to encode as JSON, but JSON.stringify is missing." }'
                        } else g = String(g);
                        f += "~m~" + g.length + "~m~" + g
                    }
                    return f
                };
                c.prototype.decode = function(c) {
                    var d = [],
                    g,
                    m;
                    do {
                        if (c.substr(0, 3) !== "~m~") break;
                        c = c.substr(3);
                        g = "";
                        for (var n = 0,
                        b = c.length; n < b; n++) if (m = Number(c.substr(n, 1)), c.substr(n, 1) == m) g += m;
                        else {
                            c = c.substr(g.length + 3);
                            g = Number(g);
                            break
                        }
                        d.push(c.substr(0, g));
                        c = c.substr(g)
                    }
                    while (c !== "");
                    return d
                };
                c.prototype.onData = function(c) {
                    this.setTimeout();
                    if ((c = this.decode(c)) && c.length) for (var d = 0, g = c.length; d < g; d++) this.onMessage(c[d])
                };
                c.prototype.setTimeout = function() {
                    var c = this;
                    this.timeout && clearTimeout(this.timeout);
                    this.timeout = setTimeout(function() {
                        c.onTimeout()
                    },
                    this.options.timeout)
                };
                c.prototype.onTimeout = function() {
                    this.onDisconnect()
                };
                c.prototype.onMessage = function(c) {
                    if (this.sessionid) if (c.substr(0, 3) == "~h~") this.onHeartbeat(c.substr(3));
                    else if (c.substr(0, 3) == "~j~") this.base.onMessage(JSON.parse(c.substr(3)));
                    else this.base.onMessage(c);
                    else this.sessionid = c,
                    this.onConnect()
                };
                c.prototype.onHeartbeat = function(c) {
                    this.send("~h~" + c)
                };
                c.prototype.onConnect = function() {
                    this.connected = !0;
                    this.connecting = !1;
                    this.base.onConnect();
                    this.setTimeout()
                };
                c.prototype.onDisconnect = function() {
                    this.connected = this.connecting = !1;
                    this.sessionid = null;
                    this.base.onDisconnect()
                };
                c.prototype.prepareUrl = function() {
                    return (this.base.options.secure ? "https": "http") + "://" + this.base.host + ":" + this.base.options.port + "/" + this.base.options.resource + "/" + this.type + (this.sessionid ? "/" + this.sessionid: "/")
                }
            })(); (function() {
                var d = this.io,
                c = new Function,
                e;
                e = "XMLHttpRequest" in q ? (new XMLHttpRequest).withCredentials != void 0: !1;
                var f = function(c) {
                    if ("XDomainRequest" in q && c) return new XDomainRequest;
                    if ("XMLHttpRequest" in q && (!c || e)) return new XMLHttpRequest;
                    if (!c) {
                        try {
                            return new ActiveXObject("MSXML2.XMLHTTP")
                        } catch(d) {}
                        try {
                            return new ActiveXObject("Microsoft.XMLHTTP")
                        } catch(b) {}
                    }
                    return ! 1
                },
                g = d.Transport.XHR = function() {
                    d.Transport.apply(this, arguments);
                    this.sendBuffer = []
                };
                d.util.inherit(g, d.Transport);
                g.prototype.connect = function() {
                    this.get();
                    return this
                };
                g.prototype.checkSend = function() {
                    if (!this.posting && this.sendBuffer.length) {
                        var c = this.encode(this.sendBuffer);
                        this.sendBuffer = [];
                        this.sendIORequest(c)
                    }
                };
                g.prototype.send = function(c) {
                    d.util.isArray(c) ? this.sendBuffer.push.apply(this.sendBuffer, c) : this.sendBuffer.push(c);
                    this.checkSend();
                    return this
                };
                g.prototype.sendIORequest = function(d) {
                    var e =
                    this;
                    this.posting = !0;
                    this.sendXHR = this.request("send", "POST");
                    this.sendXHR.onreadystatechange = function() {
                        var b;
                        if (e.sendXHR.readyState == 4) {
                            e.sendXHR.onreadystatechange = c;
                            try {
                                b = e.sendXHR.status
                            } catch(d) {}
                            e.posting = !1;
                            if (b == 200) e.checkSend();
                            else e.onDisconnect()
                        }
                    };
                    this.sendXHR.send("data=" + encodeURIComponent(d))
                };
                g.prototype.disconnect = function() {
                    this.onDisconnect();
                    return this
                };
                g.prototype.onDisconnect = function() {
                    if (this.xhr) {
                        this.xhr.onreadystatechange = c;
                        try {
                            this.xhr.abort()
                        } catch(e) {}
                        this.xhr = null
                    }
                    if (this.sendXHR) {
                        this.sendXHR.onreadystatechange =
                        c;
                        try {
                            this.sendXHR.abort()
                        } catch(f) {}
                        this.sendXHR = null
                    }
                    this.sendBuffer = [];
                    d.Transport.prototype.onDisconnect.call(this)
                };
                g.prototype.request = function(c, d, b) {
                    var e = f(this.base.isXDomain());
                    if (b) e.multipart = !0;
                    e.open(d || "GET", this.prepareUrl() + (c ? "/" + c: ""));
                    d == "POST" && "setRequestHeader" in e && e.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=utf-8");
                    return e
                };
                g.check = function(c) {
                    try {
                        if (f(c)) return ! 0
                    } catch(d) {}
                    return ! 1
                };
                g.xdomainCheck = function() {
                    return g.check(!0)
                };
                g.request =
                f
            })(); (function() {
                var d = this.io,
                c = d.Transport.websocket = function() {
                    d.Transport.apply(this, arguments)
                };
                d.util.inherit(c, d.Transport);
                c.prototype.type = "websocket";
                c.prototype.connect = function() {
                    var c = this;
                    this.socket = new WebSocket(this.prepareUrl());
                    this.socket.onmessage = function(d) {
                        c.onData(d.data)
                    };
                    this.socket.onclose = function() {
                        c.onDisconnect()
                    };
                    this.socket.onerror = function(d) {
                        c.onError(d)
                    };
                    return this
                };
                c.prototype.send = function(c) {
                    this.socket && this.socket.send(this.encode(c));
                    return this
                };
                c.prototype.disconnect =
                function() {
                    this.socket && this.socket.close();
                    return this
                };
                c.prototype.onError = function(c) {
                    this.base.emit("error", [c])
                };
                c.prototype.prepareUrl = function() {
                    return (this.base.options.secure ? "wss": "ws") + "://" + this.base.host + ":" + this.base.options.port + "/" + this.base.options.resource + "/" + this.type + (this.sessionid ? "/" + this.sessionid: "")
                };
                c.check = function() {
                    return "WebSocket" in q && WebSocket.prototype && WebSocket.prototype.send && !!WebSocket.prototype.send.toString().match(/native/i) && typeof WebSocket !== "undefined"
                };
                c.xdomainCheck = function() {
                    return ! 0
                }
            })(); (function() {
                var d = this.io,
                c = d.Transport.flashsocket = function() {
                    d.Transport.websocket.apply(this, arguments)
                };
                d.util.inherit(c, d.Transport.websocket);
                c.prototype.type = "flashsocket";
                c.prototype.connect = function() {
                    var c = this,
                    f = arguments;
                    WebSocket.__addTask(function() {
                        d.Transport.websocket.prototype.connect.apply(c, f)
                    });
                    return this
                };
                c.prototype.send = function() {
                    var c = this,
                    f = arguments;
                    WebSocket.__addTask(function() {
                        d.Transport.websocket.prototype.send.apply(c, f)
                    });
                    return this
                };
                c.check = function() {
                    return typeof WebSocket == "undefined" || !("__addTask" in WebSocket) || !sa ? !1: sa.hasFlashPlayerVersion("10.0.0")
                };
                c.xdomainCheck = function() {
                    return ! 0
                }
            })(); (function() {
                var d = this.io,
                c = d.Transport.htmlfile = function() {
                    d.Transport.XHR.apply(this, arguments)
                };
                d.util.inherit(c, d.Transport.XHR);
                c.prototype.type = "htmlfile";
                c.prototype.get = function() {
                    var c = this;
                    this.open();
                    q.attachEvent("onunload",
                    function() {
                        c.destroy()
                    })
                };
                c.prototype.open = function() {
                    this.doc = new ActiveXObject("htmlfile");
                    this.doc.open();
                    this.doc.write("<html></html>");
                    this.doc.parentWindow.s = this;
                    this.doc.close();
                    var c = this.doc.createElement("div");
                    this.doc.body.appendChild(c);
                    this.iframe = this.doc.createElement("iframe");
                    c.appendChild(this.iframe);
                    this.iframe.src = this.prepareUrl() + "/" + +new Date
                };
                c.prototype._ = function(c, d) {
                    this.onData(c);
                    var g = d.getElementsByTagName("script")[0];
                    g.parentNode.removeChild(g)
                };
                c.prototype.destroy = function() {
                    if (this.iframe) {
                        try {
                            this.iframe.src = "about:blank"
                        } catch(c) {}
                        this.doc = null;
                        CollectGarbage()
                    }
                };
                c.prototype.disconnect = function() {
                    this.destroy();
                    return d.Transport.XHR.prototype.disconnect.call(this)
                };
                c.check = function() {
                    if ("ActiveXObject" in q) try {
                        return new ActiveXObject("htmlfile") && d.Transport.XHR.check()
                    } catch(c) {}
                    return ! 1
                };
                c.xdomainCheck = function() {
                    return ! 1
                }
            })(); (function() {
                var d = this.io,
                c = d.Transport["xhr-multipart"] = function() {
                    d.Transport.XHR.apply(this, arguments)
                };
                d.util.inherit(c, d.Transport.XHR);
                c.prototype.type = "xhr-multipart";
                c.prototype.get = function() {
                    var c = this;
                    this.xhr = this.request("",
                    "GET", !0);
                    this.xhr.onreadystatechange = function() {
                        if (c.xhr.readyState == 4) c.onData(c.xhr.responseText)
                    };
                    this.xhr.send(null)
                };
                c.check = function() {
                    return "XMLHttpRequest" in q && "prototype" in XMLHttpRequest && "multipart" in XMLHttpRequest.prototype
                };
                c.xdomainCheck = function() {
                    return ! 0
                }
            })(); (function() {
                var d = this.io,
                c = new Function,
                e = d.Transport["xhr-polling"] = function() {
                    d.Transport.XHR.apply(this, arguments)
                };
                d.util.inherit(e, d.Transport.XHR);
                e.prototype.type = "xhr-polling";
                e.prototype.connect = function() {
                    var c =
                    this;
                    d.util.defer(function() {
                        d.Transport.XHR.prototype.connect.call(c)
                    });
                    return ! 1
                };
                e.prototype.get = function() {
                    var d = this;
                    this.xhr = this.request( + new Date, "GET");
                    this.xhr.onreadystatechange = function() {
                        var e;
                        if (d.xhr.readyState == 4) {
                            d.xhr.onreadystatechange = c;
                            try {
                                e = d.xhr.status
                            } catch(m) {}
                            if (e == 200) d.onData(d.xhr.responseText),
                            d.get();
                            else d.onDisconnect()
                        }
                    };
                    this.xhr.send(null)
                };
                e.check = function() {
                    return d.Transport.XHR.check()
                };
                e.xdomainCheck = function() {
                    return d.Transport.XHR.xdomainCheck()
                }
            })(); (function() {
                var d =
                this.io,
                c = d.Transport["jsonp-polling"] = function() {
                    d.Transport.XHR.apply(this, arguments);
                    this.insertAt = document.getElementsByTagName("script")[0];
                    this.index = d.JSONP.length;
                    d.JSONP.push(this)
                };
                d.util.inherit(c, d.Transport["xhr-polling"]);
                d.JSONP = [];
                c.prototype.type = "jsonp-polling";
                c.prototype.sendIORequest = function(c) {
                    function d() {
                        g();
                        m.posting = !1;
                        m.checkSend()
                    }
                    function g() {
                        m.iframe && m.form.removeChild(m.iframe);
                        try {
                            o = document.createElement('<iframe name="' + m.iframeId + '">')
                        } catch(b) {
                            o = document.createElement("iframe"),
                            o.name = m.iframeId
                        }
                        o.id = m.iframeId;
                        m.form.appendChild(o);
                        m.iframe = o
                    }
                    var m = this;
                    if (! ("form" in this)) {
                        var n = document.createElement("FORM"),
                        b = document.createElement("TEXTAREA"),
                        l = this.iframeId = "socket_io_iframe_" + this.index,
                        o;
                        n.style.position = "absolute";
                        n.style.top = "-1000px";
                        n.style.left = "-1000px";
                        n.target = l;
                        n.method = "POST";
                        n.action = this.prepareUrl() + "/" + +new Date + "/" + this.index;
                        b.name = "data";
                        n.appendChild(b);
                        this.insertAt.parentNode.insertBefore(n, this.insertAt);
                        document.body.appendChild(n);
                        this.form =
                        n;
                        this.area = b
                    }
                    g();
                    this.posting = !0;
                    this.area.value = c;
                    try {
                        this.form.submit()
                    } catch(q) {}
                    this.iframe.attachEvent ? o.onreadystatechange = function() {
                        m.iframe.readyState == "complete" && d()
                    }: this.iframe.onload = d
                };
                c.prototype.get = function() {
                    var c = this,
                    d = document.createElement("SCRIPT");
                    if (this.script) this.script.parentNode.removeChild(this.script),
                    this.script = null;
                    d.async = !0;
                    d.src = this.prepareUrl() + "/" + +new Date + "/" + this.index;
                    d.onerror = function() {
                        c.onDisconnect()
                    };
                    this.insertAt.parentNode.insertBefore(d, this.insertAt);
                    this.script = d
                };
                c.prototype._ = function() {
                    this.onData.apply(this, arguments);
                    this.get();
                    return this
                };
                c.check = function() {
                    return ! 0
                };
                c.xdomainCheck = function() {
                    return ! 0
                }
            })(); (function() {
                var d = this.io,
                c = d.Socket = function(c, f) {
                    this.host = c || document.domain;
                    this.options = {
                        secure: !1,
                        document: document,
                        port: document.location.port || 80,
                        resource: "socket.io",
                        transports: ["websocket", "flashsocket", "htmlfile", "xhr-multipart", "xhr-polling", "jsonp-polling"],
                        transportOptions: {
                            "xhr-polling": {
                                timeout: 25E3
                            },
                            "jsonp-polling": {
                                timeout: 25E3
                            }
                        },
                        connectTimeout: 5E3,
                        tryTransportsOnConnectTimeout: !0,
                        reconnect: !0,
                        reconnectionDelay: 500,
                        maxReconnectionAttempts: 10,
                        rememberTransport: !0
                    };
                    d.util.merge(this.options, f);
                    this.reconnecting = this.connecting = this.connected = !1;
                    this.events = {};
                    this.transport = this.getTransport(); ! this.transport && "console" in q && console.error("No transport available")
                };
                c.prototype.getTransport = function(c) {
                    var f = c || this.options.transports;
                    if (this.options.rememberTransport && !c && (c = this.options.document.cookie.match("(?:^|;)\\s*socketio=([^;]*)"))) this.rememberedTransport =
                    !0,
                    f = [decodeURIComponent(c[1])];
                    for (var c = 0, g; g = f[c]; c++) if (d.Transport[g] && d.Transport[g].check() && (!this.isXDomain() || d.Transport[g].xdomainCheck())) return new d.Transport[g](this, this.options.transportOptions[g] || {});
                    return null
                };
                c.prototype.connect = function(c) {
                    if (this.transport && !this.connected && (this.connecting && this.disconnect(!0), this.connecting = !0, this.emit("connecting", [this.transport.type]), this.transport.connect(), this.options.connectTimeout)) {
                        var d = this;
                        this.connectTimeoutTimer = setTimeout(function() {
                            if (!d.connected) {
                                d.disconnect(!0);
                                if (d.options.tryTransportsOnConnectTimeout && !d.rememberedTransport) {
                                    if (!d.remainingTransports) d.remainingTransports = d.options.transports.slice(0);
                                    for (var c = d.remainingTransports; c.length > 0 && c.splice(0, 1)[0] != d.transport.type;);
                                    if (c.length) d.transport = d.getTransport(c),
                                    d.connect()
                                } (!d.remainingTransports || d.remainingTransports.length == 0) && d.emit("connect_failed")
                            }
                            d.remainingTransports && d.remainingTransports.length == 0 && delete d.remainingTransports
                        },
                        this.options.connectTimeout)
                    }
                    if (c && typeof c == "function") this.once("connect",
                    c);
                    return this
                };
                c.prototype.send = function(c) {
                    if (!this.transport || !this.transport.connected) return this.queue(c);
                    this.transport.send(c);
                    return this
                };
                c.prototype.disconnect = function(c) {
                    this.connectTimeoutTimer && clearTimeout(this.connectTimeoutTimer);
                    if (!c) this.options.reconnect = !1;
                    this.transport.disconnect();
                    return this
                };
                c.prototype.on = function(c, d) {
                    c in this.events || (this.events[c] = []);
                    this.events[c].push(d);
                    return this
                };
                c.prototype.once = function(c, d) {
                    var g = this,
                    m = function() {
                        g.removeEvent(c, m);
                        d.apply(g,
                        arguments)
                    };
                    m.ref = d;
                    g.on(c, m);
                    return this
                };
                c.prototype.emit = function(c, d) {
                    if (c in this.events) for (var g = this.events[c].concat(), m = 0, n = g.length; m < n; m++) g[m].apply(this, d === void 0 ? [] : d);
                    return this
                };
                c.prototype.removeEvent = function(c, d) {
                    if (c in this.events) for (var g = 0, m = this.events[c].length; g < m; g++)(this.events[c][g] == d || this.events[c][g].ref && this.events[c][g].ref == d) && this.events[c].splice(g, 1);
                    return this
                };
                c.prototype.queue = function(c) {
                    if (! ("queueStack" in this)) this.queueStack = [];
                    this.queueStack.push(c);
                    return this
                };
                c.prototype.doQueue = function() {
                    if (! ("queueStack" in this) || !this.queueStack.length) return this;
                    this.transport.send(this.queueStack);
                    this.queueStack = [];
                    return this
                };
                c.prototype.isXDomain = function() {
                    var c = q.location.port || 80;
                    return this.host !== document.domain || this.options.port != c
                };
                c.prototype.onConnect = function() {
                    this.connected = !0;
                    this.connecting = !1;
                    this.doQueue();
                    if (this.options.rememberTransport) this.options.document.cookie = "socketio=" + encodeURIComponent(this.transport.type);
                    this.emit("connect")
                };
                c.prototype.onMessage = function(c) {
                    this.emit("message", [c])
                };
                c.prototype.onDisconnect = function() {
                    var c = this.connected;
                    this.connecting = this.connected = !1;
                    this.queueStack = [];
                    if (c && (this.emit("disconnect"), this.options.reconnect && !this.reconnecting)) this.onReconnect()
                };
                c.prototype.onReconnect = function() {
                    function c() {
                        g.connected && g.emit("reconnect", [g.transport.type, g.reconnectionAttempts]);
                        g.removeEvent("connect_failed", d).removeEvent("connect", d);
                        g.reconnecting = !1;
                        delete g.reconnectionAttempts;
                        delete g.reconnectionDelay;
                        delete g.reconnectionTimer;
                        delete g.redoTransports;
                        g.options.tryTransportsOnConnectTimeout = m;
                        g.options.rememberTransport = n
                    }
                    function d() {
                        if (g.reconnecting) if (g.connected) c();
                        else {
                            if (g.connecting && g.reconnecting) return g.reconnectionTimer = setTimeout(d, 1E3);
                            g.reconnectionAttempts++>=g.options.maxReconnectionAttempts ? g.redoTransports ? (g.emit("reconnect_failed"), c()) : (g.on("connect_failed", d), g.options.tryTransportsOnConnectTimeout = !0, g.transport = g.getTransport(g.options.transports), g.redoTransports = !0,
                            g.connect()) : (g.reconnectionDelay *= 2, g.connect(), g.emit("reconnecting", [g.reconnectionDelay, g.reconnectionAttempts]), g.reconnectionTimer = setTimeout(d, g.reconnectionDelay))
                        }
                    }
                    this.reconnecting = !0;
                    this.reconnectionAttempts = 0;
                    this.reconnectionDelay = this.options.reconnectionDelay;
                    var g = this,
                    m = this.options.tryTransportsOnConnectTimeout,
                    n = this.options.rememberTransport;
                    this.options.tryTransportsOnConnectTimeout = !1;
                    this.reconnectionTimer = setTimeout(d, this.reconnectionDelay);
                    this.on("connect", d)
                };
                c.prototype.fire =
                c.prototype.emit;
                c.prototype.addListener = c.prototype.addEvent = c.prototype.addEventListener = c.prototype.on;
                c.prototype.removeListener = c.prototype.removeEventListener = c.prototype.removeEvent
            })();
            var sa = function() {
                function d() {
                    if (!za) {
                        try {
                            var b = K.getElementsByTagName("body")[0].appendChild(K.createElement("span"));
                            b.parentNode.removeChild(b)
                        } catch(c) {
                            return
                        }
                        za = !0;
                        for (var b = N.length, d = 0; d < b; d++) N[d]()
                    }
                }
                function c(b) {
                    za ? b() : N[N.length] = b
                }
                function e(b) {
                    if (typeof ga.addEventListener != M) ga.addEventListener("load",
                    b, !1);
                    else if (typeof K.addEventListener != M) K.addEventListener("load", b, !1);
                    else if (typeof ga.attachEvent != M) h(ga, "onload", b);
                    else if (typeof ga.onload == "function") {
                        var c = ga.onload;
                        ga.onload = function() {
                            c();
                            b()
                        }
                    } else ga.onload = b
                }
                function f() {
                    var b = K.getElementsByTagName("body")[0],
                    c = K.createElement(s);
                    c.setAttribute("type", G);
                    var d = b.appendChild(c);
                    if (d) {
                        var e = 0; (function() {
                            if (typeof d.GetVariable != M) {
                                var h = d.GetVariable("$version");
                                if (h) h = h.split(" ")[1].split(","),
                                J.pv = [parseInt(h[0], 10), parseInt(h[1],
                                10), parseInt(h[2], 10)]
                            } else if (e < 10) {
                                e++;
                                setTimeout(arguments.callee, 10);
                                return
                            }
                            b.removeChild(c);
                            d = null;
                            g()
                        })()
                    } else g()
                }
                function g() {
                    var c = x.length;
                    if (c > 0) for (var d = 0; d < c; d++) {
                        var e = x[d].id,
                        h = x[d].callbackFn,
                        f = {
                            success: !1,
                            id: e
                        };
                        if (J.pv[0] > 0) {
                            var i = H(e);
                            if (i) if (u(x[d].swfVersion) && !(J.wk && J.wk < 312)) {
                                if (E(e, !0), h) f.success = !0,
                                f.ref = m(e),
                                h(f)
                            } else if (x[d].expressInstall && n()) {
                                f = {};
                                f.data = x[d].expressInstall;
                                f.width = i.getAttribute("width") || "0";
                                f.height = i.getAttribute("height") || "0";
                                if (i.getAttribute("class")) f.styleclass =
                                i.getAttribute("class");
                                if (i.getAttribute("align")) f.align = i.getAttribute("align");
                                for (var g = {},
                                i = i.getElementsByTagName("param"), o = i.length, C = 0; C < o; C++) i[C].getAttribute("name").toLowerCase() != "movie" && (g[i[C].getAttribute("name")] = i[C].getAttribute("value"));
                                b(f, g, e, h)
                            } else l(i),
                            h && h(f)
                        } else if (E(e, !0), h) {
                            if ((e = m(e)) && typeof e.SetVariable != M) f.success = !0,
                            f.ref = e;
                            h(f)
                        }
                    }
                }
                function m(b) {
                    var c = null;
                    if ((b = H(b)) && b.nodeName == "OBJECT") typeof b.SetVariable != M ? c = b: (b = b.getElementsByTagName(s)[0]) && (c = b);
                    return c
                }
                function n() {
                    return ! aa && u("6.0.65") && (J.win || J.mac) && !(J.wk && J.wk < 312)
                }
                function b(b, c, d, e) {
                    aa = !0;
                    na = e || null;
                    ha = {
                        success: !1,
                        id: d
                    };
                    var h = H(d);
                    if (h) {
                        h.nodeName == "OBJECT" ? (i = o(h), ia = null) : (i = h, ia = d);
                        b.id = nc;
                        if (typeof b.width == M || !/%$/.test(b.width) && parseInt(b.width, 10) < 310) b.width = "310";
                        if (typeof b.height == M || !/%$/.test(b.height) && parseInt(b.height, 10) < 137) b.height = "137";
                        K.title = K.title.slice(0, 47) + " - Flash Player Installation";
                        e = J.ie && J.win ? "ActiveX": "PlugIn";
                        e = "MMredirectURL=" + ga.location.toString().replace(/&/g,
                        "%26") + "&MMplayerType=" + e + "&MMdoctitle=" + K.title;
                        typeof c.flashvars != M ? c.flashvars += "&" + e: c.flashvars = e;
                        if (J.ie && J.win && h.readyState != 4) e = K.createElement("div"),
                        d += "SWFObjectNew",
                        e.setAttribute("id", d),
                        h.parentNode.insertBefore(e, h),
                        h.style.display = "none",
                        function() {
                            h.readyState == 4 ? h.parentNode.removeChild(h) : setTimeout(arguments.callee, 10)
                        } ();
                        w(b, c, d)
                    }
                }
                function l(b) {
                    if (J.ie && J.win && b.readyState != 4) {
                        var c = K.createElement("div");
                        b.parentNode.insertBefore(c, b);
                        c.parentNode.replaceChild(o(b), c);
                        b.style.display =
                        "none"; (function() {
                            b.readyState == 4 ? b.parentNode.removeChild(b) : setTimeout(arguments.callee, 10)
                        })()
                    } else b.parentNode.replaceChild(o(b), b)
                }
                function o(b) {
                    var c = K.createElement("div");
                    if (J.win && J.ie) c.innerHTML = b.innerHTML;
                    else if (b = b.getElementsByTagName(s)[0]) if (b = b.childNodes) for (var d = b.length, e = 0; e < d; e++) ! (b[e].nodeType == 1 && b[e].nodeName == "PARAM") && b[e].nodeType != 8 && c.appendChild(b[e].cloneNode(!0));
                    return c
                }
                function w(b, c, d) {
                    var e,
                    h = H(d);
                    if (J.wk && J.wk < 312) return e;
                    if (h) {
                        if (typeof b.id == M) b.id =
                        d;
                        if (J.ie && J.win) {
                            var f = "",
                            i;
                            for (i in b) if (b[i] != Object.prototype[i]) i.toLowerCase() == "data" ? c.movie = b[i] : i.toLowerCase() == "styleclass" ? f += ' class="' + b[i] + '"': i.toLowerCase() != "classid" && (f += " " + i + '="' + b[i] + '"');
                            i = "";
                            for (var g in c) c[g] != Object.prototype[g] && (i += '<param name="' + g + '" value="' + c[g] + '" />');
                            h.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + f + ">" + i + "</object>";
                            ca[ca.length] = b.id;
                            e = H(b.id)
                        } else {
                            g = K.createElement(s);
                            g.setAttribute("type", G);
                            for (var u in b) b[u] !=
                            Object.prototype[u] && (u.toLowerCase() == "styleclass" ? g.setAttribute("class", b[u]) : u.toLowerCase() != "classid" && g.setAttribute(u, b[u]));
                            for (f in c) c[f] != Object.prototype[f] && f.toLowerCase() != "movie" && (b = g, i = f, u = c[f], d = K.createElement("param"), d.setAttribute("name", i), d.setAttribute("value", u), b.appendChild(d));
                            h.parentNode.replaceChild(g, h);
                            e = g
                        }
                    }
                    return e
                }
                function A(b) {
                    var c = H(b);
                    if (c && c.nodeName == "OBJECT") J.ie && J.win ? (c.style.display = "none",
                    function() {
                        if (c.readyState == 4) {
                            var d = H(b);
                            if (d) {
                                for (var e in d) typeof d[e] ==
                                "function" && (d[e] = null);
                                d.parentNode.removeChild(d)
                            }
                        } else setTimeout(arguments.callee, 10)
                    } ()) : c.parentNode.removeChild(c)
                }
                function H(b) {
                    var c = null;
                    try {
                        c = K.getElementById(b)
                    } catch(d) {}
                    return c
                }
                function h(b, c, d) {
                    b.attachEvent(c, d);
                    Q[Q.length] = [b, c, d]
                }
                function u(b) {
                    var c = J.pv,
                    b = b.split(".");
                    b[0] = parseInt(b[0], 10);
                    b[1] = parseInt(b[1], 10) || 0;
                    b[2] = parseInt(b[2], 10) || 0;
                    return c[0] > b[0] || c[0] == b[0] && c[1] > b[1] || c[0] == b[0] && c[1] == b[1] && c[2] >= b[2] ? !0: !1
                }
                function C(b, c, d, e) {
                    if (!J.ie || !J.mac) {
                        var h = K.getElementsByTagName("head")[0];
                        if (h) {
                            d = d && typeof d == "string" ? d: "screen";
                            e && (da = ba = null);
                            if (!ba || da != d) e = K.createElement("style"),
                            e.setAttribute("type", "text/css"),
                            e.setAttribute("media", d),
                            ba = h.appendChild(e),
                            J.ie && J.win && typeof K.styleSheets != M && K.styleSheets.length > 0 && (ba = K.styleSheets[K.styleSheets.length - 1]),
                            da = d;
                            J.ie && J.win ? ba && typeof ba.addRule == s && ba.addRule(b, c) : ba && typeof K.createTextNode != M && ba.appendChild(K.createTextNode(b + " {" + c + "}"))
                        }
                    }
                }
                function E(b, c) {
                    if (Z) {
                        var d = c ? "visible": "hidden";
                        za && H(b) ? H(b).style.visibility =
                        d: C("#" + b, "visibility:" + d)
                    }
                }
                function D(b) {
                    return /[\\\"<>\.;]/.exec(b) != null && typeof encodeURIComponent != M ? encodeURIComponent(b) : b
                }
                var M = "undefined",
                s = "object",
                G = "application/x-shockwave-flash",
                nc = "SWFObjectExprInst",
                ga = q,
                K = document,
                I = navigator,
                X = !1,
                N = [function() {
                    X ? f() : g()
                }],
                x = [],
                ca = [],
                Q = [],
                i,
                ia,
                na,
                ha,
                za = !1,
                aa = !1,
                ba,
                da,
                Z = !0,
                J = function() {
                    var b = typeof K.getElementById != M && typeof K.getElementsByTagName != M && typeof K.createElement != M,
                    c = I.userAgent.toLowerCase(),
                    d = I.platform.toLowerCase(),
                    e = d ? /win/.test(d) :
                    /win/.test(c),
                    d = d ? /mac/.test(d) : /mac/.test(c),
                    c = /webkit/.test(c) ? parseFloat(c.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1,
                    h = !+"\u000b1",
                    f = [0, 0, 0],
                    i = null;
                    if (typeof I.plugins != M && typeof I.plugins["Shockwave Flash"] == s) {
                        if ((i = I.plugins["Shockwave Flash"].description) && !(typeof I.mimeTypes != M && I.mimeTypes[G] && !I.mimeTypes[G].enabledPlugin)) X = !0,
                        h = !1,
                        i = i.replace(/^.*\s+(\S+\s+\S+$)/, "$1"),
                        f[0] = parseInt(i.replace(/^(.*)\..*$/, "$1"), 10),
                        f[1] = parseInt(i.replace(/^.*\.(.*)\s.*$/, "$1"), 10),
                        f[2] = /[a-zA-Z]/.test(i) ?
                        parseInt(i.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
                    } else if (typeof ga.ActiveXObject != M) try {
                        var g = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                        if (g && (i = g.GetVariable("$version"))) h = !0,
                        i = i.split(" ")[1].split(","),
                        f = [parseInt(i[0], 10), parseInt(i[1], 10), parseInt(i[2], 10)]
                    } catch(u) {}
                    return {
                        w3: b,
                        pv: f,
                        wk: c,
                        ie: h,
                        win: e,
                        mac: d
                    }
                } (); (function() {
                    J.w3 && ((typeof K.readyState != M && K.readyState == "complete" || typeof K.readyState == M && (K.getElementsByTagName("body")[0] || K.body)) && d(), za || (typeof K.addEventListener !=
                    M && K.addEventListener("DOMContentLoaded", d, !1), J.ie && J.win && (K.attachEvent("onreadystatechange",
                    function() {
                        K.readyState == "complete" && (K.detachEvent("onreadystatechange", arguments.callee), d())
                    }), ga == top &&
                    function() {
                        if (!za) {
                            try {
                                K.documentElement.doScroll("left")
                            } catch(b) {
                                setTimeout(arguments.callee, 0);
                                return
                            }
                            d()
                        }
                    } ()), J.wk &&
                    function() {
                        za || (/loaded|complete/.test(K.readyState) ? d() : setTimeout(arguments.callee, 0))
                    } (), e(d)))
                })(); (function() {
                    J.ie && J.win && q.attachEvent("onunload",
                    function() {
                        for (var b = Q.length,
                        c = 0; c < b; c++) Q[c][0].detachEvent(Q[c][1], Q[c][2]);
                        b = ca.length;
                        for (c = 0; c < b; c++) A(ca[c]);
                        for (var d in J) J[d] = null;
                        J = null;
                        for (var e in sa) sa[e] = null;
                        sa = null
                    })
                })();
                return {
                    registerObject: function(b, c, d, e) {
                        if (J.w3 && b && c) {
                            var h = {};
                            h.id = b;
                            h.swfVersion = c;
                            h.expressInstall = d;
                            h.callbackFn = e;
                            x[x.length] = h;
                            E(b, !1)
                        } else e && e({
                            success: !1,
                            id: b
                        })
                    },
                    getObjectById: function(b) {
                        if (J.w3) return m(b)
                    },
                    embedSWF: function(d, e, h, f, i, g, l, x, m, o) {
                        var C = {
                            success: !1,
                            id: e
                        };
                        J.w3 && !(J.wk && J.wk < 312) && d && e && h && f && i ? (E(e, !1), c(function() {
                            h +=
                            "";
                            f += "";
                            var c = {};
                            if (m && typeof m === s) for (var q in m) c[q] = m[q];
                            c.data = d;
                            c.width = h;
                            c.height = f;
                            q = {};
                            if (x && typeof x === s) for (var D in x) q[D] = x[D];
                            if (l && typeof l === s) for (var ca in l) typeof q.flashvars != M ? q.flashvars += "&" + ca + "=" + l[ca] : q.flashvars = ca + "=" + l[ca];
                            if (u(i)) D = w(c, q, e),
                            c.id == e && E(e, !0),
                            C.success = !0,
                            C.ref = D;
                            else if (g && n()) {
                                c.data = g;
                                b(c, q, e, o);
                                return
                            } else E(e, !0);
                            o && o(C)
                        })) : o && o(C)
                    },
                    switchOffAutoHideShow: function() {
                        Z = !1
                    },
                    ua: J,
                    getFlashPlayerVersion: function() {
                        return {
                            major: J.pv[0],
                            minor: J.pv[1],
                            release: J.pv[2]
                        }
                    },
                    hasFlashPlayerVersion: u,
                    createSWF: function(b, c, d) {
                        if (J.w3) return w(b, c, d)
                    },
                    showExpressInstall: function(c, d, e, h) {
                        J.w3 && n() && b(c, d, e, h)
                    },
                    removeSWF: function(b) {
                        J.w3 && A(b)
                    },
                    createCSS: function(b, c, d, e) {
                        J.w3 && C(b, c, d, e)
                    },
                    addDomLoadEvent: c,
                    addLoadEvent: e,
                    getQueryParamValue: function(b) {
                        var c = K.location.search || K.location.hash;
                        if (c) { / \ ? /.test(c)&&(c=c.split("?")[1]);if(b==null)return D(c);for(var c=c.split("&"),d=0;d<c.length;d++)if(c[d].substring(0,c[d].indexOf("="))==b)return D(c[d].substring(c[d].indexOf("=")+
1))}return""},expressInstallCallback:function(){if(aa){var b=H(nc);if(b&&i){b.parentNode.replaceChild(i,b);if(ia&&(E(ia,!0),J.ie&&J.win))i.style.display="block";na&&na(ha)}aa=!1}}}}();(function(){if(!q.WebSocket){var d=q.console;if(!d||!d.log||!d.error)d={log:function(){},error:function(){}};sa.hasFlashPlayerVersion("10.0.0")?(location.protocol=="file:"&&d.error("WARNING: web-socket-js doesn't work in file:/
                            //... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://..."),
                            WebSocket = function(c, d, f, g, m) {
                                var n = this;
                                n.__id = WebSocket.__nextId++;
                                WebSocket.__instances[n.__id] = n;
                                n.readyState = WebSocket.CONNECTING;
                                n.bufferedAmount = 0;
                                n.__events = {};
                                d ? typeof d == "string" && (d = [d]) : d = [];
                                setTimeout(function() {
                                    WebSocket.__addTask(function() {
                                        WebSocket.__flash.create(n.__id, c, d, f || null, g || 0, m || null)
                                    })
                                },
                                0)
                            },
                            WebSocket.prototype.send = function(c) {
                                if (this.readyState == WebSocket.CONNECTING) throw "INVALID_STATE_ERR: Web Socket connection has not been established";
                                c = WebSocket.__flash.send(this.__id,
                                encodeURIComponent(c));
                                return c < 0 ? !0: (this.bufferedAmount += c, !1)
                            },
                            WebSocket.prototype.close = function() {
                                if (! (this.readyState == WebSocket.CLOSED || this.readyState == WebSocket.CLOSING)) this.readyState = WebSocket.CLOSING,
                                WebSocket.__flash.close(this.__id)
                            },
                            WebSocket.prototype.addEventListener = function(c, d) {
                                c in this.__events || (this.__events[c] = []);
                                this.__events[c].push(d)
                            },
                            WebSocket.prototype.removeEventListener = function(c, d) {
                                if (c in this.__events) for (var f = this.__events[c], g = f.length - 1; g >= 0; --g) if (f[g] ===
                                d) {
                                    f.splice(g, 1);
                                    break
                                }
                            },
                            WebSocket.prototype.dispatchEvent = function(c) {
                                for (var d = this.__events[c.type] || [], f = 0; f < d.length; ++f) d[f](c); (d = this["on" + c.type]) && d(c)
                            },
                            WebSocket.prototype.__handleEvent = function(c) {
                                if ("readyState" in c) this.readyState = c.readyState;
                                if ("protocol" in c) this.protocol = c.protocol;
                                if (c.type == "open" || c.type == "error") c = this.__createSimpleEvent(c.type);
                                else if (c.type == "close") c = this.__createSimpleEvent("close");
                                else if (c.type == "message") c = this.__createMessageEvent("message", decodeURIComponent(c.message));
                                else throw "unknown event type: " + c.type;
                                this.dispatchEvent(c)
                            },
                            WebSocket.prototype.__createSimpleEvent = function(c) {
                                if (document.createEvent && q.Event) {
                                    var d = document.createEvent("Event");
                                    d.initEvent(c, !1, !1);
                                    return d
                                } else return {
                                    type: c,
                                    bubbles: !1,
                                    cancelable: !1
                                }
                            },
                            WebSocket.prototype.__createMessageEvent = function(c, d) {
                                if (document.createEvent && q.MessageEvent && !q.opera) {
                                    var f = document.createEvent("MessageEvent");
                                    f.initMessageEvent("message", !1, !1, d, null, null, q, null);
                                    return f
                                } else return {
                                    type: c,
                                    data: d,
                                    bubbles: !1,
                                    cancelable: !1
                                }
                            },
                            WebSocket.CONNECTING = 0,
                            WebSocket.OPEN = 1,
                            WebSocket.CLOSING = 2,
                            WebSocket.CLOSED = 3,
                            WebSocket.__flash = null,
                            WebSocket.__instances = {},
                            WebSocket.__tasks = [],
                            WebSocket.__nextId = 0,
                            WebSocket.loadFlashPolicyFile = function(c) {
                                WebSocket.__addTask(function() {
                                    WebSocket.__flash.loadManualPolicyFile(c)
                                })
                            },
                            WebSocket.__initialize = function() {
                                if (!WebSocket.__flash) {
                                    if (WebSocket.__swfLocation) q.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation;
                                    if (q.WEB_SOCKET_SWF_LOCATION) {
                                        var c = document.createElement("div");
                                        c.id = "webSocketContainer";
                                        c.style.position = "absolute";
                                        WebSocket.__isFlashLite() ? (c.style.left = "0px", c.style.top = "0px") : (c.style.left = "-100px", c.style.top = "-100px");
                                        var e = document.createElement("div");
                                        e.id = "webSocketFlash";
                                        c.appendChild(e);
                                        document.body.appendChild(c);
                                        sa.embedSWF(WEB_SOCKET_SWF_LOCATION, "webSocketFlash", "1", "1", "10.0.0", null, null, {
                                            hasPriority: !0,
                                            swliveconnect: !0,
                                            allowScriptAccess: "always"
                                        },
                                        null,
                                        function(c) {
                                            c.success || d.error("[WebSocket] swfobject.embedSWF failed")
                                        })
                                    } else d.error("[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf")
                                }
                            },
                            WebSocket.__onFlashInitialized = function() {
                                setTimeout(function() {
                                    WebSocket.__flash = document.getElementById("webSocketFlash");
                                    WebSocket.__flash.setCallerUrl(location.href);
                                    WebSocket.__flash.setDebug( !! q.WEB_SOCKET_DEBUG);
                                    for (var c = 0; c < WebSocket.__tasks.length; ++c) WebSocket.__tasks[c]();
                                    WebSocket.__tasks = []
                                },
                                0)
                            },
                            WebSocket.__onFlashEvent = function() {
                                setTimeout(function() {
                                    try {
                                        for (var c = WebSocket.__flash.receiveEvents(), e = 0; e < c.length; ++e) WebSocket.__instances[c[e].webSocketId].__handleEvent(c[e])
                                    } catch(f) {
                                        d.error(f)
                                    }
                                },
                                0);
                                return ! 0
                            },
                            WebSocket.__log = function(c) {
                                d.log(decodeURIComponent(c))
                            },
                            WebSocket.__error = function(c) {
                                d.error(decodeURIComponent(c))
                            },
                            WebSocket.__addTask = function(c) {
                                WebSocket.__flash ? c() : WebSocket.__tasks.push(c)
                            },
                            WebSocket.__isFlashLite = function() {
                                if (!q.navigator || !q.navigator.mimeTypes) return ! 1;
                                var c = q.navigator.mimeTypes["application/x-shockwave-flash"];
                                return ! c || !c.enabledPlugin || !c.enabledPlugin.filename ? !1: c.enabledPlugin.filename.match(/flashlite/i) ? !0: !1
                            },
                            q.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION ||
                            (q.addEventListener ? q.addEventListener("load",
                            function() {
                                WebSocket.__initialize()
                            },
                            !1) : q.attachEvent("onload",
                            function() {
                                WebSocket.__initialize()
                            }))) : d.error("Flash Player >= 10.0.0 is required.")
                        }
                    })()
                }
                A("underscore") &&
                function() {
                    var d = this,
                    c = d._,
                    e = {},
                    f = Array.prototype,
                    g = Object.prototype,
                    m = f.slice,
                    n = f.unshift,
                    b = g.toString,
                    l = g.hasOwnProperty,
                    o = f.forEach,
                    q = f.map,
                    w = f.reduce,
                    H = f.reduceRight,
                    h = f.filter,
                    u = f.every,
                    C = f.some,
                    E = f.indexOf,
                    D = f.lastIndexOf,
                    g = Array.isArray,
                    A = Object.keys,
                    s = function(b) {
                        return new I(b)
                    };
                    typeof module !== "undefined" && module.exports ? (module.exports = s, s._ = s) : d._ = s;
                    s.VERSION = "1.1.4";
                    var G = s.each = s.forEach = function(b, c, d) {
                        if (b != null) if (o && b.forEach === o) b.forEach(c, d);
                        else if (s.isNumber(b.length)) for (var h = 0, f = b.length; h < f; h++) {
                            if (c.call(d, b[h], h, b) === e) break
                        } else for (h in b) if (l.call(b, h) && c.call(d, b[h], h, b) === e) break
                    };
                    s.map = function(b, c, d) {
                        var e = [];
                        if (b == null) return e;
                        if (q && b.map === q) return b.map(c, d);
                        G(b,
                        function(b, h, f) {
                            e[e.length] = c.call(d, b, h, f)
                        });
                        return e
                    };
                    s.reduce = s.foldl = s.inject =
                    function(b, c, d, e) {
                        var h = d !== void 0;
                        b == null && (b = []);
                        if (w && b.reduce === w) return e && (c = s.bind(c, e)),
                        h ? b.reduce(c, d) : b.reduce(c);
                        G(b,
                        function(b, f, g) { ! h && f === 0 ? (d = b, h = !0) : d = c.call(e, d, b, f, g)
                        });
                        if (!h) throw new TypeError("Reduce of empty array with no initial value");
                        return d
                    };
                    s.reduceRight = s.foldr = function(b, c, d, e) {
                        b == null && (b = []);
                        if (H && b.reduceRight === H) return e && (c = s.bind(c, e)),
                        d !== void 0 ? b.reduceRight(c, d) : b.reduceRight(c);
                        b = (s.isArray(b) ? b.slice() : s.toArray(b)).reverse();
                        return s.reduce(b, c, d, e)
                    };
                    s.find =
                    s.detect = function(b, c, d) {
                        var e;
                        N(b,
                        function(b, h, f) {
                            if (c.call(d, b, h, f)) return e = b,
                            !0
                        });
                        return e
                    };
                    s.filter = s.select = function(b, c, d) {
                        var e = [];
                        if (b == null) return e;
                        if (h && b.filter === h) return b.filter(c, d);
                        G(b,
                        function(b, h, f) {
                            c.call(d, b, h, f) && (e[e.length] = b)
                        });
                        return e
                    };
                    s.reject = function(b, c, d) {
                        var e = [];
                        if (b == null) return e;
                        G(b,
                        function(b, h, f) {
                            c.call(d, b, h, f) || (e[e.length] = b)
                        });
                        return e
                    };
                    s.every = s.all = function(b, c, d) {
                        var c = c || s.identity,
                        h = !0;
                        if (b == null) return h;
                        if (u && b.every === u) return b.every(c, d);
                        G(b,
                        function(b,
                        f, g) {
                            if (! (h = h && c.call(d, b, f, g))) return e
                        });
                        return h
                    };
                    var N = s.some = s.any = function(b, c, d) {
                        var c = c || s.identity,
                        h = !1;
                        if (b == null) return h;
                        if (C && b.some === C) return b.some(c, d);
                        G(b,
                        function(b, f, g) {
                            if (h = c.call(d, b, f, g)) return e
                        });
                        return h
                    };
                    s.include = s.contains = function(b, c) {
                        var d = !1;
                        if (b == null) return d;
                        if (E && b.indexOf === E) return b.indexOf(c) != -1;
                        N(b,
                        function(b) {
                            if (d = b === c) return ! 0
                        });
                        return d
                    };
                    s.invoke = function(b, c) {
                        var d = m.call(arguments, 2);
                        return s.map(b,
                        function(b) {
                            return (c ? b[c] : b).apply(b, d)
                        })
                    };
                    s.pluck =
                    function(b, c) {
                        return s.map(b,
                        function(b) {
                            return b[c]
                        })
                    };
                    s.max = function(b, c, d) {
                        if (!c && s.isArray(b)) return Math.max.apply(Math, b);
                        var e = {
                            computed: -Infinity
                        };
                        G(b,
                        function(b, h, f) {
                            h = c ? c.call(d, b, h, f) : b;
                            h >= e.computed && (e = {
                                value: b,
                                computed: h
                            })
                        });
                        return e.value
                    };
                    s.min = function(b, c, d) {
                        if (!c && s.isArray(b)) return Math.min.apply(Math, b);
                        var e = {
                            computed: Infinity
                        };
                        G(b,
                        function(b, h, f) {
                            h = c ? c.call(d, b, h, f) : b;
                            h < e.computed && (e = {
                                value: b,
                                computed: h
                            })
                        });
                        return e.value
                    };
                    s.sortBy = function(b, c, d) {
                        return s.pluck(s.map(b,
                        function(b,
                        e, h) {
                            return {
                                value: b,
                                criteria: c.call(d, b, e, h)
                            }
                        }).sort(function(b, c) {
                            var d = b.criteria,
                            e = c.criteria;
                            return d < e ? -1: d > e ? 1: 0
                        }), "value")
                    };
                    s.sortedIndex = function(b, c, d) {
                        for (var d = d || s.identity, e = 0, h = b.length; e < h;) {
                            var f = e + h >> 1;
                            d(b[f]) < d(c) ? e = f + 1: h = f
                        }
                        return e
                    };
                    s.toArray = function(b) {
                        return ! b ? [] : b.toArray ? b.toArray() : s.isArray(b) ? b: s.isArguments(b) ? m.call(b) : s.values(b)
                    };
                    s.size = function(b) {
                        return s.toArray(b).length
                    };
                    s.first = s.head = function(b, c, d) {
                        return c && !d ? m.call(b, 0, c) : b[0]
                    };
                    s.rest = s.tail = function(b, c,
                    d) {
                        return m.call(b, s.isUndefined(c) || d ? 1: c)
                    };
                    s.last = function(b) {
                        return b[b.length - 1]
                    };
                    s.compact = function(b) {
                        return s.filter(b,
                        function(b) {
                            return !! b
                        })
                    };
                    s.flatten = function(b) {
                        return s.reduce(b,
                        function(b, c) {
                            if (s.isArray(c)) return b.concat(s.flatten(c));
                            b[b.length] = c;
                            return b
                        },
                        [])
                    };
                    s.without = function(b) {
                        var c = m.call(arguments, 1);
                        return s.filter(b,
                        function(b) {
                            return ! s.include(c, b)
                        })
                    };
                    s.uniq = s.unique = function(b, c) {
                        return s.reduce(b,
                        function(b, d, e) {
                            if (0 == e || (c === !0 ? s.last(b) != d: !s.include(b, d))) b[b.length] =
                            d;
                            return b
                        },
                        [])
                    };
                    s.intersect = function(b) {
                        var c = m.call(arguments, 1);
                        return s.filter(s.uniq(b),
                        function(b) {
                            return s.every(c,
                            function(c) {
                                return s.indexOf(c, b) >= 0
                            })
                        })
                    };
                    s.zip = function() {
                        for (var b = m.call(arguments), c = s.max(s.pluck(b, "length")), d = Array(c), e = 0; e < c; e++) d[e] = s.pluck(b, "" + e);
                        return d
                    };
                    s.indexOf = function(b, c, d) {
                        if (b == null) return - 1;
                        if (d) return d = s.sortedIndex(b, c),
                        b[d] === c ? d: -1;
                        if (E && b.indexOf === E) return b.indexOf(c);
                        for (var d = 0, e = b.length; d < e; d++) if (b[d] === c) return d;
                        return - 1
                    };
                    s.lastIndexOf =
                    function(b, c) {
                        if (b == null) return - 1;
                        if (D && b.lastIndexOf === D) return b.lastIndexOf(c);
                        for (var d = b.length; d--;) if (b[d] === c) return d;
                        return - 1
                    };
                    s.range = function(b, c, d) {
                        for (var e = m.call(arguments), h = e.length <= 1, b = h ? 0: e[0], c = h ? e[0] : e[1], d = e[2] || 1, e = Math.max(Math.ceil((c - b) / d), 0), h = 0, f = Array(e); h < e;) f[h++] = b,
                        b += d;
                        return f
                    };
                    s.bind = function(b, c) {
                        var d = m.call(arguments, 2);
                        return function() {
                            return b.apply(c || {},
                            d.concat(m.call(arguments)))
                        }
                    };
                    s.bindAll = function(b) {
                        var c = m.call(arguments, 1);
                        c.length == 0 && (c = s.functions(b));
                        G(c,
                        function(c) {
                            b[c] = s.bind(b[c], b)
                        });
                        return b
                    };
                    s.memoize = function(b, c) {
                        var d = {},
                        c = c || s.identity;
                        return function() {
                            var e = c.apply(this, arguments);
                            return e in d ? d[e] : d[e] = b.apply(this, arguments)
                        }
                    };
                    s.delay = function(b, c) {
                        var d = m.call(arguments, 2);
                        return setTimeout(function() {
                            return b.apply(b, d)
                        },
                        c)
                    };
                    s.defer = function(b) {
                        return s.delay.apply(s, [b, 1].concat(m.call(arguments, 1)))
                    };
                    var ga = function(b, c, d) {
                        var e;
                        return function() {
                            var h = this,
                            f = arguments,
                            g = function() {
                                e = null;
                                b.apply(h, f)
                            };
                            d && clearTimeout(e);
                            if (d ||
                            !e) e = setTimeout(g, c)
                        }
                    };
                    s.throttle = function(b, c) {
                        return ga(b, c, !1)
                    };
                    s.debounce = function(b, c) {
                        return ga(b, c, !0)
                    };
                    s.wrap = function(b, c) {
                        return function() {
                            var d = [b].concat(m.call(arguments));
                            return c.apply(this, d)
                        }
                    };
                    s.compose = function() {
                        var b = m.call(arguments);
                        return function() {
                            for (var c = m.call(arguments), d = b.length - 1; d >= 0; d--) c = [b[d].apply(this, c)];
                            return c[0]
                        }
                    };
                    s.keys = A ||
                    function(b) {
                        if (s.isArray(b)) return s.range(0, b.length);
                        var c = [],
                        d;
                        for (d in b) l.call(b, d) && (c[c.length] = d);
                        return c
                    };
                    s.values = function(b) {
                        return s.map(b,
                        s.identity)
                    };
                    s.functions = s.methods = function(b) {
                        return s.filter(s.keys(b),
                        function(c) {
                            return s.isFunction(b[c])
                        }).sort()
                    };
                    s.extend = function(b) {
                        G(m.call(arguments, 1),
                        function(c) {
                            for (var d in c) b[d] = c[d]
                        });
                        return b
                    };
                    s.clone = function(b) {
                        return s.isArray(b) ? b.slice() : s.extend({},
                        b)
                    };
                    s.tap = function(b, c) {
                        c(b);
                        return b
                    };
                    s.isEqual = function(b, c) {
                        if (b === c) return ! 0;
                        var d = typeof b;
                        if (d != typeof c) return ! 1;
                        if (b == c) return ! 0;
                        if (!b && c || b && !c) return ! 1;
                        if (b._chain) b = b._wrapped;
                        if (c._chain) c = c._wrapped;
                        if (b.isEqual) return b.isEqual(c);
                        if (s.isDate(b) && s.isDate(c)) return b.getTime() === c.getTime();
                        if (s.isNaN(b) && s.isNaN(c)) return ! 1;
                        if (s.isRegExp(b) && s.isRegExp(c)) return b.source === c.source && b.global === c.global && b.ignoreCase === c.ignoreCase && b.multiline === c.multiline;
                        if (d !== "object") return ! 1;
                        if (b.length && b.length !== c.length) return ! 1;
                        var d = s.keys(b),
                        e = s.keys(c);
                        if (d.length != e.length) return ! 1;
                        for (var h in b) if (! (h in c) || !s.isEqual(b[h], c[h])) return ! 1;
                        return ! 0
                    };
                    s.isEmpty = function(b) {
                        if (s.isArray(b) || s.isString(b)) return b.length === 0;
                        for (var c in b) if (l.call(b, c)) return ! 1;
                        return ! 0
                    };
                    s.isElement = function(b) {
                        return !! (b && b.nodeType == 1)
                    };
                    s.isArray = g ||
                    function(c) {
                        return b.call(c) === "[object Array]"
                    };
                    s.isArguments = function(b) {
                        return ! (!b || !l.call(b, "callee"))
                    };
                    s.isFunction = function(b) {
                        return ! (!b || !b.constructor || !b.call || !b.apply)
                    };
                    s.isString = function(b) {
                        return !! (b === "" || b && b.charCodeAt && b.substr)
                    };
                    s.isNumber = function(b) {
                        return !! (b === 0 || b && b.toExponential && b.toFixed)
                    };
                    s.isNaN = function(b) {
                        return b !== b
                    };
                    s.isBoolean = function(b) {
                        return b ===
                        !0 || b === !1
                    };
                    s.isDate = function(b) {
                        return ! (!b || !b.getTimezoneOffset || !b.setUTCFullYear)
                    };
                    s.isRegExp = function(b) {
                        return ! (!b || !b.test || !b.exec || !(b.ignoreCase || b.ignoreCase === !1))
                    };
                    s.isNull = function(b) {
                        return b === null
                    };
                    s.isUndefined = function(b) {
                        return b === void 0
                    };
                    s.noConflict = function() {
                        d._ = c;
                        return this
                    };
                    s.identity = function(b) {
                        return b
                    };
                    s.times = function(b, c, d) {
                        for (var e = 0; e < b; e++) c.call(d, e)
                    };
                    s.mixin = function(b) {
                        G(s.functions(b),
                        function(c) {
                            pa(c, s[c] = b[c])
                        })
                    };
                    var K = 0;
                    s.uniqueId = function(b) {
                        var c = K++;
                        return b ? b + c: c
                    };
                    s.templateSettings = {
                        evaluate: /<%([\s\S]+?)%>/g,
                        interpolate: /<%=([\s\S]+?)%>/g
                    };
                    s.template = function(b, c) {
                        var d = s.templateSettings,
                        d = "var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('" + b.replace(/\\/g, "\\\\").replace(/'/g, "\\'").replace(d.interpolate,
                        function(b, c) {
                            return "'," + c.replace(/\\'/g, "'") + ",'"
                        }).replace(d.evaluate || null,
                        function(b, c) {
                            return "');" + c.replace(/\\'/g, "'").replace(/[\r\n\t]/g, " ") + "__p.push('"
                        }).replace(/\r/g, "\\r").replace(/\n/g,
                        "\\n").replace(/\t/g, "\\t") + "');}return __p.join('');",
                        d = new Function("obj", d);
                        return c ? d(c) : d
                    };
                    var I = function(b) {
                        this._wrapped = b
                    };
                    s.prototype = I.prototype;
                    var X = function(b, c) {
                        return c ? s(b).chain() : b
                    },
                    pa = function(b, c) {
                        I.prototype[b] = function() {
                            var b = m.call(arguments);
                            n.call(b, this._wrapped);
                            return X(c.apply(s, b), this._chain)
                        }
                    };
                    s.mixin(s);
                    G(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"],
                    function(b) {
                        var c = f[b];
                        I.prototype[b] = function() {
                            c.apply(this._wrapped, arguments);
                            return X(this._wrapped,
                            this._chain)
                        }
                    });
                    G(["concat", "join", "slice"],
                    function(b) {
                        var c = f[b];
                        I.prototype[b] = function() {
                            return X(c.apply(this._wrapped, arguments), this._chain)
                        }
                    });
                    I.prototype.chain = function() {
                        this._chain = !0;
                        return this
                    };
                    I.prototype.value = function() {
                        return this._wrapped
                    }
                } ();
                A("backbone") &&
                function() {
                    var d;
                    d = typeof exports !== "undefined" ? exports: this.Backbone = {};
                    d.VERSION = "0.3.3";
                    var c = this._;
                    if (!c && typeof require !== "undefined") c = require("underscore")._;
                    var e = this.jQuery || this.Zepto;
                    d.emulateHTTP = !1;
                    d.emulateJSON =
                    !1;
                    d.Events = {
                        bind: function(b, d) {
                            this._callbacks || (this._callbacks = {});
                            var e = this._callbacks[b] || (this._callbacks[b] = []);
                            c.include(e, d) && console.log(["Bound more than once to", b]);
                            e.push(d);
                            return this
                        },
                        unbind: function(b, c) {
                            var d;
                            if (b) {
                                if (d = this._callbacks) if (c) {
                                    d = d[b];
                                    if (!d) return this;
                                    for (var e = 0, f = d.length; e < f; e++) if (c === d[e]) {
                                        d.splice(e, 1);
                                        break
                                    }
                                } else d[b] = []
                            } else this._callbacks = {};
                            return this
                        },
                        trigger: function(b) {
                            var c,
                            d,
                            e,
                            f;
                            if (! (d = this._callbacks)) return this;
                            if (c = d[b]) {
                                e = 0;
                                for (f = c.length; e <
                                f; e++) c[e].apply(this, Array.prototype.slice.call(arguments, 1))
                            }
                            if (c = d.all) {
                                e = 0;
                                for (f = c.length; e < f; e++) c[e].apply(this, arguments)
                            }
                            return this
                        }
                    };
                    d.Model = function(b, d) {
                        b || (b = {});
                        this.defaults && (b = c.extend({},
                        this.defaults, b));
                        this.attributes = {};
                        this._escapedAttributes = {};
                        this.cid = c.uniqueId("c");
                        this.set(b, {
                            silent: !0
                        });
                        this._previousAttributes = c.clone(this.attributes);
                        if (d && d.collection) this.collection = d.collection;
                        this.initialize(b, d)
                    };
                    c.extend(d.Model.prototype, d.Events, {
                        _previousAttributes: null,
                        _changed: !1,
                        initialize: function() {},
                        toJSON: function() {
                            return c.clone(this.attributes)
                        },
                        get: function(b) {
                            return this.attributes[b]
                        },
                        escape: function(b) {
                            var c;
                            if (c = this._escapedAttributes[b]) return c;
                            c = this.attributes[b];
                            return this._escapedAttributes[b] = (c == null ? "": c).replace(/&(?!\w+;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;")
                        },
                        set: function(b, d) {
                            d || (d = {});
                            if (!b) return this;
                            if (b.attributes) b = b.attributes;
                            if ("_id" in b) b.id = b._id;
                            var e = this.attributes,
                            f = this._escapedAttributes;
                            if (!d.silent &&
                            this.validate && !this._performValidation(b, d)) return ! 1;
                            if ("id" in b) this.id = b.id;
                            for (var g in b) {
                                var l = b[g];
                                if (!c.isEqual(e[g], l) && (e[g] = l, delete f[g], !d.silent)) this._changed = !0,
                                this.trigger("change:" + g, this, l, d)
                            } ! d.silent && this._changed && this.change(d);
                            return this
                        },
                        unset: function(b, c) {
                            c || (c = {});
                            var d = {};
                            d[b] = void 0;
                            if (!c.silent && this.validate && !this._performValidation(d, c)) return ! 1;
                            delete this.attributes[b];
                            delete this._escapedAttributes[b];
                            if (!c.silent) this._changed = !0,
                            this.trigger("change:" + b, this,
                            void 0, c),
                            this.change(c);
                            return this
                        },
                        clear: function(b) {
                            b || (b = {});
                            var c = this.attributes,
                            d = {};
                            for (attr in c) d[attr] = void 0;
                            if (!b.silent && this.validate && !this._performValidation(d, b)) return ! 1;
                            this.attributes = {};
                            this._escapedAttributes = {};
                            if (!b.silent) {
                                this._changed = !0;
                                for (attr in c) this.trigger("change:" + attr, this, void 0, b);
                                this.change(b)
                            }
                            return this
                        },
                        fetch: function(b) {
                            b || (b = {});
                            var c = this,
                            e = H(b.error, c, b); (this.sync || d.sync)("read", this,
                            function(d) {
                                if (!c.set(c.parse(d), b)) return ! 1;
                                b.success && b.success(c,
                                d)
                            },
                            e);
                            return this
                        },
                        save: function(b, c) {
                            c || (c = {});
                            if (b && !this.set(b, c)) return ! 1;
                            var e = this,
                            f = H(c.error, e, c),
                            g = this.isNew() ? "create": "update"; (this.sync || d.sync)(g, this,
                            function(b) {
                                if (!e.set(e.parse(b), c)) return ! 1;
                                c.success && c.success(e, b)
                            },
                            f);
                            return this
                        },
                        destroy: function(b) {
                            b || (b = {});
                            var c = this,
                            e = H(b.error, c, b); (this.sync || d.sync)("delete", this,
                            function(d) {
                                c.collection && c.collection.remove(c);
                                b.success && b.success(c, d)
                            },
                            e);
                            return this
                        },
                        url: function() {
                            var b = A(this.collection);
                            return this.isNew() ? b:
                            b + (b.charAt(b.length - 1) == "/" ? "": "/") + this.id
                        },
                        parse: function(b) {
                            return b
                        },
                        clone: function() {
                            return new this.constructor(this)
                        },
                        isNew: function() {
                            return ! this.id
                        },
                        change: function(b) {
                            this.trigger("change", this, b);
                            this._previousAttributes = c.clone(this.attributes);
                            this._changed = !1
                        },
                        hasChanged: function(b) {
                            return b ? this._previousAttributes[b] != this.attributes[b] : this._changed
                        },
                        changedAttributes: function(b) {
                            b || (b = this.attributes);
                            var d = this._previousAttributes,
                            e = !1,
                            f;
                            for (f in b) c.isEqual(d[f], b[f]) || (e = e ||
                            {},
                            e[f] = b[f]);
                            return e
                        },
                        previous: function(b) {
                            return ! b || !this._previousAttributes ? null: this._previousAttributes[b]
                        },
                        previousAttributes: function() {
                            return c.clone(this._previousAttributes)
                        },
                        _performValidation: function(b, c) {
                            var d = this.validate(b);
                            return d ? (c.error ? c.error(this, d) : this.trigger("error", this, d, c), !1) : !0
                        }
                    });
                    d.Collection = function(b, d) {
                        d || (d = {});
                        if (d.comparator) this.comparator = d.comparator,
                        delete d.comparator;
                        this._boundOnModelEvent = c.bind(this._onModelEvent, this);
                        this._reset();
                        b && this.refresh(b,
                        {
                            silent: !0
                        });
                        this.initialize(b, d)
                    };
                    c.extend(d.Collection.prototype, d.Events, {
                        model: d.Model,
                        initialize: function() {},
                        toJSON: function() {
                            return this.map(function(b) {
                                return b.toJSON()
                            })
                        },
                        add: function(b, d) {
                            if (c.isArray(b)) for (var e = 0, f = b.length; e < f; e++) this._add(b[e], d);
                            else this._add(b, d);
                            return this
                        },
                        remove: function(b, d) {
                            if (c.isArray(b)) for (var e = 0, f = b.length; e < f; e++) this._remove(b[e], d);
                            else this._remove(b, d);
                            return this
                        },
                        get: function(b) {
                            return b == null ? null: this._byId[b.id != null ? b.id: b]
                        },
                        getByCid: function(b) {
                            return b &&
                            this._byCid[b.cid || b]
                        },
                        at: function(b) {
                            return this.models[b]
                        },
                        sort: function(b) {
                            b || (b = {});
                            if (!this.comparator) throw Error("Cannot sort a set without a comparator");
                            this.models = this.sortBy(this.comparator);
                            b.silent || this.trigger("refresh", this, b);
                            return this
                        },
                        pluck: function(b) {
                            return c.map(this.models,
                            function(c) {
                                return c.get(b)
                            })
                        },
                        refresh: function(b, c) {
                            b || (b = []);
                            c || (c = {});
                            this._reset();
                            this.add(b, {
                                silent: !0
                            });
                            c.silent || this.trigger("refresh", this, c);
                            return this
                        },
                        fetch: function(b) {
                            b || (b = {});
                            var c = this,
                            e = H(b.error, c, b); (this.sync || d.sync)("read", this,
                            function(d) {
                                c.refresh(c.parse(d));
                                b.success && b.success(c, d)
                            },
                            e);
                            return this
                        },
                        create: function(b, c) {
                            var e = this;
                            c || (c = {});
                            b instanceof d.Model ? b.collection = e: b = new this.model(b, {
                                collection: e
                            });
                            return b.save(null, {
                                success: function(b, d) {
                                    e.add(b);
                                    c.success && c.success(b, d)
                                },
                                error: c.error
                            })
                        },
                        parse: function(b) {
                            return b
                        },
                        chain: function() {
                            return c(this.models).chain()
                        },
                        _reset: function() {
                            this.length = 0;
                            this.models = [];
                            this._byId = {};
                            this._byCid = {}
                        },
                        _add: function(b,
                        c) {
                            c || (c = {});
                            b instanceof d.Model || (b = new this.model(b, {
                                collection: this
                            }));
                            var e = this.getByCid(b);
                            if (e) throw Error(["Can't add the same model to a set twice", e.id]);
                            this._byId[b.id] = b;
                            this._byCid[b.cid] = b;
                            b.collection = this;
                            this.models.splice(this.comparator ? this.sortedIndex(b, this.comparator) : this.length, 0, b);
                            b.unbind("all", this._boundOnModelEvent);
                            b.bind("all", this._boundOnModelEvent);
                            this.length++;
                            c.silent || b.trigger("add", b, this, c);
                            return b
                        },
                        _remove: function(b, c) {
                            c || (c = {});
                            b = this.getByCid(b) ||
                            this.get(b);
                            if (!b) return null;
                            delete this._byId[b.id];
                            delete this._byCid[b.cid];
                            delete b.collection;
                            this.models.splice(this.indexOf(b), 1);
                            this.length--;
                            c.silent || b.trigger("remove", b, this, c);
                            b.unbind("all", this._boundOnModelEvent);
                            return b
                        },
                        _onModelEvent: function(b, c) {
                            b === "change:id" && (delete this._byId[c.previous("id")], this._byId[c.id] = c);
                            this.trigger.apply(this, arguments)
                        }
                    });
                    c.each(["forEach", "each", "map", "reduce", "reduceRight", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any",
                    "include", "invoke", "max", "min", "sortBy", "sortedIndex", "toArray", "size", "first", "rest", "last", "without", "indexOf", "lastIndexOf", "isEmpty"],
                    function(b) {
                        d.Collection.prototype[b] = function() {
                            return c[b].apply(c, [this.models].concat(c.toArray(arguments)))
                        }
                    });
                    d.Controller = function(b) {
                        b || (b = {});
                        if (b.routes) this.routes = b.routes;
                        this._bindRoutes();
                        this.initialize(b)
                    };
                    var f = /:([\w\d]+)/g,
                    g = /\*([\w\d]+)/g;
                    c.extend(d.Controller.prototype, d.Events, {
                        initialize: function() {},
                        route: function(b, e, f) {
                            d.history || (d.history =
                            new d.History);
                            c.isRegExp(b) || (b = this._routeToRegExp(b));
                            d.history.route(b, c.bind(function(c) {
                                c = this._extractParameters(b, c);
                                f.apply(this, c);
                                this.trigger.apply(this, ["route:" + e].concat(c))
                            },
                            this))
                        },
                        saveLocation: function(b) {
                            d.history.saveLocation(b)
                        },
                        _bindRoutes: function() {
                            if (this.routes) for (var b in this.routes) {
                                var c = this.routes[b];
                                this.route(b, c, this[c])
                            }
                        },
                        _routeToRegExp: function(b) {
                            b = b.replace(f, "([^/]*)").replace(g, "(.*?)");
                            return RegExp("^" + b + "$")
                        },
                        _extractParameters: function(b, c) {
                            return b.exec(c).slice(1)
                        }
                    });
                    d.History = function() {
                        this.handlers = [];
                        this.fragment = this.getFragment();
                        c.bindAll(this, "checkUrl")
                    };
                    var m = /^#*/;
                    c.extend(d.History.prototype, {
                        interval: 50,
                        getFragment: function(b) {
                            return (b || q.location).hash.replace(m, "")
                        },
                        start: function() {
                            var b = document.documentMode;
                            if (b = e.browser.msie && (!b || b <= 7)) this.iframe = e('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow;
                            "onhashchange" in q && !b ? e(q).bind("hashchange", this.checkUrl) : setInterval(this.checkUrl, this.interval);
                            return this.loadUrl()
                        },
                        route: function(b, c) {
                            this.handlers.push({
                                route: b,
                                callback: c
                            })
                        },
                        checkUrl: function() {
                            var b = this.getFragment();
                            b == this.fragment && this.iframe && (b = this.getFragment(this.iframe.location));
                            if (b == this.fragment || b == decodeURIComponent(this.fragment)) return ! 1;
                            if (this.iframe) q.location.hash = this.iframe.location.hash = b;
                            this.loadUrl()
                        },
                        loadUrl: function() {
                            var b = this.fragment = this.getFragment();
                            return c.any(this.handlers,
                            function(c) {
                                if (c.route.test(b)) return c.callback(b),
                                !0
                            })
                        },
                        saveLocation: function(b) {
                            b = (b || "").replace(m,
                            "");
                            if (this.fragment != b && (q.location.hash = this.fragment = b, this.iframe && b != this.getFragment(this.iframe.location))) this.iframe.document.open().close(),
                            this.iframe.location.hash = b
                        }
                    });
                    d.View = function(b) {
                        this._configure(b || {});
                        this._ensureElement();
                        this.delegateEvents();
                        this.initialize(b)
                    };
                    var n = /^(\w+)\s*(.*)$/;
                    c.extend(d.View.prototype, d.Events, {
                        tagName: "div",
                        $: function(b) {
                            return e(b, this.el)
                        },
                        initialize: function() {},
                        render: function() {
                            return this
                        },
                        remove: function() {
                            e(this.el).remove();
                            return this
                        },
                        make: function(b, c, d) {
                            b = document.createElement(b);
                            c && e(b).attr(c);
                            d && e(b).html(d);
                            return b
                        },
                        delegateEvents: function(b) {
                            if (b || (b = this.events)) {
                                e(this.el).unbind();
                                for (var d in b) {
                                    var f = b[d],
                                    g = d.match(n),
                                    l = g[1],
                                    g = g[2],
                                    f = c.bind(this[f], this);
                                    g === "" ? e(this.el).bind(l, f) : e(this.el).delegate(g, l, f)
                                }
                            }
                        },
                        _configure: function(b) {
                            this.options && (b = c.extend({},
                            this.options, b));
                            if (b.model) this.model = b.model;
                            if (b.collection) this.collection = b.collection;
                            if (b.el) this.el = b.el;
                            if (b.id) this.id = b.id;
                            if (b.className) this.className =
                            b.className;
                            if (b.tagName) this.tagName = b.tagName;
                            this.options = b
                        },
                        _ensureElement: function() {
                            if (!this.el) {
                                var b = {};
                                if (this.id) b.id = this.id;
                                if (this.className) b["class"] = this.className;
                                this.el = this.make(this.tagName, b)
                            }
                        }
                    });
                    var b = function(c, d) {
                        var e = w(this, c, d);
                        e.extend = b;
                        return e
                    };
                    d.Model.extend = d.Collection.extend = d.Controller.extend = d.View.extend = b;
                    var l = {
                        create: "POST",
                        update: "PUT",
                        "delete": "DELETE",
                        read: "GET"
                    };
                    d.sync = function(b, c, f, g) {
                        var m = l[b],
                        b = b === "create" || b === "update" ? JSON.stringify(c.toJSON()) :
                        null,
                        c = {
                            url: A(c),
                            type: m,
                            contentType: "application/json",
                            data: b,
                            dataType: "json",
                            processData: !1,
                            success: f,
                            error: g
                        };
                        if (d.emulateJSON) c.contentType = "application/x-www-form-urlencoded",
                        c.processData = !0,
                        c.data = b ? {
                            model: b
                        }: {};
                        if (d.emulateHTTP && (m === "PUT" || m === "DELETE")) {
                            if (d.emulateJSON) c.data._method = m;
                            c.type = "POST";
                            c.beforeSend = function(b) {
                                b.setRequestHeader("X-HTTP-Method-Override", m)
                            }
                        }
                        e.ajax(c)
                    };
                    var o = function() {},
                    w = function(b, d, e) {
                        var f;
                        f = d && d.hasOwnProperty("constructor") ? d.constructor: function() {
                            return b.apply(this,
                            arguments)
                        };
                        o.prototype = b.prototype;
                        f.prototype = new o;
                        d && c.extend(f.prototype, d);
                        e && c.extend(f, e);
                        f.prototype.constructor = f;
                        f.__super__ = b.prototype;
                        return f
                    },
                    A = function(b) {
                        if (!b || !b.url) throw Error("A 'url' property or function must be specified");
                        return c.isFunction(b.url) ? b.url() : b.url
                    },
                    H = function(b, c, d) {
                        return function(e) {
                            b ? b(c, e) : c.trigger("error", c, e, d)
                        }
                    }
                } ();
                if (A("mustache")) var N = function() {
                    var d = function() {};
                    d.prototype = {
                        otag: "{{",
                        ctag: "}}",
                        pragmas: {},
                        buffer: [],
                        pragmas_implemented: {
                            "IMPLICIT-ITERATOR": !0
                        },
                        context: {},
                        render: function(c, d, f, g) {
                            if (!g) this.context = d,
                            this.buffer = [];
                            if (!this.includes("", c)) if (g) return c;
                            else {
                                this.send(c);
                                return
                            }
                            c = this.render_pragmas(c);
                            c = this.render_section(c, d, f);
                            if (g) return this.render_tags(c, d, f, g);
                            this.render_tags(c, d, f, g)
                        },
                        send: function(c) {
                            c != "" && this.buffer.push(c)
                        },
                        render_pragmas: function(c) {
                            if (!this.includes("%", c)) return c;
                            var d = this;
                            return c.replace(RegExp(this.otag + "%([\\w-]+) ?([\\w]+=[\\w]+)?" + this.ctag),
                            function(c, g, m) {
                                if (!d.pragmas_implemented[g]) throw {
                                    message: "This implementation of mustache doesn't understand the '" +
                                    g + "' pragma"
                                };
                                d.pragmas[g] = {};
                                m && (c = m.split("="), d.pragmas[g][c[0]] = c[1]);
                                return ""
                            })
                        },
                        render_partial: function(c, d, f) {
                            c = this.trim(c);
                            if (!f || f[c] === void 0) throw {
                                message: "unknown_partial '" + c + "'"
                            };
                            return typeof d[c] != "object" ? this.render(f[c], d, f, !0) : this.render(f[c], d[c], f, !0)
                        },
                        render_section: function(c, d, f) {
                            if (!this.includes("#", c) && !this.includes("^", c)) return c;
                            var g = this;
                            return c.replace(RegExp(this.otag + "(\\^|\\#)\\s*(.+?)\\s*" + this.ctag + "\n*([\\s\\S]+?)" + this.otag + "\\/\\s*\\2\\s*" + this.ctag + "\\s*",
                            "mg"),
                            function(c, n, b, l) {
                                c = g.find(b, d);
                                if (n == "^") return ! c || g.is_array(c) && c.length === 0 ? g.render(l, d, f, !0) : "";
                                else if (n == "#") return g.is_array(c) ? g.map(c,
                                function(b) {
                                    return g.render(l, g.create_context(b), f, !0)
                                }).join("") : g.is_object(c) ? g.render(l, g.create_context(c), f, !0) : typeof c === "function" ? c.call(d, l,
                                function(b) {
                                    return g.render(b, d, f, !0)
                                }) : c ? g.render(l, d, f, !0) : ""
                            })
                        },
                        render_tags: function(c, d, f, g) {
                            for (var m = this, n = function() {
                                return RegExp(m.otag + "(=|!|>|\\{|%)?([^\\/#\\^]+?)\\1?" + m.ctag + "+", "g")
                            },
                            b = n(), l = function(c, g, l) {
                                switch (g) {
                                case "!":
                                    return "";
                                case "=":
                                    return m.set_delimiters(l),
                                    b = n(),
                                    "";
                                case ">":
                                    return m.render_partial(l, d, f);
                                case "{":
                                    return m.find(l, d);
                                default:
                                    return m.escape(m.find(l, d))
                                }
                            },
                            c = c.split("\n"), o = 0; o < c.length; o++) c[o] = c[o].replace(b, l, this),
                            g || this.send(c[o]);
                            if (g) return c.join("\n")
                        },
                        set_delimiters: function(c) {
                            c = c.split(" ");
                            this.otag = this.escape_regex(c[0]);
                            this.ctag = this.escape_regex(c[1])
                        },
                        escape_regex: function(c) {
                            if (!arguments.callee.sRE) arguments.callee.sRE = RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)",
                            "g");
                            return c.replace(arguments.callee.sRE, "\\$1")
                        },
                        find: function(c, d) {
                            var c = this.trim(c),
                            f;
                            d[c] === !1 || d[c] === 0 || d[c] ? f = d[c] : (this.context[c] === !1 || this.context[c] === 0 || this.context[c]) && (f = this.context[c]);
                            return typeof f === "function" ? f.apply(d) : f !== void 0 ? f: ""
                        },
                        includes: function(c, d) {
                            return d.indexOf(this.otag + c) != -1
                        },
                        escape: function(c) {
                            return String(c === null ? "": c).replace(/&(?!\w+;)?|["'<>\\]/g,
                            function(c) {
                                switch (c) {
                                case "&":
                                    return "&amp;";
                                case "\\":
                                    return "&#92;";
                                case '"':
                                    return "&quot;";
                                case "'":
                                    return "&#39;";
                                case "<":
                                    return "&lt;";
                                case ">":
                                    return "&gt;";
                                default:
                                    return c
                                }
                            })
                        },
                        create_context: function(c) {
                            if (this.is_object(c)) return c;
                            else {
                                var d = ".";
                                if (this.pragmas["IMPLICIT-ITERATOR"]) d = this.pragmas["IMPLICIT-ITERATOR"].iterator;
                                var f = {};
                                f[d] = c;
                                return f
                            }
                        },
                        is_object: function(c) {
                            return c && typeof c == "object"
                        },
                        is_array: function(c) {
                            return Object.prototype.toString.call(c) === "[object Array]"
                        },
                        trim: function(c) {
                            return c.replace(/^\s*|\s*$/g, "")
                        },
                        map: function(c, d) {
                            if (typeof c.map == "function") return c.map(d);
                            else {
                                for (var f =
                                [], g = c.length, m = 0; m < g; m++) f.push(d(c[m]));
                                return f
                            }
                        }
                    };
                    return {
                        name: "mustache.js",
                        version: "0.3.1-dev",
                        to_html: function(c, e, f, g) {
                            var m = new d;
                            if (g) m.send = g;
                            m.render(c, e, f);
                            if (!g) return m.buffer.join("\n")
                        }
                    }
                } ();
                if (A("markdown")) {
                    var Va;
                    typeof exports === "undefined" ? (q.markdown = {},
                    Va = q.markdown) : Va = exports; (function(d) {
                        function c(b) {
                            for (var c = 0, d = -1; (d = b.indexOf("\n", d + 1)) != -1;) c++;
                            return c
                        }
                        function e(b, c) {
                            function d(b) {
                                this.len_after = b;
                                this.name = "close_" + c
                            }
                            var e = b + "_state",
                            f = b == "strong" ? "em_state": "strong_state";
                            return function(g) {
                                if (this[e][0] == c) return this[e].shift(),
                                [g.length, new d(g.length - c.length)];
                                else {
                                    var l = this[f].slice(),
                                    m = this[e].slice();
                                    this[e].unshift(c);
                                    var n = this.processInline(g.substr(c.length)),
                                    o = n[n.length - 1];
                                    this[e].shift();
                                    return o instanceof d ? (n.pop(), [g.length - o.len_after, [b].concat(n)]) : (this[f] = l, this[e] = m, [c.length, c])
                                }
                            }
                        }
                        function f(b) {
                            return w(b) && b.length > 1 && typeof b[1] === "object" && !w(b[1]) ? b[1] : void 0
                        }
                        function g(b) {
                            for (var c = b.split(""), b = [""], d = !1; c.length;) {
                                var e = c.shift();
                                switch (e) {
                                case " ":
                                    d ? b[b.length - 1] += e: b.push("");
                                    break;
                                case "'":
                                case '"':
                                    d = !d;
                                    break;
                                case "\\":
                                    e = c.shift();
                                default:
                                    b[b.length - 1] += e
                                }
                            }
                            c = {};
                            for (d = 0; d < b.length; ++d) / ^# / .test(b[d]) ? c.id = b[d].substring(1) : /^\./.test(b[d]) ? c["class"] ? c["class"] += b[d].replace(/./, " ") : c["class"] = b[d].substring(1) : /=/.test(b[d]) && (e = b[d].split(/=/), c[e[0]] = e[1]);
                            return c
                        }
                        function m(b) {
                            return b.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
                        }
                        function n(b) {
                            if (typeof b ===
                            "string") return m(b);
                            var c = b.shift(),
                            d = {},
                            e = [];
                            for (b.length && typeof b[0] === "object" && !(b[0] instanceof Array) && (d = b.shift()); b.length;) e.push(arguments.callee(b.shift()));
                            var f = "",
                            g;
                            for (g in d) f += " " + g + '="' + m(d[g]) + '"';
                            return "<" + c + f + ">" + e.join("") + "</" + c + ">"
                        }
                        function b(b, c, d) {
                            var d = d || {},
                            e = b.slice(0);
                            typeof d.preprocessTreeNode === "function" && (e = d.preprocessTreeNode(e, c));
                            var g = f(e);
                            if (g) {
                                e[1] = {};
                                for (var l in g) e[1][l] = g[l];
                                g = e[1]
                            }
                            if (typeof e === "string") return e;
                            switch (e[0]) {
                            case "header":
                                e[0] = "h" +
                                e[1].level;
                                delete e[1].level;
                                break;
                            case "bulletlist":
                                e[0] = "ul";
                                break;
                            case "numberlist":
                                e[0] = "ol";
                                break;
                            case "listitem":
                                e[0] = "li";
                                break;
                            case "para":
                                e[0] = "p";
                                break;
                            case "markdown":
                                e[0] = "html";
                                g && delete g.references;
                                break;
                            case "code_block":
                                e[0] = "pre";
                                l = g ? 2: 1;
                                var m = ["code"];
                                m.push.apply(m, e.splice(l));
                                e[l] = m;
                                break;
                            case "inlinecode":
                                e[0] = "code";
                                break;
                            case "img":
                                e[1].src = e[1].href;
                                delete e[1].href;
                                break;
                            case "linebreak":
                                e[0] = "br";
                                break;
                            case "link":
                                e[0] = "a";
                                break;
                            case "link_ref":
                                if (e[0] = "a", l = c[g.ref]) {
                                    delete g.ref;
                                    g.href = l.href;
                                    if (l.title) g.title = l.title;
                                    delete g.original
                                } else return g.original
                            }
                            l = 1;
                            if (g) {
                                for (var n in e[1]) l = 2;
                                l === 1 && e.splice(l, 1)
                            }
                            for (; l < e.length; ++l) e[l] = arguments.callee(e[l], c, d);
                            return e
                        }
                        function l(b) {
                            for (var c = f(b) ? 2: 1; c < b.length;) typeof b[c] === "string" ? c + 1 < b.length && typeof b[c + 1] === "string" ? b[c] += b.splice(c + 1, 1)[0] : ++c: (arguments.callee(b[c]), ++c)
                        }
                        var o = d.Markdown = function h(b) {
                            switch (typeof b) {
                            case "undefined":
                                this.dialect = h.dialects.Gruber;
                                break;
                            case "object":
                                this.dialect = b;
                                break;
                            default:
                                if (b in
                                h.dialects) this.dialect = h.dialects[b];
                                else throw Error("Unknown Markdown dialect '" + String(b) + "'");
                            }
                            this.em_state = [];
                            this.strong_state = [];
                            this.debug_indent = ""
                        };
                        d.parse = function(b, c) {
                            return (new o(c)).toTree(b)
                        };
                        d.toHTML = function(b, c, e) {
                            b = d.toHTMLTree(b, c, e);
                            return d.renderJsonML(b)
                        };
                        d.toHTMLTree = function(c, d, e) {
                            typeof c === "string" && (c = this.parse(c, d));
                            var d = f(c),
                            g = {};
                            if (d && d.references) g = d.references;
                            c = b(c, g, e);
                            l(c);
                            return c
                        };
                        var q = o.mk_block = function(b, c, d) {
                            arguments.length == 1 && (c = "\n\n");
                            var e = new String(b);
                            e.trailing = c;
                            e.toSource = function() {
                                return "Markdown.mk_block( " + uneval(b) + ", " + uneval(c) + ", " + uneval(d) + " )"
                            };
                            if (d != void 0) e.lineNumber = d;
                            return e
                        };
                        o.prototype.split_blocks = function(b) {
                            var d = /([\s\S]+?)($|\n(?:\s*\n|$)+)/g,
                            e = [],
                            f,
                            g = 1;
                            if ((f = /^(\s*\n)/.exec(b)) != null) g += c(f[0]),
                            d.lastIndex = f[0].length;
                            for (; (f = d.exec(b)) != null;) e.push(q(f[1], f[2], g)),
                            g += c(f[0]);
                            return e
                        };
                        o.prototype.processBlock = function(b, c) {
                            var d = this.dialect.block,
                            e = d.__order__;
                            if ("__call__" in d) return d.__call__.call(this, b, c);
                            for (var f =
                            0; f < e.length; f++) {
                                var g = d[e[f]].call(this, b, c);
                                if (g) return (!w(g) || g.length > 0 && !w(g[0])) && this.debug(e[f], "didn't return a proper array"),
                                g
                            }
                            return []
                        };
                        o.prototype.processInline = function(b) {
                            return this.dialect.inline.__call__.call(this, String(b))
                        };
                        o.prototype.toTree = function(b, c) {
                            var d = b instanceof Array ? b: this.split_blocks(b),
                            e = this.tree;
                            try {
                                this.tree = c || this.tree || ["markdown"];
                                a: for (; d.length;) {
                                    var f = this.processBlock(d.shift(), d);
                                    if (!f.length) continue a;
                                    this.tree.push.apply(this.tree, f)
                                }
                                return this.tree
                            } finally {
                                if (c) this.tree =
                                e
                            }
                        };
                        o.prototype.debug = function() {
                            var b = Array.prototype.slice.call(arguments);
                            b.unshift(this.debug_indent);
                            typeof print !== "undefined" && print.apply(print, b);
                            typeof console !== "undefined" && typeof console.log !== "undefined" && console.log.apply(null, b)
                        };
                        o.prototype.loop_re_over_block = function(b, c, d) {
                            for (var e, c = c.valueOf(); c.length && (e = b.exec(c)) != null;) c = c.substr(e[0].length),
                            d.call(this, e);
                            return c
                        };
                        o.dialects = {};
                        o.dialects.Gruber = {
                            block: {
                                atxHeader: function(b, c) {
                                    var d = b.match(/^(#{1,6})\s*(.*?)\s*#*\s*(?:\n|$)/);
                                    if (d) {
                                        var e = ["header", {
                                            level: d[1].length
                                        }];
                                        Array.prototype.push.apply(e, this.processInline(d[2]));
                                        d[0].length < b.length && c.unshift(q(b.substr(d[0].length), b.trailing, b.lineNumber + 2));
                                        return [e]
                                    }
                                },
                                setextHeader: function(b, c) {
                                    var d = b.match(/^(.*)\n([-=])\2\2+(?:\n|$)/);
                                    if (d) {
                                        var e = ["header", {
                                            level: d[2] === "=" ? 1: 2
                                        },
                                        d[1]];
                                        d[0].length < b.length && c.unshift(q(b.substr(d[0].length), b.trailing, b.lineNumber + 2));
                                        return [e]
                                    }
                                },
                                code: function(b, c) {
                                    var d = [],
                                    e = /^(?: {0,3}\t| {4})(.*)\n?/,
                                    f = b.match(e);
                                    if (f) {
                                        a: do
                                        if (f = this.loop_re_over_block(e,
                                        b.valueOf(),
                                        function(b) {
                                            d.push(b[1])
                                        }), f.length) {
                                            c.unshift(q(f, b.trailing));
                                            break a
                                        } else if (c.length) {
                                            f = c[0].match(e);
                                            if (!f) break a;
                                            d.push(b.trailing.replace(/[^\n]/g, "").substring(2));
                                            b = c.shift()
                                        } else break a;
                                        while (1);
                                        return [["code_block", d.join("\n")]]
                                    }
                                },
                                horizRule: function(b, c) {
                                    var d = b.match(/^(?:([\s\S]*?)\n)?[ \t]*([-_*])(?:[ \t]*\2){2,}[ \t]*(?:\n([\s\S]*))?$/);
                                    if (d) {
                                        var e = [["hr"]];
                                        d[1] && e.unshift.apply(e, this.processBlock(d[1], []));
                                        d[3] && c.unshift(q(d[3]));
                                        return e
                                    }
                                },
                                lists: function() {
                                    function b(c,
                                    d, e, f) {
                                        if (d) c.push(["para"].concat(e));
                                        else {
                                            d = c[c.length - 1] instanceof Array && c[c.length - 1][0] == "para" ? c[c.length - 1] : c;
                                            f && c.length > 1 && e.unshift(f);
                                            for (c = 0; c < e.length; c++) f = e[c],
                                            typeof f == "string" && d.length > 1 && typeof d[d.length - 1] == "string" ? d[d.length - 1] += f: d.push(f)
                                        }
                                    }
                                    function c(b, d) {
                                        for (var e = RegExp("^(" + g + "{" + b + "}.*?\\n?)*$"), f = RegExp("^" + g + "{" + b + "}", "gm"), h = []; d.length > 0;) {
                                            e.exec(d[0]) && (e = d.shift(), f = e.replace(f, ""), h.push(q(f, e.trailing, e.lineNumber)));
                                            break
                                        }
                                        return h
                                    }
                                    function d(b, c, e) {
                                        b = b.list;
                                        b = b[b.length - 1];
                                        b[1] instanceof Array && b[1][0] == "para" || (c + 1 == e.length ? b.push(["para"].concat(b.splice(1))) : (c = b.pop(), b.push(["para"].concat(b.splice(1)), c)))
                                    }
                                    var e = /[*+-]/,
                                    f = /^( {0,3})([*+-]|\d\.)[ \t]+/,
                                    g = "(?: {0,3}\\t| {4})";
                                    return function(l, m) {
                                        function n(b) {
                                            var c = e.exec(b[2]) ? ["bulletlist"] : ["numberlist"];
                                            q.push({
                                                list: c,
                                                indent: b[1]
                                            });
                                            return c
                                        }
                                        var o = l.match(f);
                                        if (o) {
                                            var q = [],
                                            w = n(o),
                                            A,
                                            B = !1,
                                            x = [q[0].list];
                                            a: for (;;) {
                                                var F = l.split(/(?=\n)/),
                                                Q = "",
                                                i = 0;
                                                for (; i < F.length; i++) {
                                                    var N = "",
                                                    na = F[i].replace(/^\n/,
                                                    function(b) {
                                                        N = b;
                                                        return ""
                                                    }),
                                                    o = na.match(RegExp("(?:^(" + g + "{0," + q.length + "} {0,3})([*+-]|\\d\\.)\\s+)|(^" + g + "{0," + (q.length - 1) + "}[ ]{0,4})"));
                                                    if (o[1] !== void 0) {
                                                        Q.length && (b(A, B, this.processInline(Q), N), B = !1, Q = "");
                                                        o[1] = o[1].replace(/ {0,3}\t/g, "    ");
                                                        var ha = Math.floor(o[1].length / 4) + 1;
                                                        if (ha > q.length) w = n(o),
                                                        A.push(w),
                                                        A = w[1] = ["listitem"];
                                                        else {
                                                            if (!q.some(function(b, c) {
                                                                if (b.indent != o[1]) return ! 1;
                                                                w = b.list;
                                                                q.splice(c + 1);
                                                                return ! 0
                                                            })) ha++,
                                                            ha <= q.length ? (q.splice(ha), w = q[ha - 1].list) : (w = n(o), A.push(w));
                                                            A = ["listitem"];
                                                            w.push(A)
                                                        }
                                                        N = ""
                                                    }
                                                    na.length > o[0].length && (Q += N + na.substr(o[0].length))
                                                }
                                                Q.length && (b(A, B, this.processInline(Q), N), B = !1, Q = "");
                                                B = c(q.length, m);
                                                B.length > 0 && (q.forEach(d, this), A.push.apply(A, this.toTree(B, [])));
                                                B = m[0] && m[0].valueOf() || "";
                                                if (B.match(f) || B.match(/^ /)) {
                                                    l = m.shift();
                                                    if (B = this.dialect.block.horizRule(l, m)) {
                                                        x.push.apply(x, B);
                                                        break
                                                    }
                                                    q.forEach(d, this);
                                                    B = !0;
                                                    continue a
                                                }
                                                break
                                            }
                                            return x
                                        }
                                    }
                                } (),
                                blockquote: function(b, c) {
                                    if (b.match(/^>/m)) {
                                        var d = [];
                                        if (b[0] != ">") {
                                            for (var e = b.split(/\n/), f = []; e.length && e[0][0] !=
                                            ">";) f.push(e.shift());
                                            b = e.join("\n");
                                            d.push.apply(d, this.processBlock(f.join("\n"), []))
                                        }
                                        for (; c.length && c[0][0] == ">";) e = c.shift(),
                                        b += b.trailing + e,
                                        b.trailing = e.trailing;
                                        e = b.replace(/^> ?/gm, "");
                                        d.push(this.toTree(e, ["blockquote"]));
                                        return d
                                    }
                                },
                                referenceDefn: function(b, c) {
                                    var d = /^\s*\[(.*?)\]:\s*(\S+)(?:\s+(?:(['"])(.*?)\3|\((.*?)\)))?\n?/;
                                    if (b.match(d)) {
                                        f(this.tree) || this.tree.splice(1, 0, {});
                                        var e = f(this.tree);
                                        if (e.references === void 0) e.references = {};
                                        d = this.loop_re_over_block(d, b,
                                        function(b) {
                                            b[2] &&
                                            b[2][0] == "<" && b[2][b[2].length - 1] == ">" && (b[2] = b[2].substring(1, b[2].length - 1));
                                            var c = e.references[b[1].toLowerCase()] = {
                                                href: b[2]
                                            };
                                            if (b[4] !== void 0) c.title = b[4];
                                            else if (b[5] !== void 0) c.title = b[5]
                                        });
                                        d.length && c.unshift(q(d, b.trailing));
                                        return []
                                    }
                                },
                                para: function(b) {
                                    return [["para"].concat(this.processInline(b))]
                                }
                            }
                        };
                        o.dialects.Gruber.inline = {
                            __call__: function(b, c) {
                                function d(b) {
                                    typeof b == "string" && typeof e[e.length - 1] == "string" ? e[e.length - 1] += b: e.push(b)
                                }
                                for (var e = [], f, g = RegExp("([\\s\\S]*?)(" + (c.source ||
                                c) + ")", "g"), l = 0; (f = g.exec(b)) != null;) {
                                    f[1] ? d(f[1]) : f[1] = {
                                        length: 0
                                    };
                                    var m;
                                    f[2] in this.dialect.inline && (m = this.dialect.inline[f[2]].call(this, b.substr(f.index + f[1].length), f, e));
                                    m = m || [f[2].length, f[2]];
                                    l = m.shift();
                                    g.lastIndex += l - f[2].length;
                                    m.forEach(d);
                                    l = g.lastIndex
                                }
                                b.length > l && d(b.substr(l));
                                return e
                            },
                            "\\": function(b) {
                                return b.match(/^\\[\\`\*_{}\[\]()#\+.!\-]/) ? [2, b[1]] : [1, "\\"]
                            },
                            "![": function(b) {
                                var c = b.match(/^!\[(.*?)\][ \t]*\([ \t]*(\S*)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);
                                if (c) {
                                    c[2] && c[2][0] ==
                                    "<" && c[2][c[2].length - 1] == ">" && (c[2] = c[2].substring(1, c[2].length - 1));
                                    this.dialect.inline.__call__.call(this, c[2], /\\/);
                                    b = {
                                        alt: c[1],
                                        href: c[2] || ""
                                    };
                                    if (c[4] !== void 0) b.title = c[4];
                                    return [c[0].length, ["img", b]]
                                }
                                return (c = b.match(/^!\[(.*?)\][ \t]*\[(.*?)\]/)) ? [c[0].length, ["img_ref", {
                                    alt: c[1],
                                    ref: c[2].toLowerCase(),
                                    text: c[0]
                                }]] : [2, "!["]
                            },
                            "[": function(b) {
                                var c = b.match(/^\[([\s\S]*?)\][ \t]*\([ \t]*(\S+)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);
                                if (c) {
                                    c[2] && c[2][0] == "<" && c[2][c[2].length - 1] == ">" && (c[2] = c[2].substring(1,
                                    c[2].length - 1));
                                    c[2] = this.dialect.inline.__call__.call(this, c[2], /\\/)[0];
                                    b = {
                                        href: c[2] || ""
                                    };
                                    if (c[4] !== void 0) b.title = c[4];
                                    b = ["link", b];
                                    Array.prototype.push.apply(b, this.processInline(c[1]));
                                    return [c[0].length, b]
                                }
                                if (c = b.match(/^\[([\s\S]*?)\](?: ?\[(.*?)\])?/)) {
                                    if (c[2] === void 0 || c[2] === "") c[2] = c[1];
                                    b = {
                                        ref: c[2].toLowerCase(),
                                        original: c[0]
                                    };
                                    b = ["link_ref", b];
                                    Array.prototype.push.apply(b, this.processInline(c[1]));
                                    return [c[0].length, b]
                                }
                                return [1, "["]
                            },
                            "<": function(b) {
                                var c;
                                return (c = b.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\.[a-zA-Z]+))>/)) !=
                                null ? c[3] ? [c[0].length, ["link", {
                                    href: "mailto:" + c[3]
                                },
                                c[3]]] : c[2] == "mailto" ? [c[0].length, ["link", {
                                    href: c[1]
                                },
                                c[1].substr(7)]] : [c[0].length, ["link", {
                                    href: c[1]
                                },
                                c[1]]] : [1, "<"]
                            },
                            "`": function(b) {
                                return (b = b.match(/(`+)(([\s\S]*?)\1)/)) && b[2] ? [b[1].length + b[2].length, ["inlinecode", b[3]]] : [1, "`"]
                            },
                            "  \n": function() {
                                return [3, ["linebreak"]]
                            }
                        };
                        o.dialects.Gruber.inline["**"] = e("strong", "**");
                        o.dialects.Gruber.inline.__ = e("strong", "__");
                        o.dialects.Gruber.inline["*"] = e("em", "*");
                        o.dialects.Gruber.inline._ = e("em",
                        "_");
                        o.buildBlockOrder = function(b) {
                            var c = [],
                            d;
                            for (d in b) d == "__order__" || d == "__call__" || c.push(d);
                            b.__order__ = c
                        };
                        o.buildInlinePatterns = function(b) {
                            var c = [],
                            d;
                            for (d in b) if (d != "__call__") {
                                var e = d.replace(/([\\.*+?|()\[\]{}])/g, "\\$1").replace(/\n/, "\\n");
                                c.push(d.length == 1 ? e: "(?:" + e + ")")
                            }
                            var c = c.join("|"),
                            f = b.__call__;
                            b.__call__ = function(b, d) {
                                return d != void 0 ? f.call(this, b, d) : f.call(this, b, c)
                            }
                        };
                        o.subclassDialect = function(b) {
                            function c() {}
                            function d() {}
                            c.prototype = b.block;
                            d.prototype = b.inline;
                            return {
                                block: new c,
                                inline: new d
                            }
                        };
                        o.buildBlockOrder(o.dialects.Gruber.block);
                        o.buildInlinePatterns(o.dialects.Gruber.inline);
                        o.dialects.Maruku = o.subclassDialect(o.dialects.Gruber);
                        o.dialects.Maruku.block.document_meta = function(b) {
                            if (! (b.lineNumber > 1) && b.match(/^(?:\w+:.*\n)*\w+:.*$/)) {
                                f(this.tree) || this.tree.splice(1, 0, {});
                                b = b.split(/\n/);
                                for (p in b) {
                                    var c = b[p].match(/(\w+):\s*(.*)$/);
                                    this.tree[1][c[1].toLowerCase()] = c[2]
                                }
                                return []
                            }
                        };
                        o.dialects.Maruku.block.block_meta = function(b) {
                            var c = b.match(/(^|\n) {0,3}\{:\s*((?:\\\}|[^\}])*)\s*\}$/);
                            if (c) {
                                var d = g(c[2]);
                                if (c[1] === "") {
                                    c = this.tree[this.tree.length - 1];
                                    b = f(c);
                                    if (typeof c === "string") return;
                                    b || (b = {},
                                    c.splice(1, 0, b));
                                    for (a in d) b[a] = d[a];
                                    return []
                                }
                                c = this.processBlock(b.replace(/\n.*$/, ""), []);
                                b = f(c[0]);
                                b || (b = {},
                                c[0].splice(1, 0, b));
                                for (a in d) b[a] = d[a];
                                return c
                            }
                        };
                        o.dialects.Maruku.block.definition_list = function(b, c) {
                            var d = /^((?:[^\s:].*\n)+):\s+((?:\s\S)+)$/,
                            e = ["dl"];
                            if (b.match(d)) {
                                for (var f = [b]; c.length && d.exec(c[0]);) f.push(c.shift());
                                for (var g = 0; g < f.length; ++g) {
                                    for (var l = f[g].match(d),
                                    m = l[1].replace(/\n$/, "").split(/\n/), l = l[2].split(/\n:\s+/), n = 0; n < m.length; ++n) e.push(["dt", m[n]]);
                                    for (n = 0; n < l.length; ++n) e.push(["dd"].concat(this.processInline(l[n].replace(/(\n)\s+/, "$1"))))
                                }
                                return [e]
                            }
                        };
                        o.dialects.Maruku.inline["{:"] = function(b, c, d) {
                            if (!d.length) return [2, "{:"];
                            c = d[d.length - 1];
                            if (typeof c === "string") return [2, "{:"];
                            b = b.match(/^\{:\s*((?:\\\}|[^\}])*)\s*\}/);
                            if (!b) return [2, "{:"];
                            var d = g(b[1]),
                            e = f(c);
                            e || (e = {},
                            c.splice(1, 0, e));
                            for (var l in d) e[l] = d[l];
                            return [b[0].length, ""]
                        };
                        o.buildBlockOrder(o.dialects.Maruku.block);
                        o.buildInlinePatterns(o.dialects.Maruku.inline);
                        var w = d.isArray = function(b) {
                            return b instanceof Array || typeof b === "array" || Array.isArray(b)
                        };
                        d.renderJsonML = function(b, c) {
                            c = c || {};
                            c.root = c.root || !1;
                            var d = [];
                            if (c.root) d.push(n(b));
                            else {
                                b.shift();
                                for (b.length && typeof b[0] === "object" && !(b[0] instanceof Array) && b.shift(); b.length;) d.push(n(b.shift()))
                            }
                            return d.join("\n\n")
                        }
                    })(Va)
                } (function() {
                    var d,
                    c,
                    e,
                    f,
                    g,
                    m,
                    n,
                    b,
                    l,
                    o,
                    F,
                    B,
                    H,
                    h,
                    u,
                    C,
                    E,
                    D,
                    M,
                    s,
                    G,
                    sa,
                    ga,
                    K,
                    I,
                    X,
                    pa,
                    x,
                    ca,
                    Q,
                    i,
                    ia,
                    na,
                    ha,
                    za,
                    aa,
                    ba,
                    da,
                    Z,
                    J,
                    O,
                    V,
                    ea,
                    ra,
                    Qa,
                    Ga,
                    Za,
                    Va,
                    Fb,
                    Mb,
                    Nb,
                    mb,
                    $a,
                    Ia,
                    Ca,
                    xa,
                    uc,
                    ja,
                    W,
                    fa,
                    Wa,
                    Ja,
                    nb,
                    Ob,
                    Pb,
                    ab,
                    ob,
                    pb,
                    Qb,
                    qb,
                    Ra,
                    bb,
                    Sa,
                    jb,
                    la,
                    cb,
                    rb,
                    sb,
                    Da,
                    Rb,
                    tb,
                    Sb,
                    ub,
                    Gb,
                    Hb,
                    Aa,
                    db,
                    vb,
                    Tb,
                    Ib,
                    U,
                    Ub,
                    Vb,
                    Wb,
                    eb,
                    Ta,
                    wb,
                    xb,
                    yb,
                    kb,
                    ya,
                    zb,
                    Ab,
                    Xa,
                    Bb,
                    ta,
                    Ea,
                    vc,
                    Db,
                    Oa,
                    gb,
                    Eb,
                    va,
                    Pa,
                    qa,
                    wa,
                    Xb,
                    Yb,
                    Ka,
                    Ya,
                    La,
                    ma,
                    Zb,
                    hb,
                    j,
                    ka,
                    Fa,
                    T,
                    $b,
                    ib,
                    gc,
                    hc,
                    ic,
                    jc,
                    kc,
                    lc,
                    mc,
                    ac,
                    oc,
                    pc,
                    qc,
                    Jb,
                    L,
                    Ma,
                    Kb,
                    bc,
                    rc,
                    Ba,
                    cc,
                    dc,
                    Lb,
                    sc,
                    tc,
                    ec,
                    z,
                    lb,
                    S,
                    R,
                    fc,
                    Y,
                    k = function(b, c) {
                        return function() {
                            return b.apply(c, arguments)
                        }
                    },
                    xc = Object.prototype.hasOwnProperty,
                    y = function(b, c) {
                        function d() {
                            this.constructor = b
                        }
                        for (var e in c) xc.call(c,
                        e) && (b[e] = c[e]);
                        d.prototype = c.prototype;
                        b.prototype = new d;
                        b.__super__ = c.prototype;
                        return b
                    },
                    Ha = Array.prototype.indexOf ||
                    function(b) {
                        for (var c = 0, d = this.length; c < d; c++) if (this[c] === b) return c;
                        return - 1
                    },
                    Cb = Array.prototype.slice;
                    if (A("sharedUtil") && (dc = {
                        lowerCaseFirstChar: function(b) {
                            return b[0].toLowerCase() + b.substr(1)
                        },
                        capitalize: function(b) {
                            return _.isString(b) && !_.isEmpty(b) ? b[0].toUpperCase() + b.substr(1) : b
                        },
                        traverse: function(b, c) {
                            var d,
                            e,
                            f;
                            if (_.isEmpty(c) || !b) return b;
                            if (_.isArray(c)) {
                                e = 0;
                                for (f =
                                c.length; e < f; e++) if (d = c[e], b = b[d], !b) break;
                                return b
                            } else return b[c]
                        },
                        isSimpleObject: function(b) {
                            return b && !_.isArray(b) && !_.isDate(b) && !b.prototype && typeof b === "object"
                        },
                        escapeForRegex: function(b) {
                            return b.replace(/[-[\]{}()*+?.,\\\/^$|#\s]/g, "\\$&")
                        },
                        hasProtocol: function(b) {
                            return /^[a-z]+:/i.test(b)
                        },
                        makeSlug: function(b) {
                            var c;
                            b && (c = b.replace(/[^a-z0-9]+/ig, "-").replace(/^-|-$/g, "").toLowerCase());
                            return c || "-"
                        }
                    },
                    typeof module !== "undefined" && module !== null)) module.exports = dc;
                    if (A("versions") && (lb =
                    {
                        parseVersion: function(b) {
                            var c,
                            d,
                            e,
                            f;
                            c = b.split(".");
                            if (c.length > 0) {
                                f = [];
                                d = 0;
                                for (e = c.length; d < e; d++) b = c[d],
                                f.push(parseInt(b) || 0);
                                return f
                            }
                            return [0]
                        },
                        compareVersions: function(b, c) {
                            var d,
                            e,
                            f,
                            g,
                            h;
                            h = _.zip(b, c);
                            f = 0;
                            for (g = h.length; f < g; f++) {
                                e = h[f];
                                d = e[0];
                                e = e[1];
                                d == null && (d = 0);
                                e == null && (e = 0);
                                if (d > e) return 1;
                                if (e > d) return - 1
                            }
                            return 0
                        },
                        compareStringVersions: function(b, c) {
                            var d;
                            d = _.map([b, c], lb.parseVersion);
                            return lb.compareVersions(d[0], d[1])
                        }
                    },
                    typeof module !== "undefined" && module !== null)) module.exports = lb;
                    if (A("entityListGenerator") && (Wa = function() {
                        function b(c) {
                            c == null && (c = {});
                            this.orderEntityList = k(this.orderEntityList, this);
                            this.attachmentPreviewEntity = k(this.attachmentPreviewEntity, this);
                            this.attachmentEntity = k(this.attachmentEntity, this);
                            this.labelEntity = k(this.labelEntity, this);
                            this.commentEntity = k(this.commentEntity, this);
                            this.checkItemEntity = k(this.checkItemEntity, this);
                            this.checklistEntity = k(this.checklistEntity, this);
                            this.listEntity = k(this.listEntity, this);
                            this.organizationEntity = k(this.organizationEntity,
                            this);
                            this.boardEntity = k(this.boardEntity, this);
                            this.cardEntity = k(this.cardEntity, this);
                            this.textEntity = k(this.textEntity, this);
                            this.memberEntity = k(this.memberEntity, this);
                            this.getOrganizationUrl = k(this.getOrganizationUrl, this);
                            this.getBoardUrl = k(this.getBoardUrl, this);
                            this.getCardUrl = k(this.getCardUrl, this);
                            this.makeFullUrl = k(this.makeFullUrl, this);
                            this.fullUrls = c.fullUrls;
                            this.domain = c.domain
                        }
                        var c;
                        b.prototype.getId = function(b) {
                            var c;
                            return String((c = b.id) != null ? c: b._id)
                        };
                        b.prototype.makeFullUrl =
                        function(b) {
                            return this.fullUrls ? "" + this.domain + "/" + b: "/" + b
                        };
                        c = function(b) {
                            return b != null && b.toJSON ? b.toJSON() : b
                        };
                        b.prototype.getCardUrl = function(b, d, e) {
                            b = c(b);
                            d = c(d);
                            return (e = c(e)) ? this.makeFullUrl("card/" + e.username + "/" + z.makeSlug(d.name) + "/" + this.getId(b) + "/" + this.getId(d)) : this.makeFullUrl("card/board/" + z.makeSlug(d.name) + "/" + this.getId(b) + "/" + this.getId(d))
                        };
                        b.prototype.getBoardUrl = function(b) {
                            b = c(b);
                            return this.makeFullUrl("board/" + z.makeSlug(b.name) + "/" + this.getId(b))
                        };
                        b.prototype.getOrganizationUrl =
                        function(b) {
                            return this.makeFullUrl("org/" + this.getId(b))
                        };
                        b.prototype.getMember = function() {
                            throw "not implemented";
                        };
                        b.prototype.memberEntity = function(b) {
                            var c,
                            d;
                            c = (d = this.getMember(b)) != null ? d.toJSON() : void 0;
                            return ! c ? {
                                type: "member",
                                _id: "" + this.idAction + "_" + b
                            }: {
                                type: "member",
                                _id: "" + this.idAction + "_" + c._id,
                                id: this.getId(c),
                                gravatar: c.gravatar,
                                initials: c.initials,
                                fullName: c.fullName,
                                username: c.username
                            }
                        };
                        b.prototype.textEntity = function(b, c, d) {
                            d == null && (d = !1);
                            b = {
                                type: "text",
                                _id: "" + this.idAction + "_" +
                                b,
                                text: b
                            };
                            if (d) b.hideIfContext = !0,
                            b.idContext = c;
                            return b
                        };
                        b.prototype.cardEntity = function(b, c, d) {
                            d == null && (d = !1);
                            d = _.extend({
                                type: "card",
                                hideIfContext: d,
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b);
                            return c ? _.extend(d, {
                                url: this.getCardUrl(c, b)
                            }) : d
                        };
                        b.prototype.boardEntity = function(b) {
                            return _.extend({
                                type: "board",
                                url: this.getBoardUrl(b),
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b)
                        };
                        b.prototype.organizationEntity = function(b) {
                            return _.extend({
                                type: "organization",
                                url: this.getOrganizationUrl(b),
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b)
                        };
                        b.prototype.listEntity = function(b, c) {
                            var d;
                            d = "" + this.idAction + "_" + b.id;
                            c && (d += "_" + c);
                            return _.extend({
                                type: "list",
                                _id: d
                            },
                            b)
                        };
                        b.prototype.checklistEntity = function(b) {
                            return _.extend({
                                type: "checklist",
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b)
                        };
                        b.prototype.checkItemEntity = function(b) {
                            return _.extend({
                                type: "checkItem",
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b)
                        };
                        b.prototype.commentEntity = function(b, c) {
                            return {
                                type: "comment",
                                _id: "" + this.idAction + "_comment",
                                text: b,
                                embedly: c
                            }
                        };
                        b.prototype.labelEntity = function(b, c) {
                            return {
                                type: "label",
                                _id: "" + this.idAction + "_label",
                                color: b,
                                text: c
                            }
                        };
                        b.prototype.attachmentEntity = function(b) {
                            b = _.extend({
                                type: "attachment",
                                _id: "" + this.idAction + "_" + b.id
                            },
                            b);
                            b.link = b.url && !b.isDeleted;
                            return b
                        };
                        b.prototype.attachmentPreviewEntity = function(b) {
                            var c,
                            b = _.extend({
                                type: "attachmentPreview",
                                _id: "" + this.idAction + "_" + b.id + "_preview"
                            },
                            b);
                            c = b.url && !b.isDeleted;
                            b.isImage = c && /\.(png|gif|jpe?g|bmp)/i.test(b.url);
                            b.canPreview = c && (b.isImage || /\.txt/i.test(b.url));
                            return b
                        };
                        b.prototype.orderEntityList = function(b) {
                            var c,
                            d,
                            t,
                            e;
                            t = c = 0;
                            for (e = b.length; t < e; t++) d = b[t],
                            d.order = c++;
                            return b
                        };
                        return b
                    } (), typeof module !== "undefined" && module !== null)) module.exports.EntityListGenerator = Wa;
                    if (A("sharedActionList") && (Ba = function() {
                        function b() {
                            this.getEntityLists = k(this.getEntityLists, this);
                            this.getMember = k(this.getMember, this);
                            this.getEntityList = k(this.getEntityList, this);
                            this.getSingleEntityList = k(this.getSingleEntityList, this);
                            this.getBoardInvitationEntityList = k(this.getBoardInvitationEntityList, this);
                            this.getOrganizationInvitationEntityList =
                            k(this.getOrganizationInvitationEntityList, this);
                            this.getOrganizationEntityList = k(this.getOrganizationEntityList, this);
                            this.getCheckItemEntityList = k(this.getCheckItemEntityList, this);
                            this.getChecklistEntityList = k(this.getChecklistEntityList, this);
                            this.getListEntityList = k(this.getListEntityList, this);
                            this.getMemberEntityList = k(this.getMemberEntityList, this);
                            this.getCardEntityList = k(this.getCardEntityList, this);
                            this.getBoardEntityList = k(this.getBoardEntityList, this);
                            b.__super__.constructor.apply(this,
                            arguments)
                        }
                        var c,
                        d,
                        e,
                        f,
                        g,
                        h;
                        y(b, Wa);
                        f = k(function(b) {
                            return /Card$/.test(b.type)
                        },
                        b);
                        e = k(function(b) {
                            return b.idMemberCreator
                        },
                        b);
                        c = k(function(b, c) {
                            var d,
                            t,
                            v,
                            P,
                            g;
                            d = b.toJSON();
                            t = c.toJSON();
                            if (e(d) !== e(t)) return ! 1;
                            if (!f(d) || !f(t)) return ! 1;
                            if (!d.data.card || !t.data.card) return ! 1;
                            if (d.data.card.id !== t.data.card.id) return ! 1;
                            v = ["commentCard"];
                            return (P = d.type, Ha.call(v, P) >= 0) || (g = t.type, Ha.call(v, g) >= 0) ? !1: !0
                        },
                        b);
                        d = k(function(b, c) {
                            var d,
                            t;
                            d = b.toJSON();
                            t = c.toJSON();
                            return Math.abs(Date.parse(d.date) - Date.parse(t.date)) >
                            9E5 ? !0: f(d) && f(t) && e(d) !== e(t) ? !0: !1
                        },
                        b);
                        g = k(function(b) {
                            var c,
                            d,
                            t,
                            b = b.toJSON();
                            return ((c = b.type) === "updateCard" || c === "updateList") && (d = b.data.old) != null && d.pos ? !0: (t = b.type) === "createChecklist" || t === "createBoardPreference" || t === "addBoardsPinnedToMember" || t === "removeBoardsPinnedFromMember" || t === "deleteCheckItem" || t === "updateCheckItem" || t === "voteOnCard" ? !0: !1
                        },
                        b);
                        h = k(function(b) {
                            var c,
                            d,
                            t,
                            e,
                            v,
                            f,
                            P,
                            g,
                            oa,
                            h;
                            if (b.length === 1) return b;
                            t = {};
                            g = function(b, c) {
                                var d,
                                t,
                                e,
                                v,
                                f,
                                P;
                                t = ["name", "desc", "pos", "closed"];
                                e = 0;
                                for (v = t.length; e < v; e++) if (d = t[e], ((f = b.old) != null ? f[d] : void 0) != null && ((P = c.old) != null ? P[d] : void 0) != null) return ! 0;
                                return b.listBefore != null && c.listBefore != null
                            };
                            f = 0;
                            for (oa = b.length; f < oa; f++) {
                                c = b[f];
                                P = 0;
                                for (h = b.length; P < h; P++) if (d = b[P], f !== P && !t[c.id] && !t[d.id]) {
                                    e = c.toJSON();
                                    v = d.toJSON();
                                    _.extend(e, e.data);
                                    _.extend(v, v.data);
                                    if (e.type === "addMemberToCard" && v.type === "removeMemberFromCard" && e.idMember === v.idMember || e.type === "voteOnCard" && v.type === "voteOnCard" && e.voted !== v.voted || e.type === "addLabelToCard" &&
                                    v.type === "removeLabelFromCard" && e.value === v.value || e.type === "addAttachmentToCard" && v.type === "deleteAttachmentFromCard" && e.attachment.id === v.attachment.id || e.type === "addChecklistToCard" && v.type === "removeChecklistFromCard" && e.value === v.value || e.type === "updateCheckItemStateOnCard" && v.type === "updateCheckItemStateOnCard" && e.checkItem.name === v.checkItem.name && e.checkItem.state !== v.checkItem.state) t[c.id] = !0,
                                    t[d.id] = !0;
                                    f < P && e.type === "updateCard" && v.type === "updateCard" && g(e, v) && (t[d.id] = !0)
                                }
                            }
                            return _.reject(b,
                            function(b) {
                                return t[b.id]
                            })
                        },
                        b);
                        b.prototype.getBoardEntityList = function(b, c) {
                            var d,
                            t,
                            e,
                            v,
                            f,
                            P,
                            g,
                            oa,
                            h,
                            i,
                            j;
                            switch (b.type) {
                            case "createBoard":
                                return [this.textEntity("created"), this.boardEntity(b.board)];
                            case "updateBoard":
                                if (((d = b.old) != null ? d.name: void 0) != null) return [this.textEntity("renamed"), this.boardEntity(b.board), this.textEntity("(from " + b.old.name + ")")];
                                else if (((v = b.old) != null ? v.closed: void 0) != null) return [this.textEntity(b.board.closed ? "closed": "re-opened"), this.boardEntity(b.board)];
                                else if (((f =
                                b.old) != null ? f.prefs: void 0) != null) if (d = k(function(c, d, t, e) {
                                    var v;
                                    v = b.board.prefs[c];
                                    return v === "none" ? [this.textEntity(t), this.boardEntity(b.board)] : (c = function() {
                                        switch (v) {
                                        case "members":
                                        case "private":
                                            return "its members";
                                        case "org":
                                            return "members of its organization";
                                        case "public":
                                            return "the public";
                                        case "owners":
                                            return "its owners"
                                        }
                                    } (), [this.textEntity(d), this.boardEntity(b.board), this.textEntity("" + e + " to " + c)])
                                },
                                this), ((P = b.old) != null ? (g = P.prefs) != null ? g.voting: void 0: void 0) != null) return d("voting",
                                "made voting on", "disabled voting on", "available");
                                else if (((oa = b.old) != null ? (h = oa.prefs) != null ? h.comments: void 0: void 0) != null) return d("comments", "made commenting on", "disabled commenting on", "available");
                                else if (((i = b.old) != null ? (j = i.prefs) != null ? j.invitations: void 0: void 0) != null) return d("invitations", "made inviting on", "disabled inviting on", "available");
                                else if (((t = b.old) != null ? (e = t.prefs) != null ? e.permissionLevel: void 0: void 0) != null) return d("permissionLevel", "made", "hid", "visible");
                                break;
                            case "addMemberToBoard":
                                return [this.textEntity("joined"), this.boardEntity(b.board)];
                            case "removeMemberFromBoard":
                                return b.idMember === c ? [this.textEntity("left"), this.boardEntity(b.board)] : [this.textEntity("removed"), this.memberEntity(b.idMember), this.textEntity("from"), this.boardEntity(b.board)];
                            case "addAdminToBoard":
                                return [this.textEntity("made"), this.memberEntity(b.idMember), this.textEntity("an owner of"), this.boardEntity(b.board)];
                            case "removeAdminFromBoard":
                                return b.idMember === c ? [this.textEntity("gave up ownership of"),
                                this.boardEntity(b.board)] : [this.textEntity("made"), this.memberEntity(b.idMember), this.textEntity("a normal user on"), this.boardEntity(b.board)];
                            case "addToOrganizationBoard":
                                return [this.textEntity("added"), this.boardEntity(b.board), this.textEntity("to"), this.organizationEntity(b.organization)]
                            }
                        };
                        b.prototype.getCardEntityList = function(b, c, d) {
                            var t,
                            e,
                            v,
                            f,
                            P,
                            g;
                            t = (e = d.grouped) != null ? e: !1;
                            if (d.includeBoard) return _.flatten([this.getCardEntityList(b, c, _.extend({},
                            d, {
                                includeBoard: !1
                            })), this.textEntity("on"),
                            this.boardEntity(b.board)]);
                            switch (b.type) {
                            case "createCard":
                                return [this.textEntity("added"), this.cardEntity(b.card, b.board), this.textEntity("to"), this.listEntity(b.list)];
                            case "updateCard":
                                if (b.listBefore != null) return t ? [this.textEntity("moved from"), this.listEntity(b.listBefore, "old"), this.textEntity("to"), this.listEntity(b.listAfter)] : [this.textEntity("moved"), this.cardEntity(b.card, b.board), this.textEntity("from"), this.listEntity(b.listBefore, "old"), this.textEntity("to"), this.listEntity(b.listAfter)];
                                else if (((v = b.old) != null ? v.name: void 0) != null) return t ? [this.textEntity("changed the name (from " + b.old.name + ")")] : [this.textEntity("renamed"), this.cardEntity(b.card, b.board), this.textEntity("(from " + b.old.name + ")")];
                                else if (((f = b.old) != null ? f.desc: void 0) != null) return t ? [this.textEntity("changed description")] : [this.textEntity("changed description of"), this.cardEntity(b.card, b.board)];
                                else if (((P = b.old) != null ? P.pos: void 0) != null) return c = b.old.pos < b.card.pos,
                                t ? [this.textEntity("moved " + (c ? "higher":
                                "lower") + " in"), this.listEntity(b.list)] : [this.textEntity("moved"), this.cardEntity(b.card, b.board), this.textEntity((c ? "higher": "lower") + " in"), this.listEntity(b.list)];
                                else if (((g = b.old) != null ? g.closed: void 0) != null) return t ? [this.textEntity(b.card.closed ? "archived": "sent to the board")] : (t = [this.textEntity(b.card.closed ? "archived": "sent"), this.cardEntity(b.card, b.board)], b.card.closed || t.push(this.textEntity("to the board")), t);
                                break;
                            case "commentCard":
                                return t ? [this.commentEntity(b.text, b.embedly)] :
                                [this.textEntity("on", b.card.id, !0), this.cardEntity(b.card, b.board, !0), this.commentEntity(b.text, b.embedly)];
                            case "addMemberToCard":
                                return b.idMember === c ? t ? [this.textEntity("joined")] : [this.textEntity("joined"), this.cardEntity(b.card, b.board)] : t ? [this.textEntity("added"), this.memberEntity(b.idMember)] : [this.textEntity("added"), this.memberEntity(b.idMember), this.textEntity("to"), this.cardEntity(b.card, b.board)];
                            case "removeMemberFromCard":
                                return b.idMember === c ? t ? [this.textEntity("left")] : [this.textEntity("left"),
                                this.cardEntity(b.card, b.board)] : t ? [this.textEntity("removed"), this.memberEntity(b.idMember)] : [this.textEntity("removed"), this.memberEntity(b.idMember), this.textEntity("from"), this.cardEntity(b.card, b.board)];
                            case "addChecklistToCard":
                                return t ? [this.textEntity("added"), this.checklistEntity(b.checklist)] : [this.textEntity("added"), this.checklistEntity(b.checklist), this.textEntity("to"), this.cardEntity(b.card, b.board)];
                            case "removeChecklistFromCard":
                                return t ? [this.textEntity("removed"), this.checklistEntity(b.checklist)] :
                                [this.textEntity("removed"), this.checklistEntity(b.checklist), this.textEntity("from"), this.cardEntity(b.card, b.board)];
                            case "voteOnCard":
                                return [this.textEntity(b.voted ? "voted for": "removed vote for"), this.cardEntity(b.card, b.board)];
                            case "addLabelToCard":
                                return t ? [this.textEntity("added"), this.labelEntity(b.value, b.text)] : [this.textEntity("added the"), this.labelEntity(b.value, b.text), this.textEntity("label to"), this.cardEntity(b.card, b.board)];
                            case "removeLabelFromCard":
                                return t ? [this.textEntity("removed"),
                                this.labelEntity(b.value, b.text)] : [this.textEntity("removed the"), this.labelEntity(b.value, b.text), this.textEntity("label from"), this.cardEntity(b.card, b.board)];
                            case "updateCheckItemStateOnCard":
                                return c = b.checkItem.state === "complete",
                                t ? (t = [this.textEntity(c ? "completed": "marked"), this.checkItemEntity(b.checkItem)], c || t.push(this.textEntity("incomplete")), t) : [this.textEntity(c ? "completed": "marked"), this.checkItemEntity(b.checkItem), this.textEntity(c ? "on": "incomplete on"), this.cardEntity(b.card, b.board)];
                            case "addAttachmentToCard":
                                return t ? [this.textEntity("attached"), this.attachmentEntity(b.attachment), this.attachmentPreviewEntity(b.attachment)] : [this.textEntity("attached"), this.attachmentEntity(b.attachment), this.textEntity("to"), this.cardEntity(b.card, b.board), this.attachmentPreviewEntity(b.attachment)];
                            case "deleteAttachmentFromCard":
                                return t ? [this.textEntity("deleted"), this.attachmentEntity(b.attachment)] : [this.textEntity("deleted the"), this.attachmentEntity(b.attachment), this.textEntity("attachment from"),
                                this.cardEntity(b.card, b.board)]
                            }
                        };
                        b.prototype.getMemberEntityList = function(b) {
                            var c,
                            d,
                            t,
                            e;
                            switch (b.type) {
                            case "updateMember":
                                if (((c = b.old) != null ? c.bio: void 0) != null) return [this.textEntity("updated their bio")];
                                else if (((d = b.old) != null ? d.username: void 0) != null) return [this.textEntity("updated their username")];
                                else if (((t = b.old) != null ? t.initials: void 0) != null) return [this.textEntity("updated their initials")];
                                else if (((e = b.old) != null ? e.fullName: void 0) != null) return [this.textEntity("updated their display name")]
                            }
                        };
                        b.prototype.getListEntityList = function(b, c, d) {
                            var t,
                            e,
                            v,
                            f;
                            if (d.includeBoard) return _.flatten([this.getListEntityList(b, c, _.extend({},
                            d, {
                                includeBoard: !1
                            })), this.textEntity("on"), this.boardEntity(b.board)]);
                            switch (b.type) {
                            case "createList":
                                return [this.textEntity("added"), this.listEntity(b.list), this.textEntity("to"), this.boardEntity(b.board)];
                            case "updateList":
                                if (((e = b.old) != null ? e.name: void 0) != null) return [this.textEntity("renamed"), this.listEntity(b.list), this.textEntity("(from " + b.old.name + ")")];
                                else if (((v = b.old) != null ? v.pos: void 0) != null) return c = ((t = b.old) != null ? t.pos: void 0) > b.list.pos,
                                [this.textEntity("moved"), this.listEntity(b.list), this.textEntity((c ? "left": "right") + " on"), this.boardEntity(b.board)];
                                else if (((f = b.old) != null ? f.closed: void 0) != null) return t = [this.textEntity(b.list.closed ? "archived": "sent"), this.listEntity(b.list)],
                                b.list.closed || t.push(this.textEntity("to the board")),
                                t
                            }
                        };
                        b.prototype.getChecklistEntityList = function(b) {
                            var c;
                            switch (b.type) {
                            case "createChecklist":
                                return [this.textEntity("created"),
                                this.checklistEntity(b.checklist), this.textEntity("on"), this.cardEntity(b.card, b.board)];
                            case "updateChecklist":
                                if (((c = b.old) != null ? c.name: void 0) != null) return [this.textEntity("renamed"), this.checklistEntity(b.checklist), this.textEntity("(from " + b.old.name + ")")]
                            }
                        };
                        b.prototype.getCheckItemEntityList = function(b) {
                            var c,
                            d;
                            switch (b.type) {
                            case "updateCheckItem":
                                if (((c = b.old) != null ? c.name: void 0) != null) return [this.textEntity("renamed"), this.checkItemEntity(b.checkItem), this.textEntity("(from " + b.old.name +
                                ")")];
                                else if (((d = b.old) != null ? d.pos: void 0) != null) return c = b.old.pos > b.checkItem.pos,
                                [this.textEntity("moved"), this.checkItemEntity(b.checkItem), this.textEntity((c ? "higher": "lower") + " in the checklist"), this.checklistEntity(b.checklist)];
                                break;
                            case "deleteCheckItem":
                                return [this.textEntity("deleted task"), this.checkItemEntity(b.checkItem), this.textEntity("on"), this.checklistEntity(b.checklist)];
                            case "convertToCardFromCheckItem":
                                return [this.textEntity("converted"), this.cardEntity(b.card, b.board), this.textEntity("from a checklist item on"),
                                this.cardEntity(b.cardSource, b.board)]
                            }
                        };
                        b.prototype.getOrganizationEntityList = function(b, c) {
                            var d,
                            t,
                            e,
                            v;
                            switch (b.type) {
                            case "createOrganization":
                                return [this.textEntity("created"), this.organizationEntity(b.organization)];
                            case "updateOrganization":
                                if (((d = b.old) != null ? d.description: void 0) != null) return [this.textEntity("changed description of"), this.organizationEntity(b.organization)];
                                else if (((t = b.old) != null ? t.name: void 0) != null) return [this.textEntity("changed name of"), this.organizationEntity(b.organization)];
                                else if (((e = b.old) != null ? e.displayName: void 0) != null) return [this.textEntity("changed display name of"), this.organizationEntity(b.organization)];
                                else if (((v = b.old) != null ? v.website: void 0) != null) return [this.textEntity("changed website of"), this.organizationEntity(b.organization)];
                                break;
                            case "addMemberToOrganization":
                                return [this.textEntity("joined"), this.organizationEntity(b.organization)];
                            case "removeMemberFromOrganization":
                                return b.idMember === c ? [this.textEntity("left"), this.organizationEntity(b.organization)] :
                                [this.textEntity("removed"), this.memberEntity(b.idMember), this.textEntity("from"), this.organizationEntity(b.organization)];
                            case "addAdminToOrganization":
                                return [this.textEntity("made"), this.memberEntity(b.idMember), this.textEntity("an owner of"), this.organizationEntity(b.organization)];
                            case "removeAdminFromOrganization":
                                return b.idMember === c ? [this.textEntity("gave up ownership of"), this.organizationEntity(b.organization)] : [this.textEntity("made"), this.memberEntity(b.idMember), this.textEntity("a normal user on"),
                                this.organizationEntity(b.organization)]
                            }
                        };
                        b.prototype.getOrganizationInvitationEntityList = function(b) {
                            switch (b.type) {
                            case "createOrganizationInvitation":
                                return [this.textEntity("created an invitation to"), this.organizationEntity(b.organization)];
                            case "deleteOrganizationInvitation":
                                return [this.textEntity("deleted an invitation to"), this.organizationEntity(b.organization)]
                            }
                        };
                        b.prototype.getBoardInvitationEntityList = function(b) {
                            switch (b.type) {
                            case "createBoardInvitation":
                                return [this.textEntity("created an invitation to"),
                                this.boardEntity(b.board)];
                            case "deleteBoardInvitation":
                                return [this.textEntity("deleted an invitation to"), this.boardEntity(b.board)]
                            }
                        };
                        b.prototype.getSingleEntityList = function(b, c) {
                            var d,
                            t,
                            e,
                            v;
                            d = b.toJSON();
                            _.extend(d, d.data);
                            v = this.memberEntity(d.idMemberCreator);
                            t = {
                                Board: "getBoardEntityList",
                                Member: "getMemberEntityList",
                                Card: "getCardEntityList",
                                List: "getListEntityList",
                                Checklist: "getChecklistEntityList",
                                CheckItem: "getCheckItemEntityList",
                                Organization: "getOrganizationEntityList",
                                OrganizationInvitation: "getOrganizationInvitationEntityList",
                                BoardInvitation: "getBoardInvitationEntityList"
                            };
                            e = k(function() {
                                var b,
                                e;
                                for (e in t) if (b = t[e], RegExp(e + "$").test(d.type)) return this[b](d, v.id, c)
                            },
                            this)();
                            e == null && (e = []);
                            e.unshift(v);
                            this.orderEntityList(e);
                            return e
                        };
                        b.prototype.getEntityList = function(b, c) {
                            var d,
                            t,
                            e,
                            v,
                            f,
                            P,
                            g;
                            this.idAction = this.getId(b[0]);
                            if (b.length === 1) return t = this.getSingleEntityList(b[0], c),
                            {
                                entities: t,
                                list: t
                            };
                            f = this.memberEntity(b[0].get("idMemberCreator"));
                            e = _.detect(b,
                            function(b) {
                                return b.get("type") === "createCard"
                            });
                            t = [];
                            P =
                            0;
                            for (g = b.length; P < g; P++) if (d = b[P], d.get("type") !== "createCard") v = d.toJSON(),
                            _.extend(v, v.data),
                            this.idAction = this.getId(d),
                            d = this.getCardEntityList(v, f.id, _.extend({},
                            c, {
                                grouped: !0
                            })),
                            this.orderEntityList(d),
                            t.push({
                                _id: this.idAction,
                                entities: d,
                                list: d
                            });
                            this.idAction = this.getId(b[0]);
                            d = [f];
                            e ? (v = e.toJSON(), _.extend(v, v.data), d = d.concat(this.getCardEntityList(v, f.id, _.extend({},
                            c, {
                                grouped: !0
                            }))), d.push(this.textEntity("and"))) : d.push(this.cardEntity(b[0].get("data").card, b[0].get("data").board, !0));
                            this.orderEntityList(d);
                            return {
                                entities: d,
                                list: d,
                                children: t
                            }
                        };
                        b.prototype.getMember = function() {
                            throw "NotImplemented";
                        };
                        b.prototype.getEntityLists = function(b, e) {
                            var v,
                            f,
                            oa,
                            i,
                            j,
                            ua,
                            k,
                            l,
                            m,
                            n,
                            o;
                            e == null && (e = {});
                            e = _.extend({},
                            {
                                compact: !0
                            },
                            e);
                            l = 0;
                            i = [];
                            b = _.reject(b,
                            function(b) {
                                return g(b)
                            });
                            oa = {};
                            j = 0;
                            for (m = b.length; j < m; j++) if (v = b[j], !oa[v.id]) {
                                if (e.limit != null && l >= e.limit) break;
                                f = [v];
                                k = n = j + 1;
                                for (o = b.length; n <= o ? k < o: k > o; n <= o ? k++:k--) {
                                    ua = b[k];
                                    if (d(v, ua)) break;
                                    c(v, ua) && (f.push(ua), oa[ua.id] = !0)
                                }
                                f = h(f);
                                _.isEmpty(f) ||
                                (ua = _.pluck(f, "id").join("_"), e.key && (ua = e.key + "_" + ua), v = f[0].get("date"), i.push(_.extend(this.getEntityList(f, e), {
                                    db_id: this.getId(f[0]),
                                    _id: ua,
                                    date: v
                                })), l++)
                            }
                            return i
                        };
                        return b
                    }.call(this), typeof module !== "undefined" && module !== null)) module.exports.SharedActionList = Ba;
                    if (A("sharedNotification") && (cc = function() {
                        function b() {
                            this.getEntityLists = k(this.getEntityLists, this);
                            this.getEntityList = k(this.getEntityList, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Wa);
                        b.prototype.getEntityList = function(b) {
                            var c,
                            d,
                            e;
                            this.idAction = this.getId(b);
                            _.isFunction(b.toJSON) && (b = b.toJSON());
                            c = b.data;
                            d = [this.memberEntity(b.idMemberCreator)];
                            /Card$/.test(b.type) ? (d.push(this.textEntity({
                                changeCard: "changed the card",
                                addedToCard: "added you to the card",
                                removedFromCard: "removed you from the card",
                                mentionedOnCard: "mentioned you on the card"
                            } [b.type])), d.push(this.cardEntity(c.card, c.board)), d.push(this.textEntity("on")), d.push(this.boardEntity(c.board))) : /Board$/.test(b.type) ? (d.push(this.textEntity({
                                removedFromBoard: "removed you from the board",
                                invitedToBoard: "invited you to the board",
                                addAdminToBoard: "made you a co-owner on the board",
                                closeBoard: "closed the board"
                            } [b.type])), d.push(this.boardEntity(c.board))) : /Organization$/.test(b.type) && (d.push(this.textEntity({
                                removedFromOrganization: "removed you from the organization",
                                invitedToOrganization: "invited you to the organization",
                                addAdminToOrganization: "made you an admin on the organization"
                            } [b.type])), d.push(this.organizationEntity(c.organization)));
                            c = 0;
                            for (e = d.length; c < e; c++) b = d[c],
                            b[b.type +
                            "Type"] = !0;
                            return this.orderEntityList(d)
                        };
                        b.prototype.getEntityLists = function(b) {
                            var c,
                            d,
                            e,
                            v;
                            v = [];
                            d = 0;
                            for (e = b.length; d < e; d++) c = b[d],
                            v.push(this.getEntityList(c));
                            return v
                        };
                        return b
                    } (), typeof module !== "undefined" && module !== null)) module.exports.SharedNotification = cc;
                    if (A("logger")) Ta = new(function() {
                        function b() {
                            this.log = k(this.log, this);
                            var c,
                            d;
                            this.storage = q.localStorage;
                            this.enabled = JSON.parse((c = (d = this.storage) != null ? d.loggers: void 0) != null ? c: "{}");
                            this.historyMap = {};
                            this.logHistory = !1
                        }
                        b.prototype.log =
                        function() {
                            var b,
                            c,
                            d;
                            d = arguments[0];
                            b = 2 <= arguments.length ? Cb.call(arguments, 1) : [];
                            if (typeof console !== "undefined" && console !== null && console.log && (b.length === 0 ? (c = !0, b.push(d), d = "all") : c = this.enabled.all || this.enabled[d], c && (b.length === 1 && _.isArray(b[0]) && (b = b[0]), b.unshift(d), $("body").is(".chrome") ? console.log(b) : console.dir(b)), this.logHistory)) {
                                if ((c = this.historyMap)[d] == null) c[d] = [];
                                this.historyMap[d].push(b)
                            }
                        };
                        b.prototype.enable = function(b) {
                            b == null && (b = "all");
                            this.enabled[b] = !0;
                            this.save()
                        };
                        b.prototype.disable =
                        function(b) {
                            b == null && (b = "all");
                            delete this.enabled[b];
                            this.save()
                        };
                        b.prototype.disableAll = function() {
                            this.enabled = {};
                            this.save()
                        };
                        b.prototype.enableAll = function() {
                            this.enabled.all = !0;
                            this.save()
                        };
                        b.prototype.history = function(b) {
                            var c,
                            d,
                            e;
                            if (b in this.historyMap) {
                                e = this.historyMap[b];
                                c = 0;
                                for (d = e.length; c < d; c++) b = e[c],
                                typeof console !== "undefined" && console !== null && typeof console.log === "function" && console.log(b)
                            }
                        };
                        b.prototype.list = function() {
                            typeof console !== "undefined" && console !== null && typeof console.log ===
                            "function" && console.log(_.keys(this.historyMap))
                        };
                        b.prototype.save = function() {
                            var b;
                            if ((b = this.storage) != null) b.loggers = JSON.stringify(this.enabled)
                        };
                        return b
                    } ()),
                    R = Ta.log,
                    q.Logger = Ta;
                    A("auth") && (h = new(function() {
                        function b() {
                            this.check()
                        }
                        var c,
                        d;
                        d = c = null;
                        b.prototype.isLoggedIn = function() {
                            return c !== "notLoggedIn"
                        };
                        b.prototype.myId = function() {
                            return c
                        };
                        b.prototype.myUsername = function() {
                            var b;
                            return (b = this.me()) != null ? b.get("username") : void 0
                        };
                        b.prototype.myToken = function() {
                            return d
                        };
                        b.prototype.me =
                        function() {
                            var b;
                            b = Models.Member.get(c);
                            b == null && !this.isLoggedIn() && (b = new ya({
                                id: "notLoggedIn",
                                notLoggedIn: !0
                            }), Models.Member.add(b));
                            return b
                        };
                        b.prototype.isMe = function(b) {
                            return b != null && b.id ? this.isMe(b.id) : b === c
                        };
                        b.prototype.check = function() {
                            d = $.cookie("token" + q.location.port) || "";
                            c = d.split("/")[0] || "notLoggedIn";
                            typeof rpc !== "undefined" && rpc !== null && rpc.handleLogin()
                        };
                        return b
                    } ()));
                    A("keys") && (Aa = 10, ub = 13, Tb = 32, Sb = 46, tb = 188, db = 190, Da = 65, Rb = Da + 2, Gb = Da + 5, Hb = Da + 11, vb = Da + 16, Ib = Da + 21, Sa = 49, jb = 50,
                    la = 51, cb = 52, rb = 53, sb = 54);
                    A("util") && (z = _.extend(dc, {
                        stopPropagation: function(b) {
                            return b.stopPropagation()
                        },
                        preventDefault: function(b) {
                            return b.preventDefault()
                        },
                        stop: function(b) {
                            z.stopPropagation(b);
                            return z.preventDefault(b)
                        },
                        securePage: function() {
                            return document.location.protocol === "https:"
                        },
                        formatCount: function(b, c, d) {
                            return ! b && !d ? "": (b !== 1 && (c += "s"), "" + b + " " + c)
                        },
                        spaces: function(b) {
                            if (!this.longStr) this.longStr = " ";
                            for (; this.longStr.length < b;) this.longStr += this.longStr;
                            return this.longStr.substr(0,
                            b)
                        },
                        rpad: function(b, c) {
                            return b.length > c ? b.substr(0, c) : b + this.spaces(c - b.length)
                        },
                        truncate: function(b, c) {
                            var d;
                            return ! (b != null && b.length) || b.length < c ? b: (d = b.substr(0, b.lastIndexOf(" ", c))) ? d: b.substr(0, c)
                        },
                        scrollToTop: function() {
                            return $(q).scrollTop(0)
                        },
                        isSubmitKey: function(b) {
                            return b != null && (b === ub || b === Aa || z.isSubmitKey(b.keyCode) || z.isSubmitKey(b.which))
                        },
                        getProtocol: function(b) {
                            var c,
                            d;
                            return ! b ? "": (c = (d = /^([a-z]+):/i.exec(b)) != null ? d[1] : void 0) != null ? c: ""
                        },
                        makeHttp: function(b) {
                            if (!b) return "";
                            b = b.replace(/^[a-z]*:\/*/i, "");
                            return "http://" + b
                        },
                        sanitizeWebAddress: function(b) {
                            var c;
                            return (c = z.getProtocol(b)) !== "http" && c !== "https" ? z.makeHttp(b) : b
                        },
                        calcPos: function(b, c, d, e) {
                            var f,
                            c = c.select(function(b) {
                                return (d != null ? d.id: void 0) !== b.id && (!e || e(b))
                            });
                            f = Math.min(Math.max(b, 0), c.length);
                            b = c[f - 1];
                            f = c[f];
                            c = (d != null ? d.get("pos") : void 0) || -1;
                            b = (b != null ? b.get("pos") : void 0) || 0;
                            f = (f != null ? f.get("pos") : void 0) || 0;
                            return f === 0 ? d && c > b ? c: b + 65536: d && c > b && c < f ? c: (f + b) / 2
                        },
                        isAndroid: function() {
                            return /android/i.test(navigator.userAgent)
                        }
                    }));
                    if (A("monitor")) q.Monitor = function() {
                        var b,
                        c,
                        d,
                        e,
                        f,
                        g;
                        b = 0;
                        f = q.localStorage;
                        d = q.sessionStorage;
                        e = (g = d != null ? d.status: void 0) != null ? g: "active";
                        return c = {
                            init: function() {
                                setInterval(c.check, 1E4);
                                $(q).focus(function() {
                                    return c.addActivity()
                                });
                                $(document).bind("keydown mousedown",
                                function() {
                                    c.addActivity()
                                })
                            },
                            addActivity: function() {
                                b = (new Date).getTime();
                                if (f) f.lastActivity = b;
                                c.setStatus("active")
                            },
                            check: function() { (new Date).getTime() - Math.max(b, f ? parseInt(f.lastActivity) : 0) > 3E5 && c.setStatus("idle")
                            },
                            setStatus: function(b) {
                                if (b !== e) {
                                    e = b;
                                    if (d) d.status = e;
                                    rpc.invoke("setSessionStatus", [e])
                                }
                            },
                            getStatus: function() {
                                return e
                            }
                        }
                    } (),
                    $(Monitor.init);
                    if (A("rpc")) fc = function(b, c, d) {
                        return b.invoke("getModelUpdatesSince", [b.modelIxUpdate],
                        function(e) {
                            var f,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m;
                            try {
                                l = e.messages;
                                j = 0;
                                for (k = l.length; j < k; j++) i = l[j],
                                f = JSON.parse(i),
                                $(b).triggerHandler(f.notify.event, f.notify);
                                m = e.modelIxUpdate;
                                for (g in m) h = m[g],
                                b.modelIxUpdate[g] != null && (b.modelIxUpdate[g] = h)
                            } catch(n) {
                                return typeof console !== "undefined" &&
                                console !== null && typeof console.error === "function" && console.error(["Model sync error on messages:", e != null ? e.messages: void 0]),
                                typeof console !== "undefined" && console !== null && typeof console.error === "function" && console.error(n),
                                typeof d === "function" ? d() : void 0
                            }
                            typeof c === "function" && c()
                        },
                        function(b) { (b != null ? b.syncError: void 0) != null && typeof Controller !== "undefined" && Controller !== null ? Controller.syncError() : typeof d === "function" && d()
                        })
                    },
                    q.SocketRPC = function() {
                        var b,
                        c;
                        c = this;
                        this.fxDefault = function() {};
                        this.reqid = 0;
                        this.dictCallback = {};
                        this.dictTime = {};
                        this.connectedOnce = !1;
                        this.modelIxUpdate = {};
                        this.secure = z.securePage();
                        this.port = document.location.port || (this.secure ? 443: 80);
                        this.socket = new zc.Socket(document.domain, {
                            transports: [],
                            secure: this.secure,
                            port: this.port,
                            rememberTransport: !1,
                            maxReconnectionAttempts: 100
                        });
                        b = new Date;
                        this.socket.on("connect",
                        function() {
                            R("timing", "connect", new Date - b);
                            R("rpc", "connect");
                            $(c).triggerHandler("connect");
                            c.connectedOnce && $(c).triggerHandler("reconnected");
                            c.connectedOnce = !0
                        });
                        this.socket.on("message",
                        function(b) {
                            var d,
                            e;
                            if (b) if (b.trellisVersion != null && typeof Controller !== "undefined" && Controller !== null && !Controller.versionCheck(b.trellisVersion)) Controller.upgradeClient();
                            else {
                                if (b.result) {
                                    if (typeof(d = c.dictCallback)[e = "fx" + b.reqid] === "function") d[e](b.result)
                                } else if ((d = b.notify) != null && d.event) {
                                    if (b.idModelChannel != null) c.modelIxUpdate[b.idModelChannel] = b.ixLastUpdateChannel;
                                    $(c).triggerHandler(b.notify.event, b.notify)
                                } else if (b.error) {
                                    if (typeof(d =
                                    c.dictCallback)[e = "fxErr" + b.reqid] === "function") d[e](b.error)
                                } else c.fxDefault(b);
                                b.reqid && (d = new Date - c.dictTime[b.reqid], R("timing", "message", b.reqid, "time", d, "length", typeof data !== "undefined" && data !== null ? data.length: void 0), delete c.dictCallback["fx" + b.reqid], delete c.dictCallback["fxErr" + b.reqid], delete c.dictTime[b.reqid])
                            }
                        });
                        this.socket.on("connecting",
                        function() {
                            R("rpc", "connecting");
                            $(c).triggerHandler("connecting")
                        });
                        this.socket.on("reconnect_failed",
                        function() {
                            R("rpc", "reconnect_failed");
                            $(c).triggerHandler("reconnect_failed")
                        });
                        this.subscribeTo = k(function(b, c) {
                            return this.invoke("subscribeTo" + b, [c], k(function(b) {
                                return this.modelIxUpdate[c] = b.ixLastUpdate
                            },
                            this), k(function(b) {
                                return R("rpc", b)
                            },
                            this))
                        },
                        this);
                        this.invoke = function(b, c, d, e) {
                            this.dictCallback["fx" + this.reqid] = d;
                            this.dictCallback["fxErr" + this.reqid] = e;
                            this.dictTime[this.reqid] = new Date;
                            b = {
                                sFxn: b,
                                rgarg: c,
                                reqid: this.reqid++
                            };
                            b.token = h.myToken();
                            R("rpc", "invoke: " + JSON.stringify(b));
                            this.socket.send(b)
                        };
                        this.resync = k(function() {
                            var b,
                            d,
                            e,
                            v,
                            f;
                            d = 1 <= arguments.length ? Cb.call(arguments, 0) : [];
                            e = {};
                            v = 0;
                            for (f = d.length; v < f; v++) b = d[v],
                            this.modelIxUpdate[b] != null && (e[b] = this.modelIxUpdate[b]);
                            c.modelIxUpdate = e;
                            return fc(this)
                        },
                        this);
                        this.disconnect = function() {
                            var b;
                            if (!this.secure || ((b = this.getTransport()) != null ? b.type: void 0) !== "flashsocket") R("rpc", "disconnecting"),
                            this.socket.disconnect()
                        };
                        this.sendKeepalives = function() {
                            return setInterval(_.throttle(k(function() {
                                this.invoke("ping", [],
                                function() {});
                                return 12E5
                            },
                            this)), 12E5)
                        };
                        this.getTransport =
                        k(function() {
                            var b;
                            return (b = this.socket) != null ? b.transport: void 0
                        },
                        this);
                        this.socket.connect()
                    },
                    q.AJAXRPC = function() {
                        var b;
                        b = this;
                        this.fxDefault = function() {};
                        this.idBoardToPoll = null;
                        this.modelIxUpdate = {};
                        this.msPoll = 2E3;
                        this.msPollIdle = 1E4;
                        this.ajaxSessionId = Math.random().toString().substring(2);
                        this.failures = 0;
                        this.failuresAllowed = 1E3;
                        this.invoke = function(b, c, d, e) {
                            b = JSON.stringify({
                                sFxn: b,
                                rgarg: c,
                                reqid: this.reqid++
                            });
                            return $.ajax({
                                url: "/rpc",
                                type: "POST",
                                data: {
                                    msg: b,
                                    memberStatus: Monitor.getStatus(),
                                    idBoardPolling: this.idBoardToPoll,
                                    ajaxSessionId: this.ajaxSessionId
                                },
                                dataType: "json",
                                success: function(b) { (b != null ? b.result: void 0) != null && (b.result.messages == null || b.result.messages.length > 0) && R("rpc", "message", b.result);
                                    if (b.trellisVersion && typeof Controller !== "undefined" && Controller !== null && !Controller.versionCheck(b.trellisVersion)) Controller.upgradeClient();
                                    else return b.error ? typeof e === "function" ? e(b.error) : void 0: typeof d === "function" ? d(b.result) : void 0
                                },
                                error: function(b, c) {
                                    return typeof e ===
                                    "function" ? e(c) : void 0
                                }
                            })
                        };
                        this.subscribeTo = k(function(b, c) {
                            var d;
                            d = "id" + b + "ToPoll";
                            this[d] && delete this[d];
                            return this[d] = c
                        },
                        this);
                        this.poll = function() {
                            var c,
                            d,
                            e,
                            f,
                            g,
                            i,
                            j,
                            k;
                            if (b.failures === b.failuresAllowed) $(b).triggerHandler("reconnect_failed");
                            else {
                                try {
                                    d = h.myId()
                                } catch(l) {}
                                c = function() {
                                    setTimeout(function() {
                                        b.poll()
                                    },
                                    h.isLoggedIn() && Monitor.getStatus() === "active" ? b.msPoll: b.msPollIdle)
                                };
                                if (b.idBoardToPoll != null || d != null || b.idOrganizationToPoll != null) {
                                    if (b.idBoardToPoll != null && (f = b.modelIxUpdate)[j =
                                    b.idBoardToPoll] == null) f[j] = -1;
                                    if (d != null && (g = b.modelIxUpdate)[d] == null) g[d] = -1;
                                    if (b.idOrganizationToPoll && (i = b.modelIxUpdate)[k = b.idOrganizationToPoll] == null) i[k] = -1;
                                    for (e in b.modelIxUpdate) e === b.idBoardToPoll || e === d || e === b.idOrganizationToPoll || (delete b.modelIxUpdate[e], R("rpc", "Removing " + e, b.modelIxUpdate));
                                    fc(b,
                                    function() {
                                        $(b).triggerHandler("connect");
                                        b.failures = 0;
                                        return c()
                                    },
                                    function() {
                                        $(b).triggerHandler("connecting"); ++b.failures;
                                        return c()
                                    })
                                } else c()
                            }
                        }
                    },
                    q.rpc = new
                    function() {
                        var b,
                        c,
                        d,
                        e,
                        f,
                        g,
                        i,
                        j,
                        l,
                        m;
                        g = this;
                        m = i = j = null;
                        e = !1;
                        d = [];
                        c = {};
                        l = function() {
                            var b,
                            c,
                            t,
                            v;
                            e = !0;
                            j === i && j.poll();
                            v = [];
                            c = 0;
                            for (t = d.length; c < t; c++) b = d[c],
                            v.push(b());
                            return v
                        };
                        b = function() {
                            var b,
                            c,
                            d,
                            e,
                            t;
                            e = ["connecting", "connect", "connect_failed", "reconnect_failed", "reconnected", "updateModels", "deleteModels", "adminAlert"];
                            t = [];
                            c = 0;
                            for (d = e.length; c < d; c++) b = e[c],
                            t.push($(j).bind(b,
                            function(b, c, d) {
                                return $(g).triggerHandler(b, c, d)
                            }));
                            return t
                        };
                        f = function() {
                            if (!j) if (m = new SocketRPC, j = i = new AJAXRPC, b(), m.getTransport()) {
                                if (!m.connectedOnce) return setTimeout(function() {
                                    e ||
                                    (R("rpc", "Socket not responsive. Using AJAX."), m.disconnect(), l())
                                },
                                8E3),
                                m.invoke("ping", [],
                                function() {
                                    e ? m.disconnect() : (R("rpc", "Socket responded to ping in a timely fashion. Using sockets."), m.sendKeepalives(), j = m, b(), l())
                                })
                            } else return R("rpc", "No socket connect. Using AJAX."),
                            l()
                        };
                        this.handleLogin = k(function() {
                            if (h.isLoggedIn()) return f()
                        },
                        this);
                        this.invoke = k(function(b, c, d, e) {
                            f();
                            j.invoke(b, c, d, e)
                        },
                        this);
                        this.subscribeTo = k(function(b, v) {
                            if ((c[b] != null || v != null) && c[b] !== v) f(),
                            e ? (c[b] = v, j.subscribeTo(b,
                            v)) : (R("rpc", "deferring subscribe to " + b + " " + v), d.push(k(function() {
                                this.subscribeTo(b, v)
                            },
                            this)))
                        },
                        this);
                        this.resync = k(function() {
                            var b;
                            b = 1 <= arguments.length ? Cb.call(arguments, 0) : [];
                            f();
                            return typeof j.resync === "function" ? j.resync.apply(j, b) : void 0
                        },
                        this);
                        this.isUsingSocket = function() {
                            return j != null && j === m
                        };
                        h.isLoggedIn() && f()
                    },
                    Backbone.sync = function(b, c, d, e) {
                        var f,
                        g,
                        h,
                        i;
                        if ((g = c.rest) != null && g[b]) {
                            g = !0;
                            switch (b) {
                            case "create":
                                if ((h = c.typeName) === "Board" || h === "Member" || h === "Organization") f = function(b) {
                                    c.set(b,
                                    {
                                        fromServer: !0
                                    });
                                    Models[c.typeName].add(c);
                                    return Models.finishInit(c)
                                };
                                break;
                            case "update":
                                if ((i = c.typeName) === "Member" || i === "Organization") g = !1;
                                break;
                            case "delete":
                                g = !1
                            }
                            g ? c.ready(function() {
                                d(c.toJSON())
                            }) : f = function(b) {
                                c.set(b, {
                                    fromServer: !0
                                });
                                return d(c.toJSON())
                            };
                            f || (f = function(b) {
                                c.set(b, {
                                    fromServer: !0
                                })
                            });
                            if ((h = c.rest) != null) h[b](f, e)
                        } else b === "delete" ? typeof d === "function" && d() : typeof e === "function" && e("rest api method not implemented")
                    };
                    A("format") && (Ja = new(function() {
                        function b() {}
                        var c,
                        d,
                        e,
                        f,
                        g,
                        i,
                        j;
                        c = markdown.Markdown;
                        d = c.dialects.Trellis = c.subclassDialect(c.dialects.Gruber);
                        e = function(b) {
                            var c;
                            return (c = /^(https?|ftp):\/\/[-a-z0-9\.]+[-_\/a-z0-9\.\+%\&\?#\(\)~\*=\|:,;!]*/i.exec(b)) ? (b = /^(.*?)([\(\),:.\?]*)$/.exec(c[0]), b = b[1], [b.length, ["link", {
                                href: b,
                                title: b,
                                target: "_blank"
                            },
                            b]]) : [1, b[0]]
                        };
                        j = ["http", "https", "ftp"];
                        g = 0;
                        for (i = j.length; g < i; g++) f = j[g],
                        d.inline[f + "://"] = e;
                        d.inline["@"] = function(b) {
                            var c,
                            d;
                            if (b = /^(@[a-z]+)(?=$|\W)/i.exec(b)) if (c = b[1], d = _.detect(Models.Member.all(),
                            function(b) {
                                return b.hasAtMe(c)
                            })) return b =
                            d.toJSON(),
                            b.atMention = c,
                            b.isMe = h.isMe(d),
                            [c.length, ["span", {
                                "class": "atMention" + (b.isMe ? " me": ""),
                                title: b.fullName
                            },
                            c]];
                            return [1, "@"]
                        };
                        c.buildBlockOrder(d.block);
                        c.buildInlinePatterns(d.inline);
                        b.prototype.textAsHtml = function(b, c) {
                            var d,
                            e,
                            t;
                            if (!b) return b;
                            d = _.extend({
                                convertNewlines: !1,
                                embedlyUrlData: null
                            },
                            c);
                            t = location.protocol === "https:";
                            e = b.replace(/^\s*|\s*$/g, "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;");
                            d.convertNewlines && (e =
                            "<p>" + e.replace(/\n/g, "</p><p>") + "</p>");
                            e = e.replace(/(https?|ftp):\/\/[-a-z0-9\.]+[-_\/a-z0-9\.\+%\&\?#\(\)~\*=\|:,;!]*/gi,
                            function(b) {
                                var c,
                                e,
                                b = b.replace(/&amp;/g, "&");
                                if ((c = (e = d.embedlyUrlData) != null ? e[b] : void 0) && (!t || c.htmlIsHttps || c.htmlHttps || c.type === "photo" && /^https:\/\//i.test(c.url))) {
                                    Y("embedly");
                                    if (c.htmlIsHttps) c.htmlHttps = c.html;
                                    c["type_" + c.type] = !0;
                                    c.originalUrl = b;
                                    b = w.fill("embedly", _.extend(c, {
                                        requireHttps: t
                                    }));
                                    return d.convertNewlines ? "</p>" + b + "<p>": b
                                } else return c = /^(.*?)([\(\),:.\?]*)$/.exec(b),
                                b = c[1],
                                c = c[2],
                                '<a href="' + b + '" target="_blank">' + b + "</a>" + c
                            }).replace(/(^|\W)(@[a-z]+)(?=$|\W)/gi,
                            function(b, c, d) {
                                var e;
                                return (e = _.detect(Models.Member.all(),
                                function(b) {
                                    return b.hasAtMe(d)
                                })) ? (b = e.toJSON(), b.atMention = d, b.isMe = h.isMe(e), c + N.to_html(w.atMention, b)) : b
                            });
                            return e = e.replace(/^(<p><\/p>)*|(<p><\/p>)*$/g, "")
                        };
                        b.prototype.markdownAsHtml = function(b) {
                            return markdown.toHTML(b, d)
                        };
                        b.prototype.bytes = function(b) {
                            var c,
                            d,
                            e,
                            t;
                            if (b == null) return "Unknown Size";
                            e = ["B", "KB", "MB", "GB"];
                            c = b;
                            d = 0;
                            for (t =
                            e.length; d < t; d++) {
                                b = e[d];
                                if (c < 1024 || d === e.length - 1) return e = Math.round(c * 100) / 100,
                                "" + e + " " + b;
                                c /= 1024
                            }
                            return "unknown"
                        };
                        return b
                    } ()));
                    A("viewWithId") && (S = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.View);
                        b.prototype.uniqueId = function() {
                            if (!this.hasOwnProperty("_uniqueId")) this._uniqueId = _.uniqueId("view");
                            return this._uniqueId
                        };
                        return b
                    } ());
                    A("editable") && (fa = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.editField = function(b) {
                            if (! ($(b.target).is("a") &&
                            $(b.target).attr("href") !== "#") && !DragSort.dragging && !DragSort.sorting) return z.stop(b),
                            L.hide(),
                            b = $(b.target).closest(".editable"),
                            this.edit(b.attr("attr"))
                        };
                        b.prototype.edit = function(b) {
                            var c,
                            d,
                            e,
                            f,
                            v,
                            g;
                            c = this.$(this.el).find("[attr=" + b + "]");
                            e = this.$(this.el).find(".no-edits [attr=" + b + "]");
                            c = c.not(e);
                            c.length !== 0 && (U.cancelEdits(), e = c.find(".edit:first"), e.length !== 0 && (f = c.find(".field:first"), g = f.is("textarea"), v = f.parent().is(".card-detail-edit"), d = c.find(".current"), g && (d = v ? Math.max(90, d.height() +
                            20) : Math.max(36, d.height() + 20), d > 500 && (d = 500), f.height(d)), e.append(w.edit_controls), e.hasClass("delete") || e.find(".delete").remove(), e.hasClass("convert") || e.find(".convert").remove(), c.addClass("editing"), f.val() === "" && f.val(this.model.get(b)), R("editable", this.model), f.focus().select()))
                        };
                        b.prototype.stopEditing = function(b) {
                            z.stop(b);
                            U.cancelEdits();
                            return ! 1
                        };
                        b.prototype.validate = function() {
                            var b,
                            c,
                            d,
                            e;
                            e = $(this.el).find(".editing.non-empty .field");
                            c = 0;
                            for (d = e.length; c < d; c++) if (b = e[c], /^\s*$/.test($(b).val())) return ! 1;
                            return ! 0
                        };
                        b.prototype.commitEdits = function(b) {
                            var c,
                            d,
                            e;
                            if ((b.type !== "keypress" || z.isSubmitKey(b) && b.ctrlKey || b.keyCode === 13 && (!$(b.target).is("textarea") || $(b.currentTarget).hasClass("single-line"))) && this.validate()) return d = this.model,
                            e = this,
                            c = this.customSet,
                            $(".editing").remove("input[type=submit]"),
                            $(".editing").removeClass("editing").each(function() {
                                var b,
                                t,
                                f,
                                v;
                                b = $(this).attr("attr");
                                f = $(this).find(".field").val();
                                if (f !== d.get(b)) return t = !1,
                                v = {},
                                c ? t = c.call(e, b, f) : v[b] = f,
                                $(this).find(".current").text(f),
                                R("editable", "*** Set Data: "),
                                R("editable", v),
                                R("editable", d),
                                d.save(v, {
                                    silent: t
                                })
                            }).find(".field").val(""),
                            !0
                        };
                        b.prototype.stopPropagation = function(b) {
                            z.stopPropagation(b)
                        };
                        b.prototype.delegateEvents = function(c) {
                            return b.__super__.delegateEvents.call(this, _.extend({
                                "click .current": "editField",
                                "click .js-cancel-edit": "stopEditing",
                                "click .js-save-edit": "commitEdits",
                                "keypress .field": "commitEdits",
                                "click input": "stopPropagation",
                                "click textarea": "stopPropagation"
                            },
                            c || this.events))
                        };
                        return b
                    } ());
                    A("header") && (Qb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.render = function() {
                            var b,
                            c,
                            d;
                            $(this.el).html(w.fill("user_header", this.model.toJSON()));
                            this.model.isLoggedIn() && (c = this.model.getView(ab), b = this.model.getView(Ob), d = this.model.getView(pb), $(this.el).find(".header-auth").html(c.render().el), $(this.el).find(".header-boards").html(b.render().el), $(this.el).find(".header-notifications").html(d.render().el));
                            return this
                        };
                        return b
                    } (), ab = function() {
                        function b() {
                            this.viewMenu =
                            k(this.viewMenu, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "member";
                        b.prototype.events = {
                            click: "viewMenu"
                        };
                        b.prototype.render = function() {
                            var b;
                            R("render", "rendering HeaderMemberView");
                            b = h.me();
                            $(this.el).html(N.to_html(w.member_header, b ? b.toJSON() : {}));
                            return this
                        };
                        b.prototype.viewMenu = function(b) {
                            z.stop(b);
                            b = h.me().getView(Pb);
                            L.toggle({
                                elem: this.el,
                                top: 37,
                                view: b
                            })
                        };
                        return b
                    } (), wb = function() {
                        function b() {
                            this.loginGoogle = k(this.loginGoogle,
                            this);
                            this.loginPassword = k(this.loginPassword, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "login-popover";
                        b.prototype.initialize = function() {
                            return this.errors = {}
                        };
                        b.prototype.events = {
                            "click .js-password-login": "loginPassword",
                            "click .js-google-login": "loginGoogle"
                        };
                        b.prototype.render = function() {
                            $(this.el).html(w.fill("login_popover", {
                                badLogin: this.errors.badLogin
                            }));
                            return this
                        };
                        b.prototype.loginPassword = function(b) {
                            var c,
                            d;
                            z.stop(b);
                            b = $(b.target).closest("form");
                            b = {
                                user: b.find('input[name="user"]').val(),
                                password: b.find('input[name="password"]').val()
                            };
                            d = k(function(b) {
                                h.check(b);
                                q.navigate()
                            },
                            this);
                            c = k(function() {
                                this.errors.badLogin = !0;
                                this.render()
                            },
                            this);
                            return l.api.login(b, {
                                requireAjax: !0
                            },
                            d, c)
                        };
                        b.prototype.loginGoogle = function(b) {
                            z.stop(b);
                            b = $(b.target).closest("form");
                            b.find('input[name="mode"]').val("popup");
                            b.find('input[name="immediate"]').val(!1);
                            b.find('input[name="returnUrl"]').val(document.location.pathname);
                            return b.submit()
                        };
                        return b
                    } (), Pb = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.render = function() {
                            R("render", "rendering HeaderMemberMenuView");
                            $(this.el).html(N.to_html(w.menu, {
                                menu_cards: [{
                                    name: "Boards",
                                    url: Controller.getMemberBoardsUrl()
                                },
                                {
                                    name: "Profile",
                                    url: Controller.getMemberProfileUrl()
                                },
                                {
                                    name: "Notifications",
                                    url: Controller.getMemberNotificationsUrl()
                                },
                                {
                                    name: "Account",
                                    url: Controller.getMemberAccountUrl()
                                },
                                {
                                    name: "Log Out",
                                    url: "/logout"
                                }]
                            }));
                            return this
                        };
                        return b
                    } (), Ob = function() {
                        function b() {
                            this.viewMenu = k(this.viewMenu, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-view-header-boards": "viewMenu"
                        };
                        b.prototype.render = function() {
                            R("render", "rendering HeaderMemberMenuView");
                            $(this.el).html('<a title="View list of boards" class="header-btn-target light-hover js-view-header-boards" href="#"><span class="app-icon board-icon"></span><span class="header-btn-text">Boards</span></a>');
                            return this
                        };
                        b.prototype.viewMenu = function(b) {
                            Y("boardMenu");
                            z.stop(b);
                            b = this.model.getView(nb);
                            L.toggle({
                                elem: this.el,
                                top: 37,
                                view: b
                            })
                        };
                        return b
                    } (), pb = function() {
                        function b() {
                            this.viewMenu = k(this.viewMenu, this);
                            this.render = k(this.render, this);
                            this.initialize = k(this.initialize, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.initialize = function() {
                            Models.Notification.bind("add", this.render);
                            Models.Notification.bind("change", this.render);
                            Models.Notification.bind("remove", this.render);
                            return b.__super__.initialize.apply(this, arguments)
                        };
                        b.prototype.events = {
                            "click .js-view-header-notifications": "viewMenu"
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            c = function() {
                                var c,
                                d,
                                e,
                                f;
                                e = Models.Notification.all();
                                f = [];
                                c = 0;
                                for (d = e.length; c < d; c++) b = e[c],
                                b.get("isUnread") && f.push(b);
                                return f
                            } ().length;
                            $(this.el).html('<a title="View notifications" class="header-btn-target light-hover js-view-header-notifications" href="#"><span class="app-icon notification-icon"></span><span class="header-btn-text">Notifications</span><span class="count js-unread-note-count">' +
                            (c > 0 ? c: "</span></a>"));
                            Controller.setLocation({
                                unreadCount: c
                            });
                            return this
                        };
                        b.prototype.viewMenu = function(b) {
                            Y("notificationMenu");
                            z.stop(b);
                            b = this.model.getView(ob);
                            L.toggle({
                                elem: this.el,
                                top: 37,
                                view: b,
                                hidden: b.markUnread
                            })
                        };
                        return b
                    } ());
                    A("archive") && (o = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {};
                        b.prototype.initialize = function() {
                            return this.getList().bind("change:closed", this.render).onAddRemove(this.render)
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            c = this.getList();
                            this.sortVal && (c = c.sortBy(this.sortVal));
                            $(this.el).html(N.to_html(w.archive, {
                                name: this.getTitle(),
                                empty: c.filter(function(b) {
                                    return b.get("closed")
                                }).length === 0,
                                emptyMessage: this.getEmptyMessage()
                            }));
                            b = $(this.el).find(".archive-items");
                            c.forEach(k(function(c) {
                                if (c.get("closed")) return c = c.getView(qb, null, {
                                    onReopen: this.onReopen
                                }),
                                b.append(c.render().el)
                            },
                            this));
                            return this
                        };
                        b.prototype.close = function() {};
                        return b
                    } (), qb = function() {
                        function b() {
                            this.reopen =
                            k(this.reopen, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName = "li";
                        b.prototype.events = {
                            "click .js-reopen": "reopen"
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e;
                            b = this.model.owned != null ? this.model.owned() : this.model.editable();
                            c = this.model.toJSON();
                            c.reOpenText = (e = this.options.reOpenText) != null ? e: "Re-open";
                            c.url = typeof(d = this.model).getUrl === "function" ? d.getUrl() : void 0;
                            b = w.fill("archive_item", c, {
                                editable: b
                            });
                            $(this.el).html(b);
                            return this
                        };
                        b.prototype.reopen = function(b) {
                            z.preventDefault(b);
                            this.model.reopen();
                            if (typeof(b = this.options).onReopen === "function") b.onReopen(this.model);
                            return ! 1
                        };
                        return b
                    } ());
                    A("templates") && $(function() {
                        var b;
                        b = function(b) {
                            var c,
                            d,
                            e,
                            f;
                            c = w;
                            f = b.split(".");
                            d = 0;
                            for (e = f.length; d < e; d++) b = f[d],
                            c = c[b];
                            return _.isString(c) ? c: c.index
                        };
                        w.fill = function(c, d, e, f) {
                            d == null && (d = {});
                            e == null && (e = {});
                            f == null && (f = {});
                            d = _.extend({
                                __ed: e != null ? e.editable: void 0,
                                __own: e != null ? e.owned: void 0,
                                __invited: e != null ? e.invited: void 0,
                                __loggedIn: h.isLoggedIn()
                            },
                            d);
                            return N.to_html(b(c), d, f)
                        };
                        return w.fillMenu = function(b, c, d) {
                            return w.fill("menu-base", {
                                content: w.fill(b, c, d)
                            })
                        }
                    });
                    if (A("uses")) Ta = new(function() {
                        function b() {
                            this.flush = k(this.flush, this);
                            this.used = k(this.used, this);
                            this.entries = [];
                            this.lastSent = {};
                            this.flush = _.debounce(this.flush, 3E3)
                        }
                        b.prototype.used = function(b, c, d) {
                            var e,
                            b = {
                                name: b
                            };
                            if (c != null) b.context = c.id ? c.id: c;
                            if (d != null) b.data = d;
                            d = b.name;
                            b.context && (d += "_" + b.context);
                            c = this.lastSent[d];
                            e = (new Date).getTime();
                            if (!c || c < e - 36E5) this.lastSent[d] =
                            e,
                            this.entries.push(b),
                            this.flush()
                        };
                        b.prototype.flush = function() {
                            if (this.entries.length) this.entries = []
                        };
                        return b
                    } ()),
                    Y = Ta.used,
                    $(function() {
                        var b,
                        c;
                        Y("trellis");
                        DesktopNotifications.enabled() && Y("desktopNotifications");
                        b = q.performance;
                        b != null && setTimeout(function() {
                            var c,
                            d,
                            e,
                            t;
                            d = b.timing;
                            e = {
                                timing_total: d.loadEventEnd - d.navigationStart,
                                timing_loading: d.domInteractive - d.navigationStart,
                                timing_render: d.loadEventEnd - d.domInteractive
                            };
                            t = [];
                            for (c in e) d = e[c],
                            d > 0 && d < 1E5 && t.push(Y(c, location.pathname,
                            d));
                            return t
                        },
                        1E3)
                    });
                    A("api") && (function() {
                        var b;
                        b = {
                            quickOp: function(b, c, d, e) {
                                var f;
                                if (b && c) return f = {},
                                z.isSimpleObject(c) ? (f = c, e = d) : f[c] = d,
                                c = {},
                                c[b] = f,
                                this.update(c, e),
                                this
                            },
                            set: function(b, c, d) {
                                return this.quickOp("set", b, c, d)
                            },
                            pull: function(b, c, d) {
                                return this.quickOp("pull", b, c, d)
                            },
                            push: function(b, c, d) {
                                return this.quickOp("push", b, c, d)
                            },
                            addToSet: function(b, c, d) {
                                return this.quickOp("addToSet", b, c, d)
                            },
                            updates: null,
                            update: function(b, c) {
                                var d,
                                e,
                                f,
                                v,
                                g,
                                h,
                                i,
                                j,
                                k,
                                l,
                                m;
                                if (!b) return this;
                                d = _.clone(b);
                                c == null &&
                                (c = {});
                                l = ["set", "push", "pull", "addToSet"];
                                j = 0;
                                for (k = l.length; j < k; j++) if (h = l[j], d[h]) {
                                    d[h] = _.clone(d[h]);
                                    m = d[h];
                                    for (g in m) {
                                        i = m[g];
                                        e = this.get(g);
                                        f = !1;
                                        if (h === "set") {
                                            if (z.isSimpleObject(i) && z.isSimpleObject(e) && (i = _.extend({},
                                            e, i)), _.isEqual(e, i) || !e && !i) f = !0
                                        } else if (v = _.contains(e, i), (h === "push" || h === "addToSet") && v || h === "pull" && !v) f = !0;
                                        if (f) delete d[h][g];
                                        else {
                                            f = {};
                                            h !== "set" && !_.isArray(e) && (e = []);
                                            f[g] = function() {
                                                switch (h) {
                                                case "set":
                                                    return i;
                                                case "push":
                                                    return e.concat(i);
                                                case "pull":
                                                    return _.without(e,
                                                    i);
                                                case "addToSet":
                                                    return _.uniq(e.concat(i))
                                                }
                                            } ();
                                            if (!c.waitForServer && !Backbone.Model.prototype.set.call(this, f, c)) return ! 1; (g === "_id" || g === "dateLastActivity" || g === "nWatchers" || g === "status" || _.isArray(i)) && delete d[h][g]
                                        }
                                    }
                                    _.isEmpty(d[h]) && delete d[h]
                                }
                                if (!c.silent && !c.fromServer && !_.isEmpty(d)) {
                                    if (this.updates == null) this.updates = [];
                                    this.updates.push(d)
                                }
                                return this
                            }
                        };
                        return q.Api = _.extend(q.Api, {
                            getFx: function(b, c) {
                                return function(d, e, f, v) {
                                    var g;
                                    _.isFunction(e) && (v = f, f = e, e = {});
                                    e == null && (e = {});
                                    d = {
                                        token: h.myToken(),
                                        method: c,
                                        data: d
                                    };
                                    g = "/api/" + b.typeName.toLowerCase();
                                    b.id && (g += "/" + b.id);
                                    rpc.isUsingSocket() && !e.requireAjax ? rpc.invoke("post", [g, d], f, v) : $.ajax({
                                        url: g,
                                        data: JSON.stringify(d),
                                        type: "post",
                                        contentType: "application/json",
                                        dataType: "json",
                                        success: function(b) {
                                            return b.error ? typeof v === "function" ? v(b.error) : void 0: typeof f === "function" ? f(b) : void 0
                                        },
                                        error: v
                                    })
                                }
                            },
                            init: function(c) {
                                var d,
                                e,
                                f,
                                g,
                                h;
                                d = {};
                                h = this.methodMap[c.typeName];
                                f = 0;
                                for (g = h.length; f < g; f++) e = h[f],
                                d[e] = this.getFx(c, e);
                                c.api = d;
                                c.rest = {};
                                if (d.update) _.extend(c,
                                b),
                                c.rest.update = _.bind(function(b, c) {
                                    this.updates ? this.withIdParents(k(function(d) {
                                        d = {
                                            updates: this.updates,
                                            idParents: d
                                        };
                                        this.updates = null;
                                        return this.api.update(d, b, c)
                                    },
                                    this)) : b({})
                                },
                                c);
                                if (d.create) c.rest.create = _.bind(function(b, c) {
                                    return this.withIdParents(k(function(d) {
                                        this.api.create({
                                            attrs: this.toJSON(),
                                            idParents: d
                                        },
                                        b, c)
                                    },
                                    this))
                                },
                                c);
                                d["delete"] && (c.rest["delete"] = _.bind(function(b, c) {
                                    return this.withIdParents(k(function(d) {
                                        this.api["delete"]({
                                            attrs: this.toJSON(),
                                            idParents: d
                                        },
                                        b, c)
                                    },
                                    this))
                                },
                                c));
                                return c
                            }
                        })
                    } (), l = Api.init({
                        typeName: "App"
                    }));
                    if (A("models")) q.Models = function() {
                        var b,
                        c,
                        e,
                        f,
                        g,
                        i,
                        j,
                        k,
                        l,
                        m,
                        o,
                        s,
                        u;
                        f = {};
                        e = {};
                        c = function() {
                            var b,
                            c,
                            d,
                            t,
                            v;
                            for (b in e) {
                                c = e[b];
                                t = 0;
                                for (v = c.length; t < v; t++) d = c[t],
                                R("models", "deleting", d),
                                typeof d.destructor === "function" && d.destructor(),
                                delete d
                            }
                            f = {
                                members: {},
                                boards: {},
                                organizations: {},
                                notifications: {},
                                cards: {},
                                actions: {}
                            };
                            e = {
                                members: [],
                                boards: [],
                                organizations: [],
                                notifications: [],
                                cards: [],
                                actions: []
                            };
                            return q.map = f
                        };
                        c();
                        b = function(b) {
                            if (!b.postInitialized) typeof b.postInitialize ===
                            "function" && b.postInitialize(),
                            b.postInitialized = !0;
                            return b
                        };
                        g = function(c) {
                            var t,
                            g,
                            h,
                            i,
                            j;
                            g = function(b, c, d) {
                                var e,
                                t,
                                f;
                                if (!b) return _.values(c);
                                t = 0;
                                for (f = b.length; t < f; t++) e = b[t],
                                c[e._id] ? c[e._id].set(e, {
                                    silent: !0
                                }) : c[e._id] = new d(e);
                                return _.values(c)
                            };
                            e.members = g(c.members, f.members, ya);
                            e.boards = g(c.boards, f.boards, D);
                            e.organizations = g(c.organizations, f.organizations, ib);
                            e.notifications = g(c.notifications, f.notifications, hb);
                            e.cards = g(c.cards, f.cards, da);
                            e.actions = g(c.actions, f.actions, d);
                            if (c.boardPreferences !=
                            null) {
                                j = c.boardPreferences;
                                h = 0;
                                for (t = j.length; h < t; h++) g = j[h],
                                (i = f.boards[g.idBoard]) != null && i.initMyPrefs(g)
                            }
                            if (c.members != null) {
                                h = c.members;
                                i = 0;
                                for (g = h.length; i < g; i++) t = h[i],
                                t = f.members[t._id],
                                b(t)
                            }
                            if (c.boards != null) {
                                h = c.boards;
                                i = 0;
                                for (g = h.length; i < g; i++) t = h[i],
                                t = f.boards[t._id],
                                b(t)
                            }
                            if (c.organizations != null) {
                                h = c.organizations;
                                i = 0;
                                for (g = h.length; i < g; i++) t = h[i],
                                t = f.organizations[t._id],
                                b(t)
                            }
                            if (c.notifications != null) {
                                h = c.notifications;
                                g = 0;
                                for (i = h.length; g < i; g++) t = h[g],
                                t = f.notifications[t._id],
                                b(t)
                            }
                            if (c.cards !=
                            null) {
                                h = c.cards;
                                g = 0;
                                for (i = h.length; g < i; g++) t = h[g],
                                t = f.cards[t._id],
                                b(t)
                            }
                            c.now && Lb.updateServerTime(c.now);
                            c.adminAlerts && n.process(c.adminAlerts)
                        };
                        i = {
                            loadData: function(b, d, e, f) {
                                _.isFunction(d) && (f = e, e = d, d = {});
                                d = _.extend({
                                    isAdditionalData: !1,
                                    resultIfNotLoggedIn: null
                                },
                                d);
                                if (d.resultIfNotLoggedIn != null && !h.isLoggedIn()) return e(d.resultIfNotLoggedIn);
                                QuickLoad(b,
                                function(b) {
                                    b.error ? typeof f === "function" && f(b.error) : (d.isAdditionalData || c(), g(b), typeof e === "function" && e(b))
                                })
                            },
                            loadBoardData: function(b,
                            c, d, e) {
                                return this.loadData("/data/board/" + c + "/" + b, d, e)
                            },
                            loadCardData: function(b, c, d) {
                                return this.loadData("/data/card/" + b, {
                                    isAdditionalData: !0
                                },
                                c, d)
                            },
                            loadHeaderData: function(b, c) {
                                return this.loadData("/data/board/list/mine", {
                                    resultIfNotLoggedIn: {}
                                },
                                b, c)
                            },
                            loadNotificationData: function(b, c, d) {
                                return this.loadData("/data/" + b + "/notifications", c, d)
                            },
                            loadMoreNotificationData: function(b, c, d, e) {
                                return this.loadData("/data/" + b + "/notifications?skip=" + c, {
                                    isAdditionalData: !0
                                },
                                d, e)
                            },
                            loadMemberBoardsData: function(b,
                            c, d) {
                                return this.loadData("/data/" + b + "/boards", c, d)
                            },
                            loadPublicBoardsData: function(b, c) {
                                return this.loadData("/data/board/list", b, c)
                            },
                            loadMemberOrganizationsData: function(b, c) {
                                return this.loadData("/data/org/list/mine", b, c)
                            },
                            loadUserOrOrgData: function(b, c, d) {
                                return this.loadData("/data/" + b, c, d)
                            },
                            loadOrgNameById: function(b, c, d) {
                                return this.loadData("/data/org/id/" + b, c, d)
                            },
                            loadCurrentBoardData: function(b, c, d) {
                                return this.loadBoardData("current", b, c, d)
                            },
                            loadClosedBoardData: function(b, c, d) {
                                return this.loadBoardData("all",
                                b, c, d)
                            },
                            finishInit: function(c) {
                                return b(c)
                            }
                        };
                        _.each(["Member", "Board", "Organization", "Notification", "Action", "Card"],
                        function(b) {
                            i[b] = function(c) {
                                var d;
                                return d = {
                                    get: function(b) {
                                        return f[c][b]
                                    },
                                    getList: function(b) {
                                        return _.compact(_.map(b, d.get))
                                    },
                                    all: function() {
                                        return e[c]
                                    },
                                    add: function(t, f) {
                                        var v,
                                        g,
                                        h,
                                        j;
                                        e[c].push(t);
                                        d.updateId(t);
                                        if (!f && (i[b].trigger("add", t), b === "Action")) {
                                            j = t.get("idModels");
                                            g = 0;
                                            for (h = j.length; g < h; g++) v = j[g],
                                            i[b].trigger("add:" + v, t)
                                        }
                                    },
                                    remove: function(d, t) {
                                        var v,
                                        g,
                                        h;
                                        e[c] = _.filter(e[c],
                                        function(b) {
                                            return b.id !== d
                                        });
                                        delete f[c][d];
                                        if (!t && (i[b].trigger("remove", f[c][d]), b === "Action")) {
                                            h = model.get("idModels");
                                            v = 0;
                                            for (g = h.length; v < g; v++) d = h[v],
                                            i[b].trigger("remove:" + d, model)
                                        }
                                    },
                                    updateId: function(b, d) { (d = d || b.id) && (f[c][d] = b)
                                    },
                                    find: function(b, d) {
                                        var t,
                                        f,
                                        v,
                                        g,
                                        h;
                                        g = e[c];
                                        h = [];
                                        f = 0;
                                        for (v = g.length; f < v; f++) t = g[f],
                                        _.isEqual(t.get(b), d) && h.push(t);
                                        return h
                                    }
                                }
                            } (b.toLowerCase() + "s");
                            return _.extend(i[b], Backbone.Events)
                        });
                        i.Notification.sortedByDateDescending = function() {
                            return this.all().sort(function(b,
                            c) {
                                return new Date(c.get("date")) - new Date(b.get("date"))
                            })
                        };
                        i.Action.getListForModel = function(b) {
                            return _.filter(this.all(),
                            function(c) {
                                return Ha.call(c.get("idModels"), b) >= 0
                            })
                        };
                        i.Action.update = function(b) {
                            var c,
                            e,
                            t,
                            f,
                            v,
                            P,
                            g;
                            t = [];
                            f = 0;
                            for (v = b.length; f < v; f++) {
                                e = b[f]; (c = Models.Action.get(e._id)) ? c.set(e, {
                                    silent: !0
                                }) : (c = new d(e), Models.Action.add(c, !0));
                                g = c.get("idModels");
                                e = 0;
                                for (P = g.length; e < P; e++) c = g[e],
                                Ha.call(t, c) < 0 && t.push(c)
                            }
                            v = [];
                            b = 0;
                            for (f = t.length; b < f; b++) c = t[b],
                            v.push(i.Action.trigger("add:" +
                            c));
                            return v
                        };
                        i.Member.update = function(b) {
                            var c,
                            d,
                            e,
                            t,
                            f;
                            f = [];
                            e = 0;
                            for (t = b.length; e < t; e++) d = b[e],
                            c = Models.Action.get(d._id),
                            f.push(c != null ? c.set(d, {
                                silent: !0
                            }) : (c = new ya(d), Models.Member.add(c, !0), c.postInitialize()));
                            return f
                        };
                        $(rpc).bind("updateModels",
                        function(b, c) {
                            c.idBoard && k(Models.Board.get(c.idBoard), c);
                            c.idMember && l(Models.Member.get(c.idMember), c);
                            c.idOrganization && s(Models.Organization.get(c.idOrganization), c);
                            c.idNotification && o(Models.Notification.get(c.idNotification), c);
                            c.idAction && j(c)
                        });
                        u = function(c, e) {
                            var t,
                            f,
                            P,
                            g,
                            h,
                            i;
                            P = {
                                Member: ya,
                                Organization: ib,
                                Action: d,
                                Board: D,
                                Notification: hb
                            };
                            if (c.typeName !== e) return ! 1;
                            i = c.deltas;
                            g = 0;
                            for (h = i.length; g < h; g++) t = i[g],
                            (f = Models[e].get(t._id)) ? m(f, t) : (f = new P[e](t), Models[e].add(f)),
                            b(f);
                            return ! 0
                        };
                        m = function(b, c) {
                            var d;
                            b.set(c, {
                                fromServer: !0
                            });
                            return (d = Models[b.typeName]) != null ? d.trigger("change", b) : void 0
                        };
                        k = function(c, d) {
                            var e,
                            t,
                            f,
                            P,
                            g,
                            h,
                            i,
                            j;
                            P = {
                                Member: ya,
                                Organization: ib,
                                Card: da
                            };
                            if (!u(d, "Board")) if (g = d.typeName, c) {
                                j = d.deltas;
                                h = 0;
                                for (i = j.length; h <
                                i; h++) e = j[h],
                                P[g] != null ? ((f = Models[g].get(e._id)) ? m(f, e) : (t = P[g], f = new t(e), Models[g].add(f)), b(f), g === "Card" && f.ready(function() {
                                    var b;
                                    return (b = f.getList()) != null ? b.refreshCardList() : void 0
                                })) : (t = c["get" + g], (f = typeof t === "function" ? t(e._id) : void 0) ? m(f, e) : (t = c["" + z.lowerCaseFirstChar(g) + "List"], t != null && t.add([e])))
                            } else console.log("UNHANDLED UPDATE MESSAGE")
                        };
                        l = function(b, c) {
                            return u(c, "Member") ? void 0: console.log("UNHANDLED UPDATE MESSAGE")
                        };
                        o = function(b, c) {
                            return u(c, "Notification") ? void 0: console.log("UNHANDLED UPDATE MESSAGE")
                        };
                        j = function(b) {
                            return u(b, "Action") ? void 0: console.log("UNHANDLED UPDATE MESSAGE")
                        };
                        s = function(b, c) {
                            var d,
                            e,
                            t,
                            f,
                            v,
                            P,
                            g,
                            h;
                            f = {
                                Member: ya
                            };
                            if (!u(c, "Organization")) if (v = c.typeName, b) {
                                h = c.deltas;
                                P = 0;
                                for (g = h.length; P < g; P++) d = h[P],
                                f[v] ? (e = Models[v].get(d._id)) ? m(e, d) : (t = f[v], Models[v].add(new t(d))) : (e = b["get" + v], (e = typeof e === "function" ? e(d._id) : void 0) ? m(e, d) : (t = b["" + z.lowerCaseFirstChar(v) + "List"], t != null && t.add([d])));
                                return e
                            } else return console.log("UNHANDLED UPDATE MESSAGE")
                        };
                        $(rpc).bind("deleteModels",
                        function(b, c) {
                            var d,
                            e,
                            t,
                            f,
                            v;
                            if (d = Models.Board.get(c.idBoard)) {
                                v = c.deltas;
                                t = 0;
                                for (f = v.length; t < f; t++) switch (e = v[t], c.typeName) {
                                case "BoardInvitation":
                                    d.boardInvitationList.remove(e._id);
                                    break;
                                case "CheckItem":
                                    d.checklistList.each(function(b) {
                                        b.checkItemList.remove(e._id)
                                    });
                                    break;
                                default:
                                    console.log("UNHANDLED DELETE MESSAGE")
                                }
                            }
                            if (d = Models.Organization.get(c.idOrganization)) {
                                v = c.deltas;
                                t = 0;
                                for (f = v.length; t < f; t++) switch (e = v[t], c.typeName) {
                                case "OrganizationInvitation":
                                    d.invitationList.remove(e._id)
                                }
                            }
                            c.idNotification !=
                            null ? Models.Notification.remove(c.idNotification) : c.idAction != null && Models.Action.remove(c.idAction)
                        });
                        return i
                    } (),
                    Yb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.Model);
                        b.prototype.bindEvents = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            b = arguments[0];
                            d = 2 <= arguments.length ? Cb.call(arguments, 1) : [];
                            e = 0;
                            for (f = d.length; e < f; e++) c = d[e],
                            this.bind(c, b);
                            return this
                        };
                        b.prototype.bindOnce = function(b, c) {
                            return this.unbind(b, c).bind(b, c)
                        };
                        return b
                    } (),
                    La = function() {
                        function b() {
                            this.withIdParents =
                            k(this.withIdParents, this);
                            this.onId = k(this.onId, this);
                            this.setReady = k(this.setReady, this);
                            this.ready = k(this.ready, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Yb);
                        b.prototype.ready = function(b) {
                            if (b) if (this.isReady) b();
                            else {
                                if (!this.waitingForReady) this.waitingForReady = [];
                                this.waitingForReady.push(b)
                            }
                        };
                        b.prototype.setReady = function() {
                            var b,
                            c,
                            d,
                            e;
                            this.isReady = !0;
                            if (this.waitingForReady) {
                                c = this.waitingForReady;
                                this.waitingForReady = null;
                                d = 0;
                                for (e = c.length; d < e; d++) b = c[d],
                                typeof b === "function" &&
                                b();
                                delete c
                            }
                        };
                        b.prototype.onId = function(b) {
                            var c,
                            d;
                            d = this;
                            d.id ? b(d.id) : (c = function() {
                                c = function() {};
                                return _.defer(function() {
                                    d.unbind("change:id", c);
                                    return b(d.id)
                                })
                            },
                            d.bind("change:id", c))
                        };
                        b.prototype.withIdParents = function(b) {
                            b([])
                        };
                        return b
                    } (),
                    ma = function() {
                        function b() {
                            this.getView = k(this.getView, this);
                            this.clearCache = k(this.clearCache, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, La);
                        b.prototype.destructor = function() {
                            return this.clearCache()
                        };
                        b.prototype.destroy = function() {
                            this.destructor();
                            return b.__super__.destroy.apply(this, arguments)
                        };
                        b.prototype.clearCache = function() {
                            var b,
                            c,
                            d;
                            if (this.viewCache) {
                                d = this.viewCache;
                                for (b in d) c = d[b],
                                typeof c.destructor === "function" && c.destructor(),
                                delete c;
                                return delete this.viewCache
                            }
                        };
                        b.prototype.getView = function(b, c, d) {
                            var e,
                            f;
                            f = b.prototype.uniqueId();
                            e = c ? f + ":" + c: f;
                            if (!this.viewCache) this.viewCache = {};
                            c = this.viewCache;
                            if (!c[e]) {
                                if (!b || !_.isFunction(b)) {
                                    R("render", "view does not exist", f);
                                    return
                                }
                                d = _.extend({
                                    model: this
                                },
                                d);
                                c[e] = new b(d)
                            }
                            c[e].delegateEvents();
                            return c[e]
                        };
                        return b
                    } (),
                    Ca = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.Collection);
                        b.prototype.bindEvents = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            b = arguments[0];
                            d = 2 <= arguments.length ? Cb.call(arguments, 1) : [];
                            e = 0;
                            for (f = d.length; e < f; e++) c = d[e],
                            this.bind(c, b);
                            return this
                        };
                        b.prototype.onAddRemove = function(b) {
                            this.bindEvents(b, "add", "remove", "refresh");
                            return this
                        };
                        return b
                    } (),
                    xa = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ca);
                        b.prototype.create = function(c,
                        d) {
                            c = b.__super__.create.apply(this, arguments);
                            Models.finishInit(c)
                        };
                        b.prototype.add = function(c, d) {
                            var e;
                            this.options && this.options.model && (_.isArray(c) || (c = [c]), e = this, c = _.map(c,
                            function(b) {
                                var c; (c = !b.cid) && (b = new e.model(b));
                                b.collection = e;
                                c && Models.finishInit(b);
                                return b
                            }));
                            return b.__super__.add.apply(this, arguments)
                        };
                        b.prototype.addPlaceholder = function(b) {
                            var c;
                            c = _.uniqueId("placeholder");
                            _.extend(b, {
                                id: c
                            });
                            this.add(b);
                            return k(function() {
                                return this.remove(c, {
                                    silent: !0
                                })
                            },
                            this)
                        };
                        return b
                    } ();
                    A("modelWithPreferences") && (Ya = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.prefNames = [];
                        b.prototype.toJSON = function(c) {
                            var d,
                            e,
                            f,
                            g,
                            h;
                            c == null && (c = {});
                            d = b.__super__.toJSON.apply(this, arguments);
                            if (c.prefs) {
                                h = this.prefNames;
                                f = 0;
                                for (g = h.length; f < g; f++) e = h[f],
                                d[e] = this.getPref(e),
                                d["" + e + "_" + this.getPref(e)] = !0
                            }
                            return d
                        };
                        b.prototype.getPref = function(b) {
                            var c;
                            return (c = this.get("prefs")) != null ? c[b] : void 0
                        };
                        b.prototype.setPref = function(b, c) {
                            var d;
                            d = {};
                            d[b] = c;
                            return this.set({
                                prefs: d
                            })
                        };
                        return b
                    } (), Ka = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ya);
                        b.prototype.myPrefNames = [];
                        b.prototype.myPrefDefaults = {};
                        b.prototype.toJSON = function(c) {
                            var d,
                            e,
                            f,
                            g,
                            h;
                            c == null && (c = {});
                            d = b.__super__.toJSON.apply(this, arguments);
                            if (c.prefs) {
                                h = this.myPrefNames;
                                f = 0;
                                for (g = h.length; f < g; f++) e = h[f],
                                d[e] = this.getPref(e),
                                d["" + e + "_" + this.getPref(e)] = !0
                            }
                            return d
                        };
                        b.prototype.initMyPrefs = function(b) {
                            return this.myPrefs.set(b, {
                                silent: !0
                            })
                        };
                        b.prototype.getPref = function(c) {
                            var d,
                            e,
                            f;
                            return Ha.call(this.myPrefNames,
                            c) >= 0 ? (d = (e = (f = this.myPrefs.get("prefs")) != null ? f[c] : void 0) != null ? e: this.myPrefDefaults[c]) != null ? d: !0: b.__super__.getPref.apply(this, arguments)
                        };
                        b.prototype.setPref = function(c, d) {
                            var e;
                            e = {};
                            e[c] = d;
                            return Ha.call(this.myPrefNames, c) >= 0 ? this.myPrefs.set({
                                prefs: e
                            }) : b.__super__.setPref.apply(this, arguments)
                        };
                        b.prototype.save = function() {
                            this.myPrefs != null && this.myPrefs.save();
                            return b.__super__.save.apply(this, arguments)
                        };
                        return b
                    } ());
                    if (A("memberowner")) q.MemberOwner = {
                        renderMembers: function(b, c) {
                            var d,
                            e;
                            e = this.model;
                            d = $(this.el).find(b);
                            d.html("");
                            e.memberList.sortBy(function(b) {
                                return function() {
                                    if (h.isMe(b)) return "0";
                                    else switch (b.get("status")) {
                                    case "active":
                                        return "1";
                                    case "idle":
                                        return "2";
                                    default:
                                        return "3"
                                    }
                                } () + b.get("fullName")
                            }).forEach(function(b) {
                                b = new c({
                                    model: b,
                                    parent: e
                                });
                                d.append(b.render().el)
                            });
                            DragSort.refreshDraggable();
                            return this
                        },
                        getMemberType: function(b) {
                            var c,
                            d;
                            c = b != null && b.id ? b.id: b;
                            return (d = _.detect(this.get("memberships"), k(function(b) {
                                return b.idMember === c
                            },
                            this))) ? d.memberType:
                            this.get("invited") || _.detect(this.get("invitations"), k(function(b) {
                                return b.idMemberInvited === c
                            },
                            this)) ? "invited": this.organization && _.detect(this.organization.get("memberships"), k(function(b) {
                                return b.idMember === c
                            },
                            this)) ? "org": "public"
                        }
                    };
                    A("invitations") && (Ra = function() {
                        function b() {
                            this.getParent = k(this.getParent, this);
                            this.withIdParents = k(this.withIdParents, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Invitation";
                        b.prototype.initialize = function(b, c) {
                            Api.init(this);
                            R("invitation", c);
                            this.invitationList = c.collection;
                            this.setReady()
                        };
                        b.prototype.withIdParents = function(b) {
                            return this.getParent().onId(function(c) {
                                return b([c])
                            })
                        };
                        b.prototype.getParent = function() {
                            return this.invitationList.options.model
                        };
                        return b
                    } (), bb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ca);
                        b.prototype.model = Ra;
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        b.prototype.comparator = function(b) {
                            return b.get("dateExpires") ? -ja.parse(b.get("dateExpires")) :
                            -Infinity
                        };
                        return b
                    } (), G = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ra);
                        b.prototype.typeName = "BoardInvitation";
                        return b
                    } (), sa = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, bb);
                        b.prototype.model = G;
                        return b
                    } (), ic = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ra);
                        b.prototype.typeName = "OrganizationInvitation";
                        return b
                    } (), jc = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, bb);
                        b.prototype.model =
                        ic;
                        return b
                    } (), yb = function() {
                        function b() {
                            this.removeInvitation = k(this.removeInvitation, this);
                            this.sendInvitations = k(this.sendInvitations, this);
                            this.sendInvitation = k(this.sendInvitation, this);
                            this.keydown = k(this.keydown, this);
                            this.memberClicked = k(this.memberClicked, this);
                            this.toggleSubmitButton = k(this.toggleSubmitButton, this);
                            this.renderSearchResults = k(this.renderSearchResults, this);
                            this.canRemoveInvitation = k(this.canRemoveInvitation, this);
                            this.renderInvitations = k(this.renderInvitations, this);
                            this.search =
                            k(this.search, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "abstract";
                        b.prototype.initialize = function(b) {
                            this.invitationList = b;
                            this.invitationList.onAddRemove(this.renderInvitations).bind("change", this.renderInvitations)
                        };
                        b.prototype.events = {
                            "click .js-remove-invitation": "removeInvitation",
                            "click .js-send-invitations": "sendInvitations",
                            "click .member-list-item.invitable": "memberClicked",
                            keydown: "keydown"
                        };
                        b.prototype.render = function() {
                            $(this.el).html(N.to_html(this.templates.main)).find(".no-results, .search-results, input:submit").hide().end().find(".search-members").click(function(b) {
                                return z.stop(b)
                            }).fixPlaceholder().keyup(_.debounce(this.search,
                            200)).focus();
                            return this.renderInvitations()
                        };
                        b.prototype.search = function() {
                            var b;
                            b = $(this.el).find(".search-members").val().toLowerCase().trim();
                            rpc.invoke(this.rpcSearchFunctionName, [b, this.model.id], k(function(c) {
                                return this.renderSearchResults(b, c)
                            },
                            this))
                        };
                        b.prototype.renderInvitations = function() {
                            var b;
                            b = $(this.el).find(".invited-members");
                            b.empty();
                            this.invitationList.each(k(function(c) {
                                var d,
                                e,
                                f;
                                f = Models.Member.get(c.get("idMemberInviter"));
                                d = {
                                    MemberInviter: f.toJSON(),
                                    idMemberInvited: c.get("idMemberInvited"),
                                    dateExpires: c.get("dateExpires"),
                                    email: c.get("email"),
                                    canRemove: this.canRemoveInvitation(c)
                                };
                                if (d.idMemberInvited && (e = Models.Member.get(d.idMemberInvited), e != null)) d.MemberInvited = e.toJSON();
                                d = $(N.to_html(w.invitation, d, {
                                    member_inline: w.member_inline
                                }));
                                d.find(".inviter .inline-member-container").data("member", f);
                                e != null && d.find(".invitee .inline-member-container").data("member", e);
                                d.data("id", c.get("id"));
                                b.append(d)
                            },
                            this));
                            b.closest(".window-module").toggle(this.invitationList.length > 0);
                            ja.update(this.el);
                            return this
                        };
                        b.prototype.canRemoveInvitation = function() {
                            return ! 0
                        };
                        b.prototype.renderSearchResults = function(b, c) {
                            var d,
                            e,
                            f,
                            v,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m;
                            h = c.members;
                            f = c.invitedEmails;
                            k = c.uninvitedEmails;
                            d = $(this.el);
                            g = _.compact($(".search-results .will-invite").map(function() {
                                return $(this).closest(".member-list-item").data("idMember")
                            }).get());
                            e = d.find(".search-results").empty();
                            j = _.all([f, k, h], _.isEmpty);
                            v = b.trim().length >= 3;
                            d.find(".no-results").toggle(j && v);
                            e.toggle(!j);
                            d = {
                                invited: "invited",
                                joined: "joined",
                                uninvitedExact: "will-invite",
                                uninvitedFuzzy: ""
                            };
                            i = {
                                invited: 2,
                                joined: 3,
                                uninvitedExact: 1,
                                uninvitedFuzzy: 1
                            };
                            j = 0;
                            for (l = k.length; j < l; j++) v = k[j],
                            $(N.to_html(this.templates.email, {
                                email: v,
                                isInvitable: !0,
                                className: "will-invite"
                            })).data({
                                email: v
                            }).appendTo(e);
                            k = 0;
                            for (j = f.length; k < j; k++) v = f[k],
                            $(N.to_html(this.templates.email, {
                                email: v,
                                isInvitable: !1,
                                className: "invited"
                            })).appendTo(e);
                            l = _.sortBy(h,
                            function(b) {
                                return i[b.type] * 1E4 - b.similarity
                            });
                            v = 0;
                            for (j = l.length; v < j; v++) {
                                h = l[v];
                                k = h.type;
                                delete h.type;
                                delete h.similarity;
                                Models.Member.get(h._id) == null && Models.Member.add(new ya(h));
                                f = _.extend({
                                    className: d[k],
                                    isInvitable: k === "uninvitedFuzzy" || k === "uninvitedExact"
                                },
                                h);
                                if (k === "uninvitedFuzzy" && (m = h._id, Ha.call(g, m) >= 0)) f.className = "will-invite";
                                $(N.to_html(this.templates.member, f)).data("idMember", h._id).appendTo(e)
                            }
                            this.toggleSubmitButton();
                            return this
                        };
                        b.prototype.toggleSubmitButton = function() {
                            return $(this.el).find(".js-send-invitations").toggle($(this.el).find(".search-results .will-invite").length > 0)
                        };
                        b.prototype.memberClicked =
                        function(b) {
                            var c;
                            c = $(b.currentTarget).closest(".member-list-item");
                            b.metaKey ? (this.sendInvitation(c), c.removeClass("invitable will-invite").addClass("invited")) : c.toggleClass("will-invite");
                            return this.toggleSubmitButton()
                        };
                        b.prototype.keydown = function(b) {
                            if (z.isSubmitKey(b) && $(this.el).find(".search-results .will-invite").length > 0) return this.sendInvitations(b)
                        };
                        b.prototype.sendInvitation = function(b) {
                            var c,
                            d,
                            e;
                            d = k(function(b) {
                                return this.invitationList.create({
                                    email: b,
                                    idMemberInviter: h.myId()
                                },
                                {
                                    error: k(function(b) {
                                        return this.invitationList.remove(b)
                                    },
                                    this)
                                })
                            },
                            this);
                            e = k(function(b) {
                                return this.invitationList.create({
                                    idMemberInvited: b,
                                    idMemberInviter: h.myId()
                                },
                                {
                                    error: k(function(b) {
                                        return this.invitationList.remove(b)
                                    },
                                    this)
                                })
                            },
                            this);
                            c = b.data("idMember");
                            c != null ? e(c) : d(b.data("email"))
                        };
                        b.prototype.sendInvitations = function(b) {
                            z.stop(b);
                            $(this.el).find(".search-results .will-invite").each(k(function(b, c) {
                                this.sendInvitation($(c).closest(".member-list-item"))
                            },
                            this));
                            $(this.el).find(".search-results").empty().hide();
                            $(this.el).find(".search-members").val("");
                            this.toggleSubmitButton()
                        };
                        b.prototype.removeInvitation = function(b) {
                            var c; (c = this.invitationList.get($(b.currentTarget).closest(".invitation").data("id"))) != null && c.destroy({
                                success: this.search
                            })
                        };
                        return b
                    } ());
                    A("member") && (ya = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Member";
                        b.prototype.nameAttr = "fullName";
                        b.prototype.initialize = function() {
                            Api.init(this)
                        };
                        b.prototype.postInitialize = function() {
                            var b;
                            b = k(function(b, c) {
                                var d,
                                e;
                                e = new b;
                                if (this.isLoggedIn()) return d = k(function() {
                                    return e.refresh(Models[b.prototype.model.prototype.typeName].getList(this.get(c)))
                                },
                                this),
                                this.bind("change:" + c, d),
                                d()
                            },
                            this);
                            this.boardList = b(X, "idBoards");
                            this.boardPinnedList = b(X, "idBoardsPinned");
                            this.boardInvitedList = b(X, "idBoardsInvited");
                            this.organizationList = b(OrganizationList, "idOrganizations");
                            this.organizationInvitedList = b(OrganizationList, "idOrganizationsInvited");
                            this.setReady()
                        };
                        b.prototype.isLoggedIn = function() {
                            return ! this.get("notLoggedIn")
                        };
                        b.prototype.hasAtMe = function(b) {
                            var c;
                            if (!this.isLoggedIn()) return ! 1;
                            c = this.get("fullName").split(/\s+/);
                            return _.detect(c,
                            function(c) {
                                return c.length >= 2 && RegExp("(^|\\W)@" + z.escapeForRegex(c) + "($|\\W)", "i").test(b)
                            })
                        };
                        b.prototype.viewBoardProfile = function(b) {
                            var c;
                            Y("memberBoardProfile", b);
                            if (b != null && b.id) b = b.id;
                            c = this.getView(Xa, b, {
                                board: Models.Board.get(b)
                            });
                            Controller.saveMemberBoardProfileLocation(this, b);
                            return W.show({
                                view: c,
                                hide: k(function() {
                                    return Controller.saveBoardLocation(b)
                                },
                                this)
                            })
                        };
                        b.prototype.getMembershipData = function(b) {
                            var c,
                            d,
                            e;
                            e = b.ownedByMember(this);
                            c = b.owned();
                            d = h.me();
                            return {
                                canRemove: b.isMember(d) && !e,
                                canMakeAdmin: c && !e,
                                canRemoveAdmin: c && e && h.isMe(this) && _.detect(b.get("memberships"),
                                function(b) {
                                    return b.idMember !== d.id && b.memberType === "admin"
                                })
                            }
                        };
                        b.prototype.owned = function() {
                            var b;
                            return (b = h.me()) && b === this
                        };
                        b.prototype.setPref = function(b, c) {
                            var d;
                            d = {};
                            d[b] = c;
                            return this.set({
                                prefs: d
                            })
                        };
                        return b
                    } (), ta = function() {
                        function b() {
                            this.idList = k(this.idList, this);
                            b.__super__.constructor.apply(this,
                            arguments)
                        }
                        y(b, Ca);
                        b.prototype.model = ya;
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        b.prototype.idList = function() {
                            return this.pluck("_id")
                        };
                        return b
                    } (), wa = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            this.model.bind("change", this.render)
                        };
                        b.prototype.render = function() {
                            $(this.el).html(w.fill("member_detail", this.model.toJSON(), {
                                editable: h.isMe(this.model)
                            }));
                            setTimeout(k(function() {
                                this.renderMainContent()
                            },
                            this), 0);
                            return this
                        };
                        b.prototype.setActiveView = function(b) {
                            $(b).addClass("active")
                        };
                        return b
                    } (), Xb = function() {
                        function b() {
                            this.render = k(this.render, this);
                            this.showAll = k(this.showAll, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-more-members-voted": "showAll"
                        };
                        b.prototype.initialize = function() {
                            return this.model.bind("change:idMembersVoted", k(function() {
                                return this.render()
                            },
                            this))
                        };
                        b.prototype.showAll = function() {
                            this.render(!0);
                            return L.calc_top()
                        };
                        b.prototype.render =
                        function(b) {
                            var c,
                            d,
                            e;
                            e = Models.Member.getList(this.model.get("idMembersVoted") || []);
                            c = {
                                members: function() {
                                    var b,
                                    c,
                                    t;
                                    t = [];
                                    b = 0;
                                    for (c = e.length; b < c; b++) d = e[b],
                                    t.push(d.toJSON());
                                    return t
                                } ()
                            };
                            if (!b) c.members = c.members.slice(0, 48),
                            c.fewMembers = e.length < 14,
                            c.moreMembers = e.length > 48,
                            c.lengthDiff = e.length - 48;
                            $(this.el).html(w.fill("members_voted", c));
                            return this
                        };
                        return b
                    } (), qa = function() {
                        function b() {
                            this.loadMoreActions = k(this.loadMoreActions, this);
                            this.renderActions = k(this.renderActions, this);
                            this.renderMainContent =
                            k(this.renderMainContent, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, wa);
                        b.prototype.events = {
                            "click .js-more-actions": "loadMoreActions"
                        };
                        b.prototype.initialize = function() {
                            b.__super__.initialize.apply(this, arguments);
                            Models.Action.bind("add:" + this.model.id, this.renderActions);
                            return this.loadMoreActions()
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = this.model.toJSON();
                            b.editable = h.isMe(this.model);
                            b.bioHtml = Ja.textAsHtml(b.bio, {
                                convertNewlines: !0
                            });
                            b.emptyActions = Models.Action.getListForModel(this.model.id).length ===
                            0;
                            $(this.el).find(".window-main-col").html(w.fill("member_profile", b, {
                                editable: h.isMe(this.model)
                            }));
                            this.model.organizationList.length > 0 ? (b = new ac({
                                model: this.model
                            }), $(this.el).find(".list-orgs").html(b.render().el)) : $(this.el).find(".list-orgs").closest(".window-module").hide();
                            this.setActiveView(".js-member-profile");
                            return this.renderActions()
                        };
                        b.prototype.renderActions = function() {
                            var b;
                            b = $(this.el).find(".list-actions"); (new c(Models.Action.getListForModel(this.model.id))).renderTo(b, {
                                key: this.model.id,
                                model: this.model,
                                showBoard: !0,
                                showOrganization: !0
                            });
                            this.loading || this.model.dateFirstAction != null && _.isEqual(this.getDateOldestAction(), this.model.dateFirstAction) ? $(this.el).find(".js-more-actions").hide() : $(this.el).find(".js-more-actions").show();
                            return this
                        };
                        b.prototype.getDateOldestAction = function() {
                            var b,
                            c;
                            return (b = (c = _.min(Models.Action.getListForModel(this.model.id),
                            function(b) {
                                return b.date
                            })) != null ? c.date: void 0) != null ? b: new Date
                        };
                        b.prototype.loadMoreActions = function() {
                            if (!this.loading) return this.loading =
                            !0,
                            rpc.invoke("getActions", [{
                                member: this.model.id
                            },
                            {
                                count: 25,
                                oldest: this.getDateOldestAction()
                            }], k(function(b) {
                                this.loading = !1;
                                if (b.dateFirstAction != null) this.model.dateFirstAction = new Date(b.dateFirstAction);
                                Models.Member.update(b.members);
                                b.actions.length > 0 ? Models.Action.update(b.actions) : $(this.el).find(".js-more-actions").hide()
                            },
                            this), k(function() {
                                return this.loading = !1
                            },
                            this))
                        };
                        return b
                    } (), Ea = function() {
                        function b() {
                            this.loadMoreNotifications = k(this.loadMoreNotifications, this);
                            this.destructor =
                            k(this.destructor, this);
                            this.renderNotificationList = k(this.renderNotificationList, this);
                            this.renderSingleNotification = k(this.renderSingleNotification, this);
                            this.renderMainContent = k(this.renderMainContent, this);
                            this.initialize = k(this.initialize, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, wa);
                        b.prototype.events = {
                            "click .js-more-notifications": "loadMoreNotifications"
                        };
                        b.prototype.initialize = function() {
                            this.notificationCount = 20;
                            Models.Notification.bind("add", this.renderSingleNotification);
                            Models.Notification.bind("remove", this.renderNotificationList);
                            Models.Notification.bind("add", k(function() {
                                return this.notificationCount++
                            },
                            this));
                            return Models.Notification.bind("remove", k(function() {
                                return this.notificationCount--
                            },
                            this))
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = this.model.toJSON();
                            b.editable = h.isMe(this.model);
                            b.empty = Models.Notification.all().length === 0;
                            $(this.el).find(".window-main-col").html(w.fill("member_notifications", b, {
                                editable: h.isMe(this.model)
                            }));
                            this.options.isMore ||
                            $(this.el).find(".js-more-notifications").hide();
                            this.renderNotificationList();
                            this.setActiveView(".js-member-notifications");
                            return this
                        };
                        b.prototype.renderSingleNotification = function(b) {
                            var c;
                            $(this.el).find(".empty-list").remove();
                            c = $(this.el).find(".list-notifications");
                            b = b.getView(Fa);
                            return c.prepend(b.render().el)
                        };
                        b.prototype.renderNotificationList = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            b = $(this.el).find(".list-notifications");
                            b.empty();
                            f = Models.Notification.sortedByDateDescending();
                            d = 0;
                            for (e = f.length; d <
                            e; d++) c = f[d],
                            c = c.getView(Fa),
                            b.append(c.render().el);
                            this.setActiveView(".js-member-notifications");
                            return this
                        };
                        b.prototype.destructor = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            Models.Notification.unbind("add", this.renderSingleNotification);
                            e = Models.Notification.all();
                            f = [];
                            c = 0;
                            for (d = e.length; c < d; c++) b = e[c],
                            b.get("isUnread") && f.push(b.markRead());
                            return f
                        };
                        b.prototype.loadMoreNotifications = function() {
                            return Models.loadMoreNotificationData(this.model.get("username"), this.notificationCount, k(function(b) {
                                this.notificationCount +=
                                20;
                                this.renderNotificationList();
                                if (!b.isMore) return $(this.el).find(".js-more-notifications").hide()
                            },
                            this))
                        };
                        return b
                    } (), Bb = function() {
                        function b() {
                            this.renderMainContent = k(this.renderMainContent, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, wa);
                        b.prototype.initialize = function() {
                            b.__super__.initialize.apply(this, arguments);
                            return this.model.boardList.onAddRemove(this.renderMainContent)
                        };
                        b.prototype.renderMainContent = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            v;
                            $(this.el).find(".window-main-col").html(w.fill("member_boards",
                            {},
                            {
                                owned: this.model.owned()
                            }));
                            d = $(this.el).find(".js-boards-list").html("");
                            c = this.model.organizationList.models;
                            e = this.model.boardList.models;
                            f = 0;
                            for (v = e.length; f < v; f++) b = e[f],
                            b.organization != null && (_.any(c,
                            function(c) {
                                return b.get("idOrganization") === c.id
                            }) || c.push(b.organization));
                            f = 0;
                            for (v = c.length; f < v; f++) e = c[f],
                            e = this.model.getView($b, "memberBoards_" + e.id, {
                                organization: e
                            }),
                            d.append(e.render().el);
                            e = this.model.getView($b, "memberBoards", {
                                organization: null
                            });
                            d.append(e.render().el);
                            h.isMe(this.model) &&
                            (this.model.get("idOrganizationsInvited").length && (c = new lc({
                                model: this.model
                            }), d.prepend(c.render().el)), this.model.get("idBoardsInvited").length && (c = new K({
                                model: this.model
                            }), d.prepend(c.render().el)));
                            this.setActiveView(".js-member-boards");
                            return this
                        };
                        return b
                    } (), zb = function() {
                        function b() {
                            this.saveChanges = k(this.saveChanges, this);
                            this.clickSetting = k(this.clickSetting, this);
                            this.showPasswordError = k(this.showPasswordError, this);
                            this.showError = k(this.showError, this);
                            this.renderMainContent = k(this.renderMainContent,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, wa);
                        b.prototype.events = {
                            "click .js-save-changes": "saveChanges",
                            "click a": "clickSetting"
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = this.model.toJSON();
                            $(this.el).find(".window-main-col").html(w.fill("member_account", b, {
                                editable: h.isMe(this.model)
                            }));
                            b = new ac({
                                model: this.model
                            });
                            $(this.el).find(".list-orgs").html(b.render().el);
                            this.setActiveView(".js-member-account");
                            return this
                        };
                        b.prototype.getValue = function(b) {
                            return $(this.el).find("[name=" +
                            b + "]").val()
                        };
                        b.prototype.showError = function(b) {
                            return $(this.el).find("#error").text(b != null ? b: "error").show()
                        };
                        b.prototype.showPasswordError = function(b) {
                            return $(this.el).find("#password-error").text(b != null ? b: "error").show()
                        };
                        b.prototype.clickSetting = function(b) {
                            var c,
                            d;
                            if (c = $(b.target).closest(".pref").attr("name")) d = $(b.target).attr("value"),
                            d = function() {
                                switch (d) {
                                case "true":
                                    return ! 0;
                                case "false":
                                    return ! 1;
                                default:
                                    return d
                                }
                            } (),
                            this.model.setPref(c, d),
                            this.model.save()
                        };
                        b.prototype.saveChanges =
                        function(b) {
                            var c,
                            d,
                            e,
                            f,
                            v;
                            z.preventDefault(b);
                            c = {};
                            $(this.el).find("#error, #password-error").hide();
                            v = ["fullName", "initials", "username"];
                            d = 0;
                            for (e = v.length; d < e; d++) b = v[d],
                            c[b] = $.trim(this.getValue(b));
                            c.username = c.username.toLowerCase().replace(/[^a-z0-9]/g, "");
                            c.initials = c.initials.toUpperCase().replace(/[^A-Z]/g, "");
                            e = this.getValue("oldpassword");
                            b = this.getValue("password");
                            d = this.getValue("password2");
                            f = k(function(b) {
                                return this.model.save(c, {
                                    waitForServer: !0,
                                    success: function() {
                                        b ? Controller.memberBoardsView(c.username,
                                        {
                                            message: {
                                                type: "confirmation",
                                                text: "Password changed."
                                            }
                                        }) : Controller.memberBoardsView(c.username)
                                    },
                                    error: k(function(b, c) {
                                        this.showError(c);
                                        z.scrollToTop()
                                    },
                                    this)
                                })
                            },
                            this);
                            b || d ? b !== d ? this.showPasswordError("Passwords must match.") : this.model.api.updatePassword({
                                oldPassword: e,
                                newPassword: b
                            },
                            function() {
                                return f(!0)
                            },
                            this.showPasswordError) : f(!1)
                        };
                        return b
                    } (), va = function() {
                        function b() {
                            this.showMenu = k(this.showMenu, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b,
                        S);
                        b.prototype.className = "member";
                        b.prototype.events = {
                            click: "showMenu"
                        };
                        b.prototype.initialize = function() {
                            var b,
                            c;
                            this.enablePopupMenu = (b = this.options.enablePopupMenu) != null ? b: !0;
                            if (this.options.goToBoardProfile) this.goToBoardProfile = !0;
                            this.showStatus = (c = this.options.showStatus) != null ? c: !0;
                            this.model.bind("change", this.render)
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            R("render", "rendering " + this.constructor.name + " " + this.model.get("fullName"));
                            b = this.model.toJSON();
                            b.showStatus = this.showStatus;
                            c = k(function(b) {
                                b =
                                _.detect(b.get("memberships"), k(function(b) {
                                    return b.idMember === this.model.id
                                },
                                this));
                                return (b != null ? b.memberType: void 0) === "admin"
                            },
                            this);
                            if (this.showBoardAdmin) b.isBoardAdmin = c(this.getBoard());
                            if (this.showOrganizationAdmin) b.isOrganizationAdmin = c(this.getOrganization());
                            $(this.el).html(N.to_html(w.member, b));
                            this.enablePopupMenu || $(this.el).addClass("no-menu");
                            $(this.el).data("id", this.model.id);
                            return this
                        };
                        b.prototype.showMenu = function(b) {
                            var c,
                            d,
                            e;
                            if (this.doClicks() && this.enablePopupMenu || this.goToBoardProfile) {
                                z.stop(b);
                                if (this.goToBoardProfile && (d = this.getBoard())) {
                                    this.model.viewBoardProfile(this.getBoard());
                                    return
                                }
                                this.options.goToProfile ? Controller.memberProfileView(this.model.get("username")) : (c = $(b.target).parents().add(q), e = function() {
                                    L.hide()
                                },
                                b = $(b.currentTarget).closest(".member,.inline-member-container"), L.toggle({
                                    elem: b,
                                    top: b.hasClass("member") ? 35: 16,
                                    view: this.getMenuView(),
                                    hidden: function() {
                                        c.unbind("scroll", e)
                                    }
                                }), c.scroll(e))
                            }
                        };
                        b.prototype.doClicks = function() {
                            return ! DragSort.sorting
                        };
                        return b
                    } (), vc =
                    function() {
                        function b() {
                            this.getMenuView = k(this.getMenuView, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, va);
                        b.prototype.getBoard = function() {
                            return this.options.board
                        };
                        b.prototype.getMenuView = function() {
                            return this.model.getView(g, this.model.cid)
                        };
                        return b
                    } (), gb = function() {
                        function b() {
                            this.getMenuView = k(this.getMenuView, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, va);
                        b.prototype.getMenuView = function() {
                            return this.model.getView(g, this.model.cid)
                        };
                        return b
                    } (), Oa = function() {
                        function b() {
                            this.getMenuView =
                            k(this.getMenuView, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, va);
                        b.prototype.getMenuView = function() {
                            var b;
                            b = this.options.parent;
                            return this.model.getView(V, "card_" + b.cid, {
                                card: b
                            })
                        };
                        return b
                    } (), Db = function() {
                        function b() {
                            this.getMenuView = k(this.getMenuView, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, va);
                        b.prototype.showBoardAdmin = !0;
                        b.prototype.goToBoardProfile = !0;
                        b.prototype.getBoard = function() {
                            return this.options.parent
                        };
                        b.prototype.getMenuView = function() {
                            return this.model.getView(x,
                            "board", {
                                board: this.options.parent
                            })
                        };
                        return b
                    } (), Eb = function() {
                        function b() {
                            this.getMenuView = k(this.getMenuView, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, va);
                        b.prototype.showOrganizationAdmin = !0;
                        b.prototype.getOrganization = function() {
                            return this.options.parent
                        };
                        b.prototype.getMenuView = function() {
                            return this.model.getView(oc, "org", {
                                organization: this.options.parent
                            })
                        };
                        return b
                    } (), g = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "activity-member-menu";
                        b.prototype.render = function() {
                            $(this.el).html(w.fillMenu("member_on_activity_menu", this.model.toJSON()));
                            return this
                        };
                        return b
                    } (), Pa = function() {
                        function b() {
                            this.render = k(this.render, this);
                            this.removeAdmin = k(this.removeAdmin, this);
                            this.makeAdmin = k(this.makeAdmin, this);
                            this.removeMember = k(this.removeMember, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-remove-member": "removeMember",
                            "click .js-make-admin": "makeAdmin",
                            "click .js-remove-admin": "removeAdmin"
                        };
                        b.prototype.removeMember = function() {
                            L.hide();
                            this.parent.memberList.remove(this.model);
                            this.parent.api.removeMember(this.model.id)
                        };
                        b.prototype.makeAdmin = function() {
                            L.hide();
                            this.parent.api.addAdmin(this.model.id)
                        };
                        b.prototype.removeAdmin = function() {
                            L.hide();
                            this.parent.api.removeAdmin(this.model.id)
                        };
                        b.prototype.getExtraData = function() {
                            return {}
                        };
                        b.prototype.render = function() {
                            var b;
                            b = _.extend(this.model.toJSON(), this.getExtraData(), this.model.getMembershipData(this.parent));
                            $(this.el).html(w.fillMenu(this.templateName,
                            b, {
                                editable: this.parent.editable()
                            }));
                            return this
                        };
                        return b
                    } (), oc = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Pa);
                        b.prototype.className = "organization-member-menu";
                        b.prototype.templateName = "member_on_org_menu";
                        b.prototype.initialize = function() {
                            this.parent = this.options.organization
                        };
                        return b
                    } (), x = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Pa);
                        b.prototype.className = "board-member-menu";
                        b.prototype.templateName = "member_on_board_menu";
                        b.prototype.initialize =
                        function() {
                            this.parent = this.options.board
                        };
                        b.prototype.getExtraData = function() {
                            return {
                                boardProfileUrl: Controller.getMemberBoardProfileUrl(this.model.get("username"), this.parent.id)
                            }
                        };
                        return b
                    } (), V = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "card-member-menu";
                        b.prototype.events = {
                            "click .js-remove-member": "removeMember"
                        };
                        b.prototype.initialize = function() {
                            this.card = this.options.card
                        };
                        b.prototype.render = function() {
                            $(this.el).html(w.fillMenu("member_on_card_menu",
                            this.model.toJSON(), {
                                editable: this.card.editable()
                            }));
                            return this
                        };
                        b.prototype.removeMember = function() {
                            var b;
                            L.hide();
                            b = this.model.id;
                            this.card.removeMember(b);
                            $("#board").hasClass("filtering") && (b = Models.Member.get(b).get("username"), $(this.card.view.el).removeClass("assigned-to-" + b), I.refreshMemberFilters())
                        };
                        return b
                    } (), Ab = function() {
                        function b() {
                            this.onReopen = k(this.onReopen, this);
                            this.getList = k(this.getList, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, o);
                        b.prototype.getList = function() {
                            return this.model.boardList
                        };
                        b.prototype.getTitle = function() {
                            return "Closed Boards"
                        };
                        b.prototype.getEmptyMessage = function() {
                            return "No boards have been closed"
                        };
                        b.prototype.onReopen = function(b) {
                            return Controller.displayBoard({
                                idBoard: b.id
                            })
                        };
                        return b
                    } (), Xa = function() {
                        function b() {
                            this.loadMoreActions = k(this.loadMoreActions, this);
                            this.removeAdmin = k(this.removeAdmin, this);
                            this.makeAdmin = k(this.makeAdmin, this);
                            this.removeMember = k(this.removeMember, this);
                            this.renderActionList = k(this.renderActionList, this);
                            this.render = k(this.render,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.initialize = function() {
                            this.board = this.options.board;
                            this.board.memberList.onAddRemove(this.render);
                            Models.Action.bind("add:" + this.model.id, this.renderActionList);
                            this.updateOldestKnownActionDate();
                            return this.loadMoreActions()
                        };
                        b.prototype.events = {
                            "click .js-remove-member": "removeMember",
                            "click .js-make-admin": "makeAdmin",
                            "click .js-remove-admin": "removeAdmin",
                            "click .js-more-actions": "loadMoreActions"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = _.extend(this.model.toJSON(), this.model.getMembershipData(this.board));
                            $(this.el).html(w.fill("board_member_profile", b));
                            return this.renderActionList()
                        };
                        b.prototype.renderActionList = function() {
                            var b;
                            b = $(this.el).find(".list-actions");
                            this.updateOldestKnownActionDate(); (new c(Models.Action.getListForModel(this.model.id))).renderTo(b, {
                                key: this.model.id,
                                model: this.model,
                                oldest: this.model.dateOldestKnownAction
                            });
                            this.loading || this.model.dateFirstAction != null && _.isEqual(this.model.dateOldestKnownAction,
                            this.model.dateFirstAction) ? $(this.el).find(".js-more-actions").hide() : $(this.el).find(".js-more-actions").show();
                            return this
                        };
                        b.prototype.removeMember = function() {
                            this.board.memberList.remove(this.model);
                            this.board.api.removeMember(this.model.id);
                            W.hide()
                        };
                        b.prototype.makeAdmin = function() {
                            this.board.api.addAdmin(this.model.id, this.render)
                        };
                        b.prototype.removeAdmin = function() {
                            this.board.api.removeAdmin(this.model.id, this.render)
                        };
                        b.prototype.updateOldestKnownActionDate = function() {
                            if (this.model.dateOldestKnownAction ==
                            null || this.model.dateOldestKnownAction > this.board.dateOldestKnownAction) this.model.dateOldestKnownAction = _(Models.Action.getListForModel(this.model.id)).chain().filter(k(function(b) {
                                return b.date >= this.board.dateOldestKnownAction
                            },
                            this)).min(function(b) {
                                return b.date.getTime()
                            }).value(),
                            this.model.dateOldestKnownAction = this.model.dateOldestKnownAction != null ? this.model.dateOldestKnownAction.date: new Date
                        };
                        b.prototype.loadMoreActions = function() {
                            if (!this.loading) return this.loading = !0,
                            rpc.invoke("getActions",
                            [{
                                board: this.board.id,
                                member: this.model.id
                            },
                            {
                                count: 25,
                                oldest: this.model.dateOldestKnownAction
                            }], k(function(b) {
                                this.loading = !1;
                                if (b.dateFirstAction != null) this.model.dateFirstAction = new Date(b.dateFirstAction);
                                Models.Member.update(b.members);
                                if (b.actions.length > 0) this.model.dateOldestKnownAction = new Date(_.last(b.actions).date),
                                Models.Action.update(b.actions)
                            },
                            this), k(function() {
                                return this.loading = !1
                            },
                            this))
                        };
                        return b
                    } ());
                    A("board") && (D = function() {
                        function b() {
                            this.getCheckItem = k(this.getCheckItem,
                            this);
                            this.getBoardInvitation = k(this.getBoardInvitation, this);
                            this.getChecklist = k(this.getChecklist, this);
                            this.getList = k(this.getList, this);
                            this.getCard = k(this.getCard, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ka);
                        b.prototype.typeName = "Board";
                        b.prototype.initialize = function() {
                            Api.init(this);
                            this.myPrefs = new BoardPreference({
                                idBoard: this.id
                            })
                        };
                        b.prototype.postInitialize = function() {
                            var b;
                            this.listList = new Vb(this.get("lists") || [], {
                                model: this
                            });
                            this.boardInvitationList = new sa(this.get("invitations") ||
                            [], {
                                model: this
                            });
                            this.checklistList = new $a(this.get("checklists") || [], {
                                model: this
                            });
                            this.dateOldestKnownAction = (b = _.min(Models.Action.getListForModel(this.id),
                            function(b) {
                                return b.date
                            })) != null ? b.date: void 0;
                            this.memberList = new ta;
                            b = k(function() {
                                this.memberList.refresh(Models.Member.getList(_.pluck(this.get("memberships"), "idMember") || []), {
                                    model: this
                                })
                            },
                            this);
                            this.bind("change:memberships", b);
                            b();
                            this.bind("change:lists", k(function() {
                                this.listList.refresh(this.get("lists") || [], {
                                    model: this
                                })
                            },
                            this));
                            b = k(function() {
                                return this.organization = Models.Organization.get(this.get("idOrganization"))
                            },
                            this);
                            this.bind("change:idOrganization", b);
                            b();
                            this.checklistList.each(function(b) {
                                Models.finishInit(b);
                                b.checkItemList.each(function(b) {
                                    Models.finishInit(b)
                                })
                            });
                            this.listList.each(function(b) {
                                Models.finishInit(b)
                            });
                            this.listList.each(function(b) {
                                b.cardList.each(function(b) {
                                    Models.finishInit(b)
                                })
                            });
                            this.setReady()
                        };
                        b.prototype.close = function() {
                            this.set({
                                closed: !0
                            });
                            this.save()
                        };
                        b.prototype.reopen = function() {
                            this.set({
                                closed: !1
                            });
                            this.save()
                        };
                        b.prototype.toJSON = function(c) {
                            var d;
                            c == null && (c = {});
                            d = b.__super__.toJSON.apply(this, arguments);
                            if (c.org && this.organization != null) d.hasOrg = !0,
                            d.org = this.organization.toJSON();
                            if (c.url) d.url = Controller.getBoardUrl(this.id);
                            if (c.pinned) d.pinned = this.isPinned();
                            return d
                        };
                        b.prototype.calcPos = function(b, c) {
                            return z.calcPos(b, this.listList, c,
                            function(b) {
                                return ! b.get("closed")
                            })
                        };
                        b.prototype.getCard = function(b) {
                            return Models.Card.get(b)
                        };
                        b.prototype.getList = function(b) {
                            return this.listList.get(b)
                        };
                        b.prototype.getChecklist = function(b) {
                            return this.checklistList.get(b)
                        };
                        b.prototype.getBoardInvitation = function(b) {
                            return this.boardInvitationList.get(b)
                        };
                        b.prototype.getCheckItem = function(b) {
                            var t;
                            var c,
                            d,
                            e,
                            f,
                            v;
                            f = this.checklistList.models;
                            d = 0;
                            for (e = f.length; d < e; d++) if (c = f[d], t = c != null ? (v = c.checkItemList) != null ? v.get(b) : void 0: void 0, c = t) return c
                        };
                        b.prototype.editable = function() {
                            var b;
                            return (b = h.me()) && this.editableByMember(b)
                        };
                        b.prototype.editableByMember = function(b) {
                            return this.isMember(b)
                        };
                        b.prototype.isMember =
                        function(b) {
                            var c;
                            return (c = this.getMemberType(b)) === "normal" || c === "admin"
                        };
                        b.prototype.invited = function() {
                            var b;
                            return (b = h.me()) && this.isMemberInvited(b)
                        };
                        b.prototype.isMemberInvited = function(b) {
                            return this.getMemberType(b) === "invited"
                        };
                        b.prototype.owned = function() {
                            var b;
                            return (b = h.me()) && this.ownedByMember(b)
                        };
                        b.prototype.ownedByMember = function(b) {
                            return this.getMemberType(b) === "admin"
                        };
                        b.prototype.getMemberType = function(b) {
                            return MemberOwner.getMemberType.call(this, b)
                        };
                        b.prototype.isMemberPublic =
                        function(b) {
                            return this.getMemberType(b) === "public"
                        };
                        b.prototype.isMemberOrg = function(b) {
                            return this.getMemberType(b) === "org"
                        };
                        b.prototype.memberMatchesSetting = function(b, c) {
                            switch (this.getPref(c)) {
                            case "public":
                                return h.isLoggedIn();
                            case "org":
                                return ! this.isMemberPublic(b);
                            case "members":
                                return ! this.isMemberPublic(b) && !this.isMemberOrg(b);
                            case "owners":
                                return this.ownedByMember(b);
                            default:
                                return ! 1
                            }
                        };
                        b.prototype.canVote = function(b) {
                            return this.memberMatchesSetting(b, "voting")
                        };
                        b.prototype.canComment =
                        function(b) {
                            return this.memberMatchesSetting(b, "comments")
                        };
                        b.prototype.canInvite = function(b) {
                            return this.memberMatchesSetting(b, "invitations")
                        };
                        b.prototype.prefNames = ["permissionLevel", "voting", "comments", "invitations"];
                        b.prototype.myPrefNames = ["showSidebar", "showSidebarMembers", "showSidebarBoardActions", "showSidebarActivity", "showListGuide"];
                        b.prototype.myPrefDefaults = {
                            showListGuide: !1
                        };
                        b.prototype.getLabelName = function(b) {
                            var c;
                            c = this.get("labelNames");
                            return (c != null ? c[b] : void 0) || ""
                        };
                        b.prototype.isPublic =
                        function() {
                            return this.getPref("permissionLevel") === "public"
                        };
                        b.prototype.isPartiallyLoaded = function() {
                            var b,
                            c,
                            d,
                            e;
                            e = ["memberships", "lists", "idMembersWatching"];
                            c = 0;
                            for (d = e.length; c < d; c++) if (b = e[c], this.get(b) == null) return ! 0;
                            return this.get("invited") ? !0: !1
                        };
                        b.prototype.pin = function(b) {
                            var c;
                            b == null && (b = !0);
                            c = h.me();
                            b ? (Y("pin", this), c.addToSet("idBoardsPinned", this.id)) : (Y("unpin", this), c.pull("idBoardsPinned", this.id));
                            c.save()
                        };
                        b.prototype.isPinned = function() {
                            var b;
                            return h.isLoggedIn() && (b = this.id,
                            Ha.call(h.me().get("idBoardsPinned"), b) >= 0)
                        };
                        b.prototype.responseToInvite = function(b, c) {
                            var d;
                            d = h.me();
                            return d.api.respondToInvitation({
                                accepted: b,
                                idModel: this.id,
                                token: $.cookie("invite-token-" + this.id),
                                modelType: "Board"
                            },
                            function(e) {
                                b && (d.set({
                                    idBoards: e.idBoards,
                                    idBoardsInvited: e.idBoardsInvited
                                }), d.save());
                                typeof c === "function" && c()
                            })
                        };
                        b.prototype.acceptInvite = function(b) {
                            return this.responseToInvite(!0, b)
                        };
                        b.prototype.rejectInvite = function(b) {
                            return this.responseToInvite(!1, b)
                        };
                        return b
                    } (), X =
                    function() {
                        function b() {
                            this.sync = k(this.sync, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ca);
                        b.prototype.model = D;
                        b.prototype.initialize = function() {
                            this.bind("change:name", this.sort)
                        };
                        b.prototype.comparator = function(b) {
                            var c;
                            c = b.organization || Models.Organization.get(b.get("idOrganization"));
                            c = (c != null ? c.get("displayName") : void 0) || "";
                            b = b.get("name") || "";
                            return z.rpad(c, 64).toUpperCase() + b.toUpperCase()
                        };
                        b.prototype.sync = function(b, c, d) {
                            d(Models.Board.all())
                        };
                        return b
                    } (), ha = function() {
                        function b() {
                            this.rejectInvite =
                            k(this.rejectInvite, this);
                            this.acceptInvite = k(this.acceptInvite, this);
                            this.showWidgetVisibility = k(this.showWidgetVisibility, this);
                            this.viewBoardArchive = k(this.viewBoardArchive, this);
                            this.viewPreferences = k(this.viewPreferences, this);
                            this.viewAllActivity = k(this.viewAllActivity, this);
                            this.showCardFilter = k(this.showCardFilter, this);
                            this.addList = k(this.addList, this);
                            this.manageBoardMembers = k(this.manageBoardMembers, this);
                            this.showMenu = k(this.showMenu, this);
                            this.sortStop = k(this.sortStop, this);
                            this.renderMembers =
                            k(this.renderMembers, this);
                            this.showDesktopNotification = k(this.showDesktopNotification, this);
                            this.allowDesktopNotifications = k(this.allowDesktopNotifications, this);
                            this.renderActions = k(this.renderActions, this);
                            this.renderLists = k(this.renderLists, this);
                            this.renderWatchers = k(this.renderWatchers, this);
                            this.renderPermissionLevel = k(this.renderPermissionLevel, this);
                            this.renderName = k(this.renderName, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.className =
                        "board-wrapper";
                        b.prototype.events = {
                            sortstop: "sortStop",
                            "click .js-open-board-menu": "showMenu",
                            "click .js-manage-board-members": "manageBoardMembers",
                            "click .js-add-list": "addList",
                            "click .js-view-all-activity": "viewAllActivity",
                            "click .js-allow-notifications": "allowDesktopNotifications",
                            "click .js-filter-cards": "showCardFilter",
                            "click .js-view-archive": "viewBoardArchive",
                            "click .js-view-preferences": "viewPreferences",
                            "click .js-board-widget-vis": "showWidgetVisibility",
                            "click .js-show-all-widgets": "showWidgetVisibility",
                            "click .js-accept-invite": "acceptInvite",
                            "click .js-reject-invite": "rejectInvite"
                        };
                        b.prototype.initialize = function() {
                            var b;
                            this.model.view = this;
                            this.model.bind("change:closed", this.render).bind("change:name", this.renderName).bind("change:prefs", this.renderPermissionLevel).bind("change:idMembersWatching", this.renderWatchers).bind("change:idOrganization", this.renderName).bind("change:memberships", this.renderPermissionLevel);
                            this.model.myPrefs.bind("change:prefs", this.render);
                            this.model.organization !=
                            null && this.model.organization.bind("change:name", this.renderName);
                            this.model.listList.bind("change:closed", this.renderLists).onAddRemove(this.renderLists);
                            this.model.memberList.bind("change:status", this.renderMembers).onAddRemove(this.renderMembers);
                            Models.Action.bind("add:" + this.model.id, this.showDesktopNotification).bind("add:" + this.model.id, this.renderActions);
                            h.isLoggedIn() && (b = h.me(), b.boardList.onAddRemove(k(function() {
                                if (!b.boardList.get(this.model.id) && !(this.model.organization != null && _.detect(this.model.organization.memberList.models,
                                function(c) {
                                    return c.id === b.id
                                }) && this.model.get("prefs").permissionLevel === "org")) return this.model.get("prefs").permissionLevel === "public" ? void 0: Controller.displayErrorPage({
                                    errorType: "boardNotFound"
                                })
                            },
                            this)))
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            v;
                            c = this.model;
                            d = {
                                editable: c.editable(),
                                owned: c.owned(),
                                invited: c.invited()
                            };
                            if (c.get("closed")) $(this.el).html(w.fill("board_closed", c.toJSON(), d));
                            else {
                                b = c.toJSON();
                                b.url = Controller.getBoardUrl(this.model.id);
                                v = c.prefNames.concat(c.myPrefNames);
                                f = 0;
                                for (g = v.length; f < g; f++) e = v[f],
                                b["" + e + "_" + c.getPref(e)] = !0;
                                $(this.el).html(w.fill("board", b, d));
                                this.renderName().renderLists().renderMembers().renderWatchers().renderActions().renderPermissionLevel()
                            }
                            ListGuide.calc();
                            return this
                        };
                        b.prototype.renderName = function() {
                            var b,
                            c;
                            b = this.model;
                            c = b.get("name");
                            b.organization != null && (b = $("<a>").attr("href", "/" + b.organization.get("name")).text("" + b.organization.get("displayName")), $(this.el).find(".org-name").html(b));
                            $(this.el).find("#board-header .board-title .current").text(c);
                            Controller.setLocation({
                                title: c
                            });
                            return this
                        };
                        b.prototype.renderPermissionLevel = function() {
                            var b,
                            c,
                            d;
                            c = $(this.el).find("#permission-level");
                            d = this.model.getPref("permissionLevel");
                            b = {};
                            d === "private" ? b = {
                                permissionLevel: "private",
                                altText: "This board is private. It's only viewable to members of this board. Edit visibility in board preferences."
                            }: d === "public" ? b = {
                                permissionLevel: "public",
                                altText: "This board is public. It's viewable to all members of Trello. Edit visibility in board preferences."
                            }: d ===
                            "org" && (b = {
                                permissionLevel: "org-private",
                                altText: "This board is only viewable to members of the organization. Edit visibility in board preferences."
                            });
                            c.html(w.fill("board_permissions", b));
                            b = this.model.canInvite(h.me());
                            $(this.el).find(".js-manage-board-members").toggle(b); ! b && W.getViewName() === "board-member-modal" && W.hide();
                            return this
                        };
                        b.prototype.renderWatchers = function() {
                            $(this.el).find("#watchers").html(w.fill("board_watchers", {
                                nWatchers: this.model.get("idMembersWatching").length,
                                showWatchers: this.model.isPublic() &&
                                this.model.get("idMembersWatching").length > 1
                            }));
                            I.calc_widgets_height();
                            return this
                        };
                        b.prototype.renderLists = function() {
                            var b;
                            b = $(this.el).find(".list-area");
                            I.saveScrolls();
                            b.empty();
                            this.model.listList.forEach(function(c) {
                                c.get("closed") || (c = c.getView(eb), b.append(c.render().el))
                            });
                            I.refreshLayoutImmediately();
                            I.restoreScrolls();
                            return this
                        };
                        b.prototype.renderActions = function() {
                            var b;
                            b = $(this.el).find(".list-actions"); (new c(Models.Action.getListForModel(this.model.id))).renderTo(b, {
                                limit: 10,
                                key: this.model.id,
                                model: this.model
                            });
                            $(this.el).find(".js-allow-notifications").toggle(DesktopNotifications.notEnabled());
                            return this
                        };
                        b.prototype.allowDesktopNotifications = function(b) {
                            var c;
                            z.preventDefault(b);
                            c = this;
                            DesktopNotifications.requestPermission(function() {
                                c.renderActions()
                            })
                        };
                        b.prototype.showDesktopNotification = function(b) {
                            var c,
                            d,
                            f,
                            g,
                            v,
                            i,
                            j,
                            k,
                            l,
                            m,
                            n;
                            if (b != null && (g = ja.parse(b.get("date")), j = function() {
                                var c;
                                return _.detect(Models.Action.getListForModel((c = b.get("data").card) != null ? c.id: void 0),
                                function(b) {
                                    var c,
                                    d;
                                    c = ja.parse(b.get("date"));
                                    return h.isMe(b.get("idMemberCreator")) && g - c < 12E5 && ((d = b.get("type")) === "commentCard" || d === "createCard")
                                })
                            },
                            c = (new e).getEntityLists([b], {})[0])) {
                                c.member = c.entities[0];
                                c.entities = c.entities.slice(1);
                                m = c.entities;
                                k = 0;
                                for (l = m.length; k < l; k++) if (v = m[k], v[v.type + "Type"] = !0, v.type === "comment") i = {
                                    convertNewlines: !0
                                },
                                v.html = Ja.textAsHtml(v.text, i);
                                if (b.get("type") === "commentCard" && !h.isMe(b.get("idMemberCreator")) && (h.me().hasAtMe(b.get("data").text) || j())) f = this.model.getCard((n =
                                b.get("data").card) != null ? n.id: void 0),
                                d = this.model,
                                DesktopNotifications.notify({
                                    html: N.to_html(w.desktop_notification, c, {
                                        entity: w.entity
                                    }),
                                    close: function(b) {
                                        b && f != null && f.addComment(b)
                                    },
                                    click: function() {
                                        f && d && Controller.displayBoard({
                                            board: d,
                                            idCard: f.id
                                        })
                                    }
                                })
                            }
                        };
                        b.prototype.renderMembers = function() {
                            return MemberOwner.renderMembers.call(this, ".list-board-members", Db)
                        };
                        b.prototype.sortStop = function(b, c) {
                            z.stopPropagation(b);
                            c.item.trigger("movelist", [c])
                        };
                        b.prototype.showMenu = function(b) {
                            Y("boardMenu",
                            this.model);
                            z.stop(b);
                            L.toggle({
                                elem: $(".js-open-board-menu")[0],
                                top: 35,
                                view: this.model.getView(Q)
                            })
                        };
                        b.prototype.manageBoardMembers = function(b) {
                            Y("manageBoardMembers", this.model, "button");
                            z.stop(b);
                            W.show({
                                elem: b.target,
                                view: new xb({
                                    model: this.model
                                })
                            })
                        };
                        b.prototype.addList = function(b) {
                            z.stop(b);
                            L.hide();
                            $(".last-list").removeClass("last-list");
                            this.model.listList.create({
                                name: "Untitled",
                                pos: this.model.calcPos(this.model.listList.length),
                                closed: !1
                            },
                            {
                                success: function(b) {
                                    I.calc();
                                    _.defer(function() {
                                        b.view.edit("name")
                                    })
                                }
                            })
                        };
                        b.prototype.showCardFilter = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: $(".js-filter-cards")[0],
                                top: 35,
                                view: this.model.getView(O)
                            })
                        };
                        b.prototype.viewAllActivity = function(b) {
                            var c;
                            Y("viewAllActivity", this.model, $(b.target).hasClass("js-end-of-list") ? "list end": "list top");
                            c = this.model;
                            z.stop(b);
                            W.show({
                                view: c.getView(M, "boardActivity", {
                                    fullHistory: !0
                                })
                            })
                        };
                        b.prototype.viewPreferences = function(b) {
                            Y("boardPreferences", this.model);
                            z.stop(b);
                            b = this.model.owned() ? h.me().organizationList.models: [];
                            W.show({
                                view: this.model.getView(i,
                                "boardPreferences", {
                                    organizations: b
                                }),
                                hide: k(function() {
                                    return Controller.saveBoardLocation(this.model.id)
                                },
                                this)
                            })
                        };
                        b.prototype.viewBoardArchive = function(b) {
                            Y("boardArchive", this.model);
                            z.stop(b);
                            b = this.model.getView(s);
                            b.getData();
                            return W.show({
                                view: b
                            })
                        };
                        b.prototype.showWidgetVisibility = function(b) {
                            var c;
                            z.stop(b);
                            c = $(b.target).attr("name");
                            L.toggle({
                                elem: b.target,
                                top: 23,
                                view: this.model.getView(za, c, {
                                    settingName: c
                                })
                            })
                        };
                        b.prototype.acceptInvite = function() {
                            $(this.el).find(".js-accept-invite").attr("disabled",
                            "disabled");
                            return this.model.acceptInvite(function() {
                                return q.navigate()
                            })
                        };
                        b.prototype.rejectInvite = function() {
                            return this.model.rejectInvite(function() {
                                return q.navigate()
                            })
                        };
                        return b
                    } (), O = function() {
                        function b() {
                            this.toggleFilter = k(this.toggleFilter, this);
                            this.render = k(this.render, this);
                            this.initialize = k(this.initialize, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            return this.model.bind("change:labelNames", this.render)
                        };
                        b.prototype.events = {
                            "click .js-filter-toggle": "toggleFilter"
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            b = $("#board");
                            c = this.model.toJSON({
                                labelNames: !0
                            });
                            c.memz = this.model.memberList.models;
                            c.boardMems = [];
                            c.memz.forEach(function(b) {
                                c.boardMems.push(b.toJSON())
                            });
                            if (b.hasClass("filtering-green-label")) c.activeGreen = !0;
                            if (b.hasClass("filtering-yellow-label")) c.activeYellow = !0;
                            if (b.hasClass("filtering-orange-label")) c.activeOrange = !0;
                            if (b.hasClass("filtering-red-label")) c.activeRed = !0;
                            if (b.hasClass("filtering-purple-label")) c.activePurple = !0;
                            if (b.hasClass("filtering-blue-label")) c.activeBlue =
                            !0;
                            $(this.el).html(w.fill("filter_cards", c));
                            b.hasClass("filtering-assigned-members") && (b = b.attr("class").split(/\s+/), b.map(k(function(b) {
                                if (b.match(/^filtering-assigned-to-*/)) return b = b.replace(/filtering-/, "."),
                                $(this.el).find(b).addClass("active")
                            },
                            this)));
                            return this
                        };
                        b.prototype.toggleFilter = function(b) {
                            var c,
                            d,
                            e,
                            f,
                            g;
                            z.stop(b);
                            g = $(b.target).closest(".js-filter-toggle");
                            b = $("#board");
                            g.hasClass("active") ? g.removeClass("active") : g.addClass("active");
                            c = g.hasClass("active");
                            g.hasClass("filter-member-toggle") &&
                            (b.addClass("filtering-assigned-members"), d = g.attr("class").split(/\s+/), e = "", d.map(function(b) {
                                if (b.match(/^assigned-to-*/)) return e = "." + b,
                                $(".list-cards").find(e).toggleClass("assigned-to-member"),
                                e = "filtering-" + b
                            }), b.toggleClass(e, c), f = [], b.attr("class").split(/\s+/).map(function(b) {
                                if (b.match(/^filtering-assigned-to-*/)) return f.push(b),
                                b = b.replace(/filtering-/, "."),
                                $(".list-cards").find(b).addClass("assigned-to-member")
                            }), f.length === 0 && b.removeClass("filtering-assigned-members"));
                            g.hasClass("green-label") &&
                            b.toggleClass("filtering-green-label", c);
                            g.hasClass("yellow-label") && b.toggleClass("filtering-yellow-label", c);
                            g.hasClass("orange-label") && b.toggleClass("filtering-orange-label", c);
                            g.hasClass("red-label") && b.toggleClass("filtering-red-label", c);
                            g.hasClass("purple-label") && b.toggleClass("filtering-purple-label", c);
                            g.hasClass("blue-label") && b.toggleClass("filtering-blue-label", c);
                            c = $(".card-filter .js-filter-toggle.active").length > 0;
                            b.toggleClass("filtering", c);
                            $(".js-filter-cards").toggleClass("is-on",
                            c);
                            g.hasClass("clear-all") && I.clearAllCardFilters()
                        };
                        return b
                    } (), za = function() {
                        function b() {
                            this.hideAllWidgets = k(this.hideAllWidgets, this);
                            this.showWidget = k(this.showWidget, this);
                            this.hideWidget = k(this.hideWidget, this);
                            this.render = k(this.render, this);
                            this.initialize = k(this.initialize, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.initialize = function() {
                            this.settingName = this.options.settingName;
                            return this.model.myPrefs.bind("change:prefs", this.render)
                        };
                        b.prototype.events = {
                            "click .js-hide": "hideWidget",
                            "click .js-show": "showWidget",
                            "click .js-hide-all": "hideAllWidgets"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = {
                                visible: this.model.getPref(this.settingName),
                                isShowAll: this.settingName === "showSidebar"
                            };
                            $(this.el).html(w.fillMenu("board_widget_menu", b));
                            return this
                        };
                        b.prototype._commitPref = function(b, c) {
                            L.hide();
                            _.defer(k(function() {
                                this.model.setPref(b, c);
                                return this.model.save()
                            },
                            this))
                        };
                        b.prototype.hideWidget = function() {
                            this._commitPref(this.settingName, !1)
                        };
                        b.prototype.showWidget = function() {
                            this._commitPref(this.settingName,
                            !0)
                        };
                        b.prototype.hideAllWidgets = function() {
                            this._commitPref("showSidebar", !1)
                        };
                        return b
                    } (), i = function() {
                        function b() {
                            this.clickSetting = k(this.clickSetting, this);
                            this.setOrganization = k(this.setOrganization, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            this.model.bind("change:prefs", this.render);
                            this.model.bind("change:labelNames", this.render);
                            this.model.bind("change:idOrganization", this.render);
                            return this.model.myPrefs.bind("change:prefs",
                            this.render)
                        };
                        b.prototype.events = {
                            "click a": "clickSetting",
                            "change select": "setOrganization"
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            b = this.model.toJSON({
                                prefs: !0,
                                org: !0
                            });
                            b.orgs = function() {
                                var b,
                                d,
                                e,
                                f;
                                e = this.options.organizations;
                                f = [];
                                b = 0;
                                for (d = e.length; b < d; b++) c = e[b],
                                f.push(c.toJSON());
                                return f
                            }.call(this);
                            $(this.el).html(w.fill("board_prefs", b, {
                                editable: this.model.editable(),
                                owned: this.model.owned()
                            }));
                            return this
                        };
                        b.prototype.setOrganization = function(b) {
                            this.model.api.setOrganization($(b.target[b.target.selectedIndex]).val(),
                            k(function() {
                                $(this.el).find(".set-org").hide()
                            },
                            this))
                        };
                        b.prototype.clickSetting = function(b) {
                            var c,
                            d;
                            if (!$(b.target).hasClass("disabled") && !$(b.target).closest(".js-disabled").length && (c = $(b.target).closest(".pref").attr("name"))) d = $(b.target).attr("value"),
                            d = function() {
                                switch (d) {
                                case "true":
                                    return ! 0;
                                case "false":
                                    return ! 1;
                                default:
                                    return d
                                }
                            } (),
                            this.model.setPref(c, d),
                            this.model.save()
                        };
                        b.prototype.customSet = function(b, c) {
                            var d;
                            return b === "red" || b === "orange" || b === "yellow" || b === "green" || b === "blue" ||
                            b === "purple" ? (d = {
                                labelNames: {}
                            },
                            d.labelNames[b] = c, this.model.set(d), !0) : !1
                        };
                        return b
                    } (), M = function() {
                        function b() {
                            this.loadMoreActions = k(this.loadMoreActions, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-more-actions": "loadMoreActions"
                        };
                        b.prototype.initialize = function() {
                            this.fullHistory = this.options.fullHistory;
                            if (this.fullHistory == null) this.fullHistory = !1;
                            Models.Action.bind("add:" + this.model.id, this.render);
                            this.loadMoreActions()
                        };
                        b.prototype.render = function() {
                            var b;
                            $(this.el).html(N.to_html(w.board_activity, this.model.toJSON()));
                            b = $(this.el).find(".list-activity"); (new c(Models.Action.getListForModel(this.model.id))).renderTo(b, {
                                compact: !this.fullHistory,
                                key: "boardactivity_" + this.model.id,
                                model: this.model,
                                oldest: this.model.dateOldestKnownAction
                            }); (this.loading || this.model.dateFirstAction != null && _.isEqual(this.model.dateOldestKnownAction, this.model.dateFirstAction)) && $(this.el).find(".js-more-actions").hide();
                            return this
                        };
                        b.prototype.loadMoreActions = function() {
                            var b;
                            if (!this.loading) return this.loading = !0,
                            rpc.invoke("getActions", [{
                                board: this.model.id
                            },
                            {
                                count: 25,
                                oldest: (b = this.model.dateOldestKnownAction) != null ? b: new Date
                            }], k(function(b) {
                                this.loading = !1;
                                if (b.dateFirstAction != null) this.model.dateFirstAction = new Date(b.dateFirstAction);
                                Models.Member.update(b.members);
                                b.actions.length > 0 ? (this.model.dateOldestKnownAction = new Date(_.last(b.actions).date), Models.Action.update(b.actions)) : $(this.el).find(".js-more-actions").hide()
                            },
                            this), k(function() {
                                return this.loading = !1
                            },
                            this))
                        };
                        return b
                    } (), Q = function() {
                        function b() {
                            this.unpinBoard = k(this.unpinBoard, this);
                            this.pinBoard = k(this.pinBoard, this);
                            this.viewAllActivity = k(this.viewAllActivity, this);
                            this.viewPreferences = k(this.viewPreferences, this);
                            this.manageBoardMembers = k(this.manageBoardMembers, this);
                            this.addList = k(this.addList, this);
                            this.close = k(this.close, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-board-preferences": "viewPreferences",
                            "click .js-add-list": "addList",
                            "click .js-manage-board-members": "manageBoardMembers",
                            "click .js-view-board-activity": "viewAllActivity",
                            "click .js-close-board": "close",
                            "click .js-board-pin": "pinBoard",
                            "click .js-board-unpin": "unpinBoard"
                        };
                        b.prototype.initialize = function() {
                            this.model.bind("change", this.render)
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON();
                            b.showManageMembers = this.model.canInvite(h.me());
                            b.pinned = this.model.isPinned();
                            b.canPin = h.isLoggedIn();
                            $(this.el).html(w.fillMenu("board_menu",
                            b, {
                                editable: this.model.editable(),
                                owned: this.model.owned()
                            }));
                            return this
                        };
                        b.prototype.close = function() {
                            L.hide();
                            this.model.close();
                            return ! 1
                        };
                        b.prototype.addList = function(b) {
                            this.model.view.addList(b)
                        };
                        b.prototype.manageBoardMembers = function(b) {
                            Y("manageBoardMembers", this.model, "menu");
                            z.stop(b);
                            W.show({
                                elem: b.target,
                                view: this.model.getView(xb)
                            })
                        };
                        b.prototype.viewPreferences = function(b) {
                            return this.model.view.viewPreferences(b)
                        };
                        b.prototype.viewAllActivity = function(b) {
                            Y("viewAllActivity", this.model,
                            "menu");
                            this.model.view.viewAllActivity(b)
                        };
                        b.prototype.pinBoard = function() {
                            L.hide();
                            this.model.pin(!0)
                        };
                        b.prototype.unpinBoard = function() {
                            L.hide();
                            this.model.pin(!1)
                        };
                        return b
                    } (), ca = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName = "li";
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON();
                            b.url = Controller.getBoardUrl(this.model.id);
                            b.orgName = this.model.organization ? this.model.organization.get("displayName") : void 0;
                            $(this.el).html(N.to_html(w.board_menu_item, b));
                            return this
                        };
                        b.prototype.setUnreadCount = function(b) {
                            var c;
                            c = $(this.el).find(".counts");
                            b === 0 ? c.hide() : (c.find(".number").text(b >= 100 ? "100+": b), c.show())
                        };
                        return b
                    } (), xb = function() {
                        function b() {
                            this.canRemoveInvitation = k(this.canRemoveInvitation, this);
                            this.renderBoardMembers = k(this.renderBoardMembers, this);
                            this.viewMember = k(this.viewMember, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, yb);
                        b.prototype.className =
                        "board-member-modal";
                        b.prototype.templates = {
                            main: w.board_members_manage,
                            member: w.board_member_search_result,
                            email: w.board_email_search_result
                        };
                        b.prototype.rpcSearchFunctionName = "searchBoardMembers";
                        b.prototype.events = {
                            "click .js-remove-invitation": "removeInvitation",
                            "click .js-send-invitations": "sendInvitations",
                            "click .member-list-item.invitable": "memberClicked",
                            "click .inline-member-container": "viewMember",
                            keydown: "keydown"
                        };
                        b.prototype.initialize = function() {
                            b.__super__.initialize.call(this, this.model.boardInvitationList)
                        };
                        b.prototype.render = function() {
                            return b.__super__.render.call(this).renderBoardMembers()
                        };
                        b.prototype.viewMember = function(b) {
                            b = $(b.currentTarget).data("member");
                            if (this.model.getMemberType(b) !== "public") return b.viewBoardProfile(this.model)
                        };
                        b.prototype.renderBoardMembers = function() {
                            var b;
                            b = $(this.el).find(".active-members");
                            b.empty();
                            this.model.memberList.each(k(function(c) {
                                c = c.getView(Db, "manageBoardMemberView", {
                                    parent: this.model
                                });
                                b.append(c.render().el)
                            },
                            this));
                            return this
                        };
                        b.prototype.canRemoveInvitation =
                        function(b) {
                            return b.get("idMemberInviter") === h.myId() || this.model.owned()
                        };
                        return b
                    } (), pa = function() {
                        function b() {
                            this.viewArchive = k(this.viewArchive, this);
                            this.addBoard = k(this.addBoard, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "click .js-add-board": "addBoard",
                            "click .js-view-archive": "viewArchive"
                        };
                        b.prototype.initialize = function() {
                            this.model.boardList.bind("change:closed", this.render).onAddRemove(this.render)
                        };
                        b.prototype.addBoard = function(b) {
                            var c;
                            z.stop(b);
                            c = this.model;
                            b = this.model.getView(Zb);
                            b.idOrganization = this.options.idOrganizations ? this.options.idOrganizations[0] : "";
                            W.show({
                                view: b,
                                okay: function(b) {
                                    var d,
                                    e;
                                    d = b.form;
                                    e = d.find('input[name="board-title"]').val();
                                    b = d.find('select[name="org-id"]').val();
                                    d = d.find('input[name="permissionLevel"]').val();
                                    c.boardList.create({
                                        name: e,
                                        closed: !1,
                                        idOrganization: b !== "" ? b: void 0,
                                        prefs: {
                                            permissionLevel: d
                                        }
                                    },
                                    {
                                        success: function(b) {
                                            Controller.displayBoard({
                                                board: b
                                            })
                                        }
                                    })
                                }
                            });
                            return ! 1
                        };
                        b.prototype.viewArchive = function(b) {
                            z.preventDefault(b);
                            W.show({
                                elem: b.target,
                                view: this.model.getView(Ab),
                                displayType: "archive"
                            });
                            rpc.invoke("getBoardList", [h.myUsername(), {
                                memberships: !0
                            }], k(function(b) {
                                var c,
                                d,
                                e,
                                f;
                                f = b.boards;
                                d = 0;
                                for (e = f.length; d < e; d++) c = f[d],
                                (b = this.model.boardList.get(c._id)) ? b.set(c, {
                                    silent: !0
                                }) : this.model.boardList.add([c], {
                                    silent: !0
                                });
                                return this.model.boardList.trigger("refresh")
                            },
                            this));
                            return ! 1
                        };
                        return b
                    } (), Zb = function() {
                        function b() {
                            this.changeOrg = k(this.changeOrg, this);
                            this.selectOption = k(this.selectOption, this);
                            this.setPermissionLevel =
                            k(this.setPermissionLevel, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.events = {
                            "click .pref-options a": "selectOption",
                            "change select[name='org-id']": "changeOrg"
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e;
                            c = _.map(h.me().organizationList.models,
                            function(b) {
                                return b.toJSON()
                            });
                            d = 0;
                            for (e = c.length; d < e; d++) b = c[d],
                            b.select = b._id === this.idOrganization ? !0: !1;
                            $(this.el).html(w.fill("board_new", {
                                orgs: c,
                                hasOrg: !!this.idOrganization,
                                canAddToOrgs: c.length !==
                                0
                            }));
                            return this
                        };
                        b.prototype.setPermissionLevel = function(b) {
                            var c;
                            c = $(this.el).find(".pref-options");
                            c.find("a").removeClass("active");
                            c.find("a[value='" + b + "']").addClass("active");
                            $(this.el).find('input[name="permissionLevel"]').val(b)
                        };
                        b.prototype.getPermissionLevel = function() {
                            return $(this.el).find('input[name="permissionLevel"]').val()
                        };
                        b.prototype.selectOption = function(b) {
                            b = $(b.target).closest("a");
                            b.hasClass("disabled") || this.setPermissionLevel(b.attr("value"))
                        };
                        b.prototype.changeOrg = function(b) {
                            var c;
                            c = this.getPermissionLevel();
                            b = $(b.target).find("option:selected").val() !== "";
                            c === "private" && b ? this.setPermissionLevel("org") : c === "org" && !b && this.setPermissionLevel("private");
                            $(this.el).find('a[value="org"]').toggleClass("disabled", !b)
                        };
                        return b
                    } (), nb = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, pa);
                        b.prototype.initialize = function() {
                            this.model.boardPinnedList.onAddRemove(this.render)
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            v;
                            f = this.model;
                            $(this.el).html(N.to_html(w.menu, {
                                menu_cards: [{
                                    name: "See All Boards",
                                    url: Controller.getMemberBoardsUrl()
                                },
                                {
                                    name: "New Board",
                                    js_class: "js-add-board"
                                },
                                {
                                    name: "View Closed Boards",
                                    js_class: "js-view-archive"
                                }]
                            }));
                            e = {};
                            d = function() {
                                var c,
                                d,
                                e,
                                g;
                                e = f.boardPinnedList.models;
                                g = [];
                                c = 0;
                                for (d = e.length; c < d; c++) b = e[c],
                                b.get("closed") || g.push(b);
                                return g
                            } ();
                            g = 0;
                            for (v = d.length; g < v; g++) b = d[g],
                            e[b.id] = c = b.getView(ca, "", {
                                model: b
                            }),
                            $(this.el).find(".dynamic-pop-over-list").append(c.render().el);
                            d.length === 0 ? (c = this.model.boardList.length ===
                            0 ? "No Boards": "No Pinned Boards", $(this.el).find(".dynamic-pop-over-list").append('<div class="empty">' + c + "</div>")) : $(this.el).find(".dynamic-pop-over-list").append("<hr />");
                            rpc.invoke("getBoardList", [h.myUsername(), {
                                stats: !0
                            }],
                            function(b) {
                                var c,
                                d,
                                f,
                                t;
                                t = b.boards;
                                d = 0;
                                for (f = t.length; d < f; d++) c = t[d],
                                b = c.nActionsSinceLastView,
                                (c = e[c._id]) && c.setUnreadCount(b)
                            });
                            return this
                        };
                        return b
                    } (), ba = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, pa);
                        b.prototype.tagName =
                        "ul";
                        b.prototype.className = "board-list";
                        b.prototype.initialize = function(c) {
                            this.idMember = c.idMember;
                            b.__super__.initialize.apply(this, arguments)
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            c = this;
                            b = this.model;
                            $(c.el).html("");
                            b.boardList.forEach(function(b) { ! b.get("closed") && b.isPublic() && (b = b.getView(ia, "public"), $(c.el).append(b.render().el))
                            });
                            return this
                        };
                        return b
                    } (), na = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, pa);
                        b.prototype.tagName =
                        "ul";
                        b.prototype.initialize = function(c) {
                            this.idMember = c.idMember;
                            b.__super__.initialize.apply(this, arguments)
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            d = this.model;
                            $(this.el).html("");
                            e = function() {
                                var c,
                                e,
                                f,
                                g;
                                f = d.boardList.models;
                                g = [];
                                c = 0;
                                for (e = f.length; c < e; c++) b = f[c],
                                b.get("closed") || g.push(b);
                                return g
                            } ();
                            f = 0;
                            for (g = e.length; f < g; f++) b = e[f],
                            c = b.getView(ia, "personal"),
                            $(this.el).append(c.render().el);
                            c = d.get("memberships") ? c = _.detect(d.get("memberships"),
                            function(b) {
                                return h.isMe(b.idMember)
                            }) :
                            void 0; (h.isMe(d) || c) && $(this.el).append(w.fill("add_board_button", {}));
                            return this
                        };
                        return b
                    } (), ia = function() {
                        function b() {
                            this.showMenu = k(this.showMenu, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName = "li";
                        b.prototype.initialize = function() {
                            this.model.bind("change:name", this.render);
                            return h.me().bind("change:idBoardsPinned", this.render)
                        };
                        b.prototype.events = {
                            "click .js-boards-list-menu": "showMenu"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON({
                                prefs: !0,
                                url: !0,
                                pinned: !0
                            });
                            if (b.nActionsSinceLastView > 100) b.plus = !0,
                            b.nActionsSinceLastView = 100;
                            $(this.el).html(w.fill("member_board_stats", b));
                            return this
                        };
                        b.prototype.showMenu = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: b.target,
                                top: 20,
                                view: this.model.getView(aa)
                            })
                        };
                        return b
                    } (), aa = function() {
                        function b() {
                            this.unpinBoard = k(this.unpinBoard, this);
                            this.pinBoard = k(this.pinBoard, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events =
                        {
                            "click .js-board-pin": "pinBoard",
                            "click .js-board-unpin": "unpinBoard"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = {
                                pinned: this.model.isPinned()
                            };
                            $(this.el).html(w.fillMenu("boards_list_menu", b));
                            return this
                        };
                        b.prototype.pinBoard = function() {
                            L.hide();
                            return this.model.pin(!0)
                        };
                        b.prototype.unpinBoard = function() {
                            L.hide();
                            return this.model.pin(!1)
                        };
                        return b
                    } (), $b = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, pa);
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            d = this.model;
                            e = this.options.organization;
                            f = d.boardList.filter(function(b) {
                                return b.get("closed") || !b.isMember(d) ? !1: e ? b.get("idOrganization") === e.id: !b.get("idOrganization")
                            });
                            c = e ? e.toJSON({
                                prefs: !0,
                                url: !0
                            }) : {
                                name: "Boards"
                            };
                            c.empty = f.length === 0;
                            $(this.el).html(w.fill("member_boards_list", c, {
                                editable: h.isMe(d)
                            }));
                            $(this.el).find(".list-boards").html("");
                            c = 0;
                            for (g = f.length; c < g; c++) b = f[c],
                            b = b.getView(ia, "org"),
                            $(this.el).find(".list-boards").append(b.render().el);
                            h.isMe(d) && $(this.el).find(".list-boards").append(w.fill("add_board_button",
                            {}));
                            return this
                        };
                        return b
                    } (), K = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, pa);
                        b.prototype.tagName = "ul";
                        b.prototype.initialize = function(c) {
                            this.idMember = c.idMember;
                            b.__super__.initialize.apply(this, arguments);
                            this.model.boardInvitedList.bind("change", this.render).bind("refresh", this.render).bind("add", this.render).bind("remove", this.render)
                        };
                        b.prototype.render = function() {
                            $(this.el).html(N.to_html(w.member_invitation_list, {
                                model: "Board"
                            }));
                            $(this.el).find(".js-list-invitations").html("");
                            this.model.boardInvitedList.forEach(k(function(b) {
                                if (!b.get("closed")) return b = new ga({
                                    model: b
                                }),
                                $(this.el).find(".js-list-invitations").append(b.render().el)
                            },
                            this));
                            return this
                        };
                        return b
                    } (), ga = function() {
                        function b() {
                            this.rejectInvitation = k(this.rejectInvitation, this);
                            this.acceptInvitation = k(this.acceptInvitation, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName = "li";
                        b.prototype.events =
                        {
                            "click .js-accept-invitation": "acceptInvitation",
                            "click .js-reject-invitation": "rejectInvitation"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON();
                            b.url = Controller.getBoardUrl(b.id);
                            $(this.el).html(N.to_html(w.member_invitation, b));
                            return this
                        };
                        b.prototype.acceptInvitation = function() {
                            $(this.el).find(".js-accept-invitation").attr("disabled", "disabled");
                            return this.model.acceptInvite()
                        };
                        b.prototype.rejectInvitation = function() {
                            return this.model.rejectInvite()
                        };
                        return b
                    } (), s = function() {
                        function b() {
                            this.render =
                            k(this.render, this);
                            this.setSectionLists = k(this.setSectionLists, this);
                            this.setSectionCards = k(this.setSectionCards, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        var c;
                        y(b, S);
                        b.prototype.initialize = function() {
                            var b,
                            c,
                            d;
                            d = {};
                            this.section = "cards";
                            this.loading = !0;
                            b = k(function(b) {
                                if (!d[b.id]) return d[b.id] = !0,
                                b.cardList.onAddRemove(this.render).bind("change:closed", this.render)
                            },
                            this);
                            c = k(function(c) {
                                return c.forEach(b)
                            },
                            this);
                            this.model.listList.onAddRemove(c).onAddRemove(this.render).bind("change:closed",
                            this.render);
                            return c(this.model.listList)
                        };
                        b.prototype.events = {
                            "click .js-archive-cards": "setSectionCards",
                            "click .js-archive-lists": "setSectionLists",
                            "click .js-more-archive-cards": "getMoreCards"
                        };
                        b.prototype.setSectionCards = function() {
                            return this.setSection("cards")
                        };
                        b.prototype.setSectionLists = function() {
                            return this.setSection("lists")
                        };
                        b.prototype.setSection = function(b) {
                            this.section = b;
                            this.getData();
                            return this.render()
                        };
                        c = function(b, c) {
                            var d,
                            e,
                            f,
                            t;
                            d = {};
                            _.each(b.cards,
                            function(b) {
                                var e,
                                f; (e =
                                c.getCard(b._id)) ? (e.set(b, {
                                    silent: !0
                                }), d[e.get("idList")] = !0) : (e = Models.finishInit(new da(b)), Models.Card.add(e, {
                                    silent: !0
                                }));
                                if ((f = c.getList(b.idList)) && !f.cardList.include(e)) return f.cardList.add(e, {
                                    silent: !0
                                }),
                                d[b.idList] = !0
                            });
                            t = [];
                            for (e in d) t.push((f = c.getList(e)) != null ? f.cardList.trigger("refresh") : void 0);
                            return t
                        };
                        b.prototype.getMoreCards = function() {
                            var b,
                            d;
                            b = this.model;
                            if (this.section === "cards") return this.loading = !0,
                            d = Date.now(),
                            this.model.listList.forEach(function(b) {
                                return b.cardList.forEach(function(b) {
                                    if (b.get("closed") &&
                                    new Date(b.get("dateLastActivity")) < d) return d = new Date(b.get("dateLastActivity"))
                                })
                            }),
                            rpc.invoke("getClosedCards", [b.id, {
                                count: 10,
                                oldest: d
                            }], k(function(d) {
                                c(d, b);
                                this.hasMoreCards = d.hasMore;
                                this.loading = !1;
                                return this.render()
                            },
                            this))
                        };
                        b.prototype.getData = function() {
                            var b;
                            b = this.model;
                            if (this.section === "cards") this.loading = !0,
                            rpc.invoke("getClosedCards", [b.id, {
                                count: 10
                            }], k(function(d) {
                                c(d, b);
                                if (d.hasMore) this.hasMoreCards = !0;
                                this.loading = !1;
                                this.render()
                            },
                            this))
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            d = this.section === "lists";
                            c = !d;
                            d ? (e = this.model.listList.filter(function(b) {
                                return b.get("closed")
                            }), b = function(b) {
                                return b.get("name")
                            }) : (e = [], this.model.listList.forEach(function(b) {
                                return e = e.concat(b.cardList.filter(function(b) {
                                    return b.get("closed")
                                }))
                            }), b = function(b) {
                                return (b = 0 - new Date(b.get("dateLastActivity"))) ? b: 0
                            });
                            e = _.sortBy(e, b);
                            b = this.model.toJSON();
                            b.content = N.to_html(w.archive_items, {
                                loading: this.loading,
                                empty: !this.loading && e.length === 0,
                                emptyMessage: "No Archived " + (d ? "Lists":
                                "Cards"),
                                hasMoreCards: !this.loading && this.hasMoreCards && c
                            });
                            b["section_" + this.section] = !0;
                            $(this.el).html(N.to_html(w.archive_base, b));
                            c = $(this.el).find(".archive-items");
                            b = 0;
                            for (f = e.length; b < f; b++) d = e[b],
                            c.append(d.getView(qb, null, {
                                reOpenText: "Send to Board"
                            }).render().el);
                            return this
                        };
                        return b
                    } ());
                    if (A("boardPreference")) q.BoardPreference = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, La);
                        b.prototype.typeName = "BoardPreference";
                        b.prototype.initialize = function() {
                            Api.init(this)
                        };
                        return b
                    } ();
                    A("list") && (Ub = function() {
                        function b() {
                            this.getBoard = k(this.getBoard, this);
                            this.reopen = k(this.reopen, this);
                            this.refreshCardList = k(this.refreshCardList, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "List";
                        b.prototype.initialize = function() {
                            Api.init(this);
                            this.cardList = new CardList([], {
                                model: this
                            });
                            this.bind("change", this.onChange);
                            this.cardList.bind("change:idList", k(function(b) {
                                if (b.get("idList") !== this.get("id")) return _.defer(k(function() {
                                    return this.cardList.remove(b)
                                },
                                this))
                            },
                            this))
                        };
                        b.prototype.postInitialize = function() {
                            this.refreshCardList();
                            this.setReady()
                        };
                        b.prototype.refreshCardList = function() {
                            return this.cardList.refresh(_.filter(Models.Card.all(), k(function(b) {
                                return b.get("idList") === this.id
                            },
                            this)) || [])
                        };
                        b.prototype.withIdParents = function(b) {
                            this.getBoard().onId(function(c) {
                                b([c])
                            })
                        };
                        b.prototype.move = function(b) {
                            this.set({
                                pos: this.getBoard().calcPos(b, this)
                            });
                            this.save();
                            this.collection.sort({
                                silent: !0
                            })
                        };
                        b.prototype.close = function() {
                            this.set({
                                closed: !0
                            });
                            this.save()
                        };
                        b.prototype.reopen = function() {
                            this.set({
                                closed: !1,
                                pos: this.getBoard().calcPos(this.collection.length, this)
                            });
                            this.save()
                        };
                        b.prototype.onChange = function() {};
                        b.prototype.calcPos = function(b, c) {
                            return z.calcPos(b, this.cardList, c,
                            function(b) {
                                return ! b.get("closed")
                            })
                        };
                        b.prototype.getBoard = function() {
                            return this.collection.options.model
                        };
                        b.prototype.editable = function() {
                            return this.getBoard().editable()
                        };
                        return b
                    } (), Vb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b,
                        xa);
                        b.prototype.model = Ub;
                        b.prototype.initialize = function(b, c) {
                            this.options = c;
                            this.bind("change:pos", this.sort)
                        };
                        b.prototype.comparator = function(b) {
                            return b.get("pos") || 0
                        };
                        return b
                    } (), eb = function() {
                        function b() {
                            this.restoreScroll = k(this.restoreScroll, this);
                            this.saveScroll = k(this.saveScroll, this);
                            this.eventStopPropagation = k(this.eventStopPropagation, this);
                            this.moveList = k(this.moveList, this);
                            this.openMenu = k(this.openMenu, this);
                            this.sortStop = k(this.sortStop, this);
                            this.sortReceive = k(this.sortReceive, this);
                            this.triggerOnItem = k(this.triggerOnItem, this);
                            this.cancelAddCard = k(this.cancelAddCard, this);
                            this.addCard = k(this.addCard, this);
                            this.createOnEnter = k(this.createOnEnter, this);
                            this.renderCards = k(this.renderCards, this);
                            this.renderName = k(this.renderName, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.className = "list";
                        b.prototype.events = {
                            "keypress .new-card": "createOnEnter",
                            "click .js-add-card": "addCard",
                            "click .js-cancel-add-card": "cancelAddCard",
                            sortreceive: "sortReceive",
                            sortstop: "sortStop",
                            "click .js-open-list-menu": "openMenu",
                            "mousedown .list-cards": "eventStopPropagation",
                            movelist: "moveList",
                            dblclick: "eventStopPropagation",
                            "focus .new-card": "focusCard"
                        };
                        b.prototype.initialize = function() {
                            this.model.bind("change:name", this.renderName);
                            this.model.view = this;
                            this.model.cardList.onAddRemove(this.renderCards).bind("change:closed", this.renderCards)
                        };
                        b.prototype.render = function() {
                            R("render", "rendering list " + this.model.get("name"));
                            $(this.el).html(w.fill("list",
                            this.model.toJSON(), {
                                editable: this.model.editable()
                            }));
                            this.input = $(this.el).find(".new-card");
                            this.renderName().renderCards();
                            $(this.input).fixPlaceholder();
                            DragSort.refreshCardSortable();
                            return this
                        };
                        b.prototype.focusCard = function(b) {
                            var c;
                            c = $(b.target).parent();
                            U.blurNewCard();
                            c.hasClass("focus") || $(b.target).closest(".list").find(".list-cards").css({
                                maxHeight: "-=70"
                            });
                            c.addClass("focus");
                            c.removeClass("greyed")
                        };
                        b.prototype.renderName = function() {
                            $(this.el).find("div.list-title .current").text(this.model.get("name"));
                            ListGuide.calc();
                            return this
                        };
                        b.prototype.renderCards = function() {
                            var b,
                            c;
                            R("render", "rendering cards for list " + this.model.get("name"));
                            b = $(this.el).find(".list-cards");
                            b.find(".list-card").not(".placeholder").addClass("to-remove");
                            c = this.model;
                            this.model.cardList.forEach(function(d) {
                                d.list = c;
                                d.cardList = c.cardList;
                                if (!d.get("closed")) d = d.getView(Ga).render().el,
                                $(d).removeClass("to-remove"),
                                b.append(d)
                            });
                            b.find(".list-card.to-remove").remove();
                            ListGuide.calc_num_cards();
                            return this
                        };
                        b.prototype.createOnEnter =
                        function(b) {
                            if (z.isSubmitKey(b)) return this.addCard(b)
                        };
                        b.prototype.addCard = function(b) {
                            var c,
                            d;
                            z.preventDefault(b);
                            d = jQuery.trim(this.input.val());
                            if (d !== "") return c = this,
                            this.model.onId(k(function(b) {
                                return this.model.cardList.create({
                                    name: d,
                                    pos: this.model.calcPos(this.model.cardList.length),
                                    closed: !1,
                                    idBoard: this.model.getBoard().id,
                                    idList: b
                                },
                                {
                                    success: function() {
                                        var b;
                                        _.defer(function() {});
                                        c.input.focus();
                                        b = $(c.el).find(".list-cards");
                                        b.animate({
                                            scrollTop: b[0].scrollHeight
                                        },
                                        370)
                                    }
                                })
                            },
                            this)),
                            this.input.val(""),
                            !1
                        };
                        b.prototype.cancelAddCard = function(b) {
                            z.preventDefault(b);
                            U.clearNewCard(b);
                            return ! 1
                        };
                        b.prototype.triggerOnItem = function(b, c, d) {
                            var e;
                            z.stopPropagation(b);
                            e = this;
                            _.defer(function() {
                                return c.item.trigger(d, [c, e])
                            })
                        };
                        b.prototype.sortReceive = function(b, c) {
                            this.triggerOnItem(b, c, "moveto")
                        };
                        b.prototype.sortStop = function(b, c) {
                            this.triggerOnItem(b, c, "movein")
                        };
                        b.prototype.openMenu = function(b) {
                            var c;
                            c = this.model;
                            if (!DragSort.sorting) return z.preventDefault(b),
                            L.toggle({
                                elem: b.target,
                                top: 20,
                                view: c.getView(Wb)
                            }),
                            !1
                        };
                        b.prototype.moveList = function(b, c) {
                            this.model.move(c.item.parent().children().index(c.item))
                        };
                        b.prototype.eventStopPropagation = function(b) {
                            z.stopPropagation(b)
                        };
                        b.prototype.saveScroll = function() {
                            this.scrollTop = $(this.el).find(".list-cards").scrollTop()
                        };
                        b.prototype.restoreScroll = function() {
                            $(this.el).find(".list-cards").scrollTop(this.scrollTop)
                        };
                        return b
                    } (), Wb = function() {
                        function b() {
                            this.close = k(this.close, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b,
                        S);
                        b.prototype.events = {
                            "click .js-close-list": "close"
                        };
                        b.prototype.render = function() {
                            $(this.el).html(w.fillMenu("list-menu", this.model.toJSON(), {
                                editable: this.model.editable()
                            }));
                            return this
                        };
                        b.prototype.close = function() {
                            var b;
                            b = this.model;
                            L.hide();
                            b.close();
                            return ! 1
                        };
                        return b
                    } ());
                    if (A("card")) da = function() {
                        function b() {
                            this.markRelatedNotificationsRead = k(this.markRelatedNotificationsRead, this);
                            this.getCheckItem = k(this.getCheckItem, this);
                            this.getVoterDisplayData = k(this.getVoterDisplayData, this);
                            this.vote =
                            k(this.vote, this);
                            this.addComment = k(this.addComment, this);
                            this.getUrl = k(this.getUrl, this);
                            this.getList = k(this.getList, this);
                            this.getBoard = k(this.getBoard, this);
                            this.reopen = k(this.reopen, this);
                            this.close = k(this.close, this);
                            this.hasChecklist = k(this.hasChecklist, this);
                            this.removeChecklist = k(this.removeChecklist, this);
                            this.addChecklist = k(this.addChecklist, this);
                            this.hasMember = k(this.hasMember, this);
                            this.removeMember = k(this.removeMember, this);
                            this.addMember = k(this.addMember, this);
                            this.moveToList = k(this.moveToList,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Card";
                        b.prototype.initialize = function() {
                            Api.init(this);
                            this.bind("change:idList",
                            function(b) {
                                var c,
                                d;
                                d = b.getList();
                                c = b.getBoard().getList(b.get("idList"));
                                d.cardList.remove(b);
                                c.cardList.add(b)
                            })
                        };
                        b.prototype.postInitialize = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            this.memberList = new ta([], {
                                model: this
                            });
                            this.memberVotedList = new ta([], {
                                model: this
                            });
                            this.checkItemStateList = new Mb(this.get("checkItemStates") || [], {
                                model: this
                            });
                            this.checklistList =
                            new $a([], {
                                model: this
                            });
                            this.attachmentList = new B([], {
                                model: this
                            });
                            e = k(function() {
                                this.memberList.refresh(Models.Member.getList(this.get("idMembers") || []), {
                                    model: this
                                })
                            },
                            this);
                            f = k(function() {
                                this.memberVotedList.refresh(Models.Member.getList(this.get("idMembersVoted") || []), {
                                    model: this
                                })
                            },
                            this);
                            d = k(function() {
                                this.checklistList.refresh(_.map(this.get("idChecklists") || [], k(function(b) {
                                    return this.getBoard().getChecklist(b)
                                },
                                this)).filter(function(b) {
                                    return b != null
                                }), {
                                    model: this
                                })
                            },
                            this);
                            c = k(function() {
                                this.checkItemStateList.refresh(this.get("checkItemStates") ||
                                [], {
                                    model: this
                                })
                            },
                            this);
                            b = k(function() {
                                this.attachmentList.refresh(this.get("attachments") || [], {
                                    model: this
                                })
                            },
                            this);
                            e();
                            f();
                            d();
                            c();
                            b();
                            this.bind("change:idMembers", e);
                            this.bind("change:idMembersVoted", f);
                            this.bind("change:idChecklists", d);
                            this.bind("change:checkItemStates", c);
                            this.bind("change:attachments", b);
                            this.badgeList = new C([], {
                                model: this
                            });
                            this.get("idMembersVoted") || this.set("idMembersVoted", [], {
                                silent: !0
                            });
                            this.setReady()
                        };
                        b.prototype.withIdParents = function(b) {
                            var c;
                            c = this.getList();
                            c.onId(function(d) {
                                b([d,
                                c.getBoard().id])
                            })
                        };
                        b.prototype.moveToList = function(b, c) {
                            var d;
                            d = this;
                            b.onId(function(e) {
                                d.set({
                                    pos: b.calcPos(c, d),
                                    idList: e
                                });
                                d.save()
                            })
                        };
                        b.prototype.moveToNextList = function() {
                            var b,
                            c;
                            c = this.getBoard().listList.filter(function(b) {
                                return ! b.get("closed")
                            });
                            b = _.indexOf(c, this.getList());
                            b < c.length - 1 && this.moveToList(c[b + 1], 1E9)
                        };
                        b.prototype.moveToPrevList = function() {
                            var b,
                            c;
                            c = this.getBoard().listList.filter(function(b) {
                                return ! b.get("closed")
                            });
                            b = _.indexOf(c, this.getList());
                            b > 0 && this.moveToList(c[b -
                            1], 1E9)
                        };
                        b.prototype.addMember = function(b) {
                            this.hasMember(b) || (this.addToSet("idMembers", b), this.save());
                            return ! 1
                        };
                        b.prototype.removeMember = function(b) {
                            this.hasMember(b) && (this.pull("idMembers", b), this.save());
                            return ! 1
                        };
                        b.prototype.toggleMember = function(b) {
                            this.hasMember(b) ? this.removeMember(b) : this.addMember(b)
                        };
                        b.prototype.hasMember = function(b) {
                            return this.memberList.get(b)
                        };
                        b.prototype.addChecklist = function(b) {
                            Y("checklist", this.getBoard());
                            this.hasChecklist(b) || (this.addToSet("idChecklists", b),
                            this.save());
                            return ! 1
                        };
                        b.prototype.removeChecklist = function(b) {
                            this.hasChecklist(b) && (this.pull("idChecklists", b), this.save());
                            return ! 1
                        };
                        b.prototype.hasChecklist = function(b) {
                            return this.checklistList.get(b)
                        };
                        b.prototype.close = function() {
                            Y("closeCard", this.getBoard());
                            this.set({
                                closed: !0
                            });
                            this.save()
                        };
                        b.prototype.reopen = function() {
                            var b;
                            Y("reopenCard", this.getBoard());
                            b = this.getList();
                            b != null && (this.set({
                                closed: !1,
                                pos: b.calcPos(b.cardList.length, this)
                            }), this.save())
                        };
                        b.prototype.getBoard = function() {
                            if (!this.board) this.board =
                            Models.Board.get(this.get("idBoard"));
                            return this.board
                        };
                        b.prototype.getList = function() {
                            return this.getBoard().listList.get(this.get("idList"))
                        };
                        b.prototype.getUrl = function() {
                            return Controller.getCardUrl(this)
                        };
                        b.prototype.editable = function() {
                            return this.getBoard().editable()
                        };
                        b.prototype.addComment = function(b) {
                            var c;
                            c = this;
                            if (b !== "") c.onId(function() {
                                var e;
                                e = _.uniqueId("placeholder");
                                return c.withIdParents(function() {
                                    var f,
                                    g;
                                    g = c.getBoard();
                                    f = new d({
                                        _id: e,
                                        type: "commentCard",
                                        data: {
                                            text: b,
                                            card: {
                                                id: c.id,
                                                name: c.get("name")
                                            },
                                            board: {
                                                id: g.id,
                                                name: g.get("name")
                                            }
                                        },
                                        idMemberCreator: h.myId(),
                                        idModels: [h.myId(), c.id, g.id],
                                        version: 1
                                    });
                                    Models.Action.add(f);
                                    g = function() {
                                        Models.Action.remove(e, {
                                            silent: !0
                                        });
                                        return f.destroy()
                                    };
                                    return c.api.addComment(b, g, g)
                                })
                            })
                        };
                        b.prototype.vote = function(b) {
                            this.getBoard().canVote(h.me()) && (b ? this.addToSet("idMembersVoted", h.myId()) : this.pull("idMembersVoted", h.myId()), this.save())
                        };
                        b.prototype.voted = function(b) {
                            return _.include(this.get("idMembersVoted"), b)
                        };
                        b.prototype.getVoterDisplayData =
                        function(b) {
                            return this.api.getVoterDisplayData({},
                            k(function(c) {
                                Models.Member.update(c.members);
                                return b()
                            },
                            this),
                            function() {})
                        };
                        b.prototype.toggleVote = function() {
                            this.vote(!this.voted(h.myId()))
                        };
                        b.prototype.getCheckItem = function(b) {
                            var t;
                            var c,
                            d,
                            e,
                            f;
                            d = 0;
                            for (e = this.checklistList.length - 1; 0 <= e ? d <= e: d >= e; 0 <= e ? d++:d--) if (c = this.checklistList.at(d), t = c != null ? (f = c.checkItemList) != null ? f.get(b) : void 0: void 0, c = t) return c;
                            return null
                        };
                        b.prototype.labels = ["green", "yellow", "orange", "red", "purple", "blue"];
                        b.prototype.getLabels = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            e = this.labels;
                            f = [];
                            c = 0;
                            for (d = e.length; c < d; c++) b = e[c],
                            f.push(this.getLabel(b));
                            return f
                        };
                        b.prototype.hasLabel = function(b) {
                            return _.include(this.get("labels"), b)
                        };
                        b.prototype.setLabel = function(b, c) {
                            c ? this.addToSet("labels", b) : this.pull("labels", b);
                            this.save()
                        };
                        b.prototype.getLabel = function(b) {
                            return {
                                shortcut: String.fromCharCode("1".charCodeAt(0) + _.indexOf(this.labels, b)),
                                color: b,
                                name: this.getBoard().getLabelName(b),
                                isActive: this.hasLabel(b)
                            }
                        };
                        b.prototype.toggleLabel =
                        function(b) {
                            this.setLabel(b, !this.hasLabel(b))
                        };
                        b.prototype.markRelatedNotificationsRead = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            e = Models.Notification.all();
                            g = [];
                            c = 0;
                            for (d = e.length; c < d; c++) b = e[c],
                            b.get("isUnread") && ((f = b.get("data").card) != null ? f.id: void 0) === this.id && g.push(b.markRead());
                            return g
                        };
                        return b
                    } (),
                    q.CardList = xa.extend({
                        model: da,
                        initialize: function(b, c) {
                            this.options = c;
                            this.bind("change:pos", this.sort)
                        },
                        comparator: function(b) {
                            return b.get("pos") || 0
                        }
                    }),
                    Ga = function() {
                        function b() {
                            this.reopenCard = k(this.reopenCard,
                            this);
                            this.doClicks = k(this.doClicks, this);
                            this.showDetail = k(this.showDetail, this);
                            this.changeMembers = k(this.changeMembers, this);
                            this.editLabels = k(this.editLabels, this);
                            this.moveCard = k(this.moveCard, this);
                            this.moveIn = k(this.moveIn, this);
                            this.moveTo = k(this.moveTo, this);
                            this.openCardMenu = k(this.openCardMenu, this);
                            this.close = k(this.close, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "list-card js-member-droppable clearfix";
                        b.prototype.events =
                        {
                            moveto: "moveTo",
                            movein: "moveIn",
                            "click .js-card-menu": "openCardMenu",
                            "click .js-close-card": "close",
                            "click .js-change-card-members": "changeMembers",
                            "click .js-move-card": "moveCard",
                            "click .js-edit-labels": "editLabels",
                            "click .js-reopen-card": "reopenCard",
                            click: "showDetail"
                        };
                        b.prototype.initialize = function() {
                            this.model.bind("change", this.render);
                            this.model.view = this;
                            this.model.memberList.onAddRemove(this.render);
                            this.model.badgeList.bind("refresh", this.render);
                            this.model.getBoard().bind("change:labelNames",
                            this.render)
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            e = this.model;
                            R("render", "rendering card " + e.get("name"));
                            b = e.toJSON();
                            b.labels = e.getLabels();
                            b.url = Controller.getCardUrl(this.model);
                            $(this.el).html(w.fill("card_in_list", b, {
                                editable: this.model.editable()
                            }));
                            b.members = e.memberList.models;
                            b.members.forEach(k(function(b) {
                                b = "assigned-to-" + b.get("username");
                                $(this.el).addClass(b)
                            },
                            this));
                            $(this.el).removeClass("red-label orange-label yellow-label green-label blue-label purple-label");
                            b.labels.forEach(k(function(b) {
                                b.isActive &&
                                (b = b.color + "-label", $(this.el).addClass(b))
                            },
                            this));
                            $(this.el).droppable({
                                refreshPositions: !0,
                                inBounds: function(b) {
                                    var c,
                                    d,
                                    e,
                                    f;
                                    c = $("#board");
                                    d = c.offset();
                                    return d.left < (e = b.pageX) && e < d.left + c.width() && d.top < (f = b.pageY) && f < d.top + c.height()
                                },
                                accept: ".list-board-members .member",
                                hoverClass: "highlight-card",
                                drop: function(b, c) {
                                    var d;
                                    $(this).removeClass("highlight-card");
                                    d = c.draggable.data("id");
                                    c.draggable.clone();
                                    e.memberList.detect(function(b) {
                                        return b.id === d
                                    }) || e.addMember(d);
                                    I.refreshMemberFilters()
                                }
                            });
                            d = $(this.el).find(".list-card-members");
                            this.model.memberList.forEach(function(b) {
                                b = b.getView(Oa, "card_" + e.cid, {
                                    parent: e
                                });
                                d.append(b.render().el)
                            });
                            c = $(this.el).find(".badges");
                            this.model.badgeList.forEach(function(b) {
                                b = b.getView(E, "card");
                                c.append(b.render().el)
                            });
                            b = $(this.el).find(".list-card-votes");
                            g = this.model.get("idMembersVoted");
                            f = (g != null ? g.length: void 0) || 0;
                            b.text(z.formatCount(f, "vote")).toggleClass("hide", f === 0).toggleClass("voted", _.contains(g, h.myId()));
                            $(this.el).data("card", e);
                            return this
                        };
                        b.prototype.close = function(b) {
                            z.stop(b);
                            if (!this.doClicks()) return ! 1;
                            this.model.close()
                        };
                        b.prototype.openCardMenu = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: b.target,
                                top: 23,
                                view: this.model.getView(ra)
                            })
                        };
                        b.prototype.moveTo = function(b, c, d) {
                            b = c.item.parent().children().index(c.item);
                            this.model.moveToList(d.model, b)
                        };
                        b.prototype.moveIn = function(b, c, d) {
                            d.model.cardList === this.model.cardList && this.moveTo(b, c, d)
                        };
                        b.prototype.moveCard = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: b.target,
                                top: 35,
                                view: this.model.getView(Qa)
                            })
                        };
                        b.prototype.editLabels = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: b.target,
                                top: 35,
                                view: this.model.getView(J)
                            })
                        };
                        b.prototype.changeMembers = function(b) {
                            var c;
                            c = this.model;
                            z.preventDefault(b);
                            if (!this.doClicks()) return ! 1;
                            z.stopPropagation(b);
                            c.getBoard();
                            L.toggle({
                                elem: b.target,
                                top: 35,
                                view: c.getView(ea)
                            })
                        };
                        b.prototype.showDetail = function(b, c) {
                            var d,
                            e,
                            f,
                            g,
                            h;
                            Y("cardDetail");
                            this.model.markRelatedNotificationsRead();
                            Models.Notification.unbind("add", this.model.markRelatedNotificationsRead);
                            Models.Notification.bind("add",
                            this.model.markRelatedNotificationsRead);
                            if (_.isFunction(b)) d = b;
                            else {
                                if ((e = b) && (e.ctrlKey || e.metaKey || e.shiftKey)) return;
                                g = Controller.title;
                                d = function(b) {
                                    b || (Controller.goBack(), Controller.setLocation({
                                        title: g
                                    }))
                                }
                            }
                            if (e != null) {
                                if (e.isPropagationStopped()) return;
                                e.isDefaultPrevented() || z.stop(e)
                            }
                            if (!this.doClicks()) return ! 1;
                            U.cancelEdits();
                            f = e != null ? e.target: void 0;
                            h = k(function() {
                                Models.Notification.unbind("add", this.model.markRelatedNotificationsRead);
                                return typeof d === "function" ? d() : void 0
                            },
                            this);
                            W.show({
                                elem: f,
                                view: this.model.getView(Z),
                                location: "element",
                                hide: h
                            });
                            this.$(".list-card-wrapper").parent().addClass("active-card");
                            e != null && Controller.saveCardLocation(this.model, c)
                        };
                        b.prototype.doClicks = function() {
                            return ! DragSort.sorting
                        };
                        b.prototype.reopenCard = function(b) {
                            z.preventDefault(b);
                            this.model.reopen();
                            return ! 1
                        };
                        return b
                    } (),
                    Z = function() {
                        function b() {
                            this.unvote = k(this.unvote, this);
                            this.vote = k(this.vote, this);
                            this.addDueDate = k(this.addDueDate, this);
                            this.addChecklistMenu = k(this.addChecklistMenu,
                            this);
                            this.addChecklist = k(this.addChecklist, this);
                            this.inputComment = k(this.inputComment, this);
                            this.changeMembers = k(this.changeMembers, this);
                            this.submitComment = k(this.submitComment, this);
                            this.startUpload = k(this.startUpload, this);
                            this.renderAttachments = k(this.renderAttachments, this);
                            this.renderChecklists = k(this.renderChecklists, this);
                            this.renderVotes = k(this.renderVotes, this);
                            this.renderLabels = k(this.renderLabels, this);
                            this.renderBadges = k(this.renderBadges, this);
                            this.renderMemberList = k(this.renderMemberList,
                            this);
                            this.renderActionList = k(this.renderActionList, this);
                            this.renderOpen = k(this.renderOpen, this);
                            this.renderList = k(this.renderList, this);
                            this.renderCardAttrs = k(this.renderCardAttrs, this);
                            this.doClicks = k(this.doClicks, this);
                            this.showVotes = k(this.showVotes, this);
                            this.editLabels = k(this.editLabels, this);
                            this.moveCard = k(this.moveCard, this);
                            this.reopenCard = k(this.reopenCard, this);
                            this.closeCard = k(this.closeCard, this);
                            this.editDesc = k(this.editDesc, this);
                            this.render = k(this.render, this);
                            this.getData = k(this.getData,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            var b,
                            c;
                            c = this.model;
                            c.bind("change", this.renderCardAttrs).bind("change:closed", this.renderOpen).bind("change:labels", this.renderLabels).bind("change:idList", this.renderList);
                            c.getBoard().bind("change:labelNames", this.renderLabels);
                            b = k(function() {
                                return Models.Action.bind("add:" + this.model.id, this.renderActionList)
                            },
                            this);
                            this.model.bind("change:id", b);
                            this.model.bind("change:idMembersVoted", this.renderVotes);
                            b();
                            c.memberVotedList.onAddRemove(this.renderVotes);
                            c.memberList.onAddRemove(this.renderMemberList);
                            c.badgeList.bind("refresh", this.renderBadges);
                            c.checklistList.onAddRemove(this.renderChecklists);
                            c.attachmentList.onAddRemove(this.renderAttachments);
                            c.getBoard().bind("change:prefs", this.render);
                            this.getData()
                        };
                        b.prototype.events = {
                            "keypress .comment-text": "submitComment",
                            "click .js-close-card": "closeCard",
                            "click .js-reopen-card": "reopenCard",
                            "click .js-move-card": "moveCard",
                            "click .js-edit-labels": "editLabels",
                            "click .js-change-card-members": "changeMembers",
                            "click .js-add-comment": "submitComment",
                            "click .js-cancel-comment": "stopEditing",
                            "click .comment": "inputComment",
                            "focus .comment-text": "inputComment",
                            "click .js-edit-desc": "editDesc",
                            "click .js-add-checklist": "addChecklist",
                            "click .js-add-checklist-menu": "addChecklistMenu",
                            "click .js-add-due-date": "addDueDate",
                            "click .js-vote": "vote",
                            "click .js-unvote": "unvote",
                            "click .js-show-votes": "showVotes",
                            "change .js-attach-file": "startUpload",
                            "click .js-change-due-date": "addDueDate"
                        };
                        b.prototype.getData = function() {
                            var b;
                            b = this.model;
                            this.loading = !0;
                            rpc.invoke("getActions", [{
                                board: b.get("idBoard"),
                                card: b.id
                            },
                            {}], k(function(b) {
                                Models.Member.update(b.members);
                                Models.Action.update(b.actions);
                                this.loading = !1;
                                $(".js-loading-card-actions").hide()
                            },
                            this))
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d;
                            d = this;
                            c = d.model.toJSON();
                            b = _.map(_.filter(d.options.members,
                            function(b) {
                                return _.detect(d.options.CardMembers,
                                function(c) {
                                    return c.get("idMember") === b.id
                                })
                            }),
                            function(b) {
                                return b.toJSON()
                            });
                            c.active_members = b;
                            c.canComment = this.model.getBoard().canComment(h.me());
                            $(this.el).html(w.fill("card_detail", _.extend({
                                loading: this.loading
                            },
                            c), {
                                editable: this.model.editable()
                            }));
                            d.renderCardAttrs().renderList().renderActionList().renderMemberList().renderOpen().renderChecklists().renderVotes().renderBadges().renderAttachments().renderLabels();
                            return this
                        };
                        b.prototype.editDesc = function(b) {
                            z.stop(b);
                            this.edit("desc")
                        };
                        b.prototype.closeCard = function() {
                            this.model.close()
                        };
                        b.prototype.reopenCard = function() {
                            this.model.reopen()
                        };
                        b.prototype.moveCard = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: $(b.target).closest(".button-link"),
                                top: 35,
                                view: this.model.getView(Qa)
                            })
                        };
                        b.prototype.editLabels = function(b) {
                            z.stop(b);
                            L.toggle({
                                elem: $(b.target).closest(".button-link"),
                                top: 35,
                                view: this.model.getView(J)
                            })
                        };
                        b.prototype.showVotes = function(b) {
                            z.stop(b);
                            this.model.getVoterDisplayData(k(function() {
                                return L.toggle({
                                    elem: $(b.target).closest(".js-show-votes"),
                                    top: 30,
                                    view: this.model.getView(Xb)
                                })
                            },
                            this))
                        };
                        b.prototype.doClicks = function() {
                            return ! DragSort.sorting
                        };
                        b.prototype.renderCardAttrs = function() {
                            var b,
                            c,
                            d;
                            b = this.model;
                            d = b.get("name");
                            b = b.get("desc");
                            c = !!b;
                            $(this.el).find(".window-title").text(d);
                            c && $(this.el).find(".card-detail-desc>div.current").html(Ja.markdownAsHtml(b));
                            $(this.el).find(".card-detail-desc>div.current").toggle(c);
                            $(this.el).find(".card-detail-desc>p.bottom").toggle(!c);
                            return this
                        };
                        b.prototype.renderList = function() {
                            $(this.el).find(".js-current-list").html(w.fill("card_detail_list", {
                                listName: this.model.getList().get("name")
                            }));
                            return this
                        };
                        b.prototype.renderOpen = function() {
                            var b;
                            b = this.model.get("closed") === !0;
                            $(this.el).find(".js-close-card").toggleClass("hide", b);
                            $(this.el).find(".js-reopen-card").toggleClass("hide", !b);
                            return this
                        };
                        b.prototype.renderActionList = function() {
                            var b;
                            b = $(this.el).find(".list-actions"); (new c(Models.Action.getListForModel(this.model.id))).renderTo(b, {
                                compact: !1,
                                key: this.model.id,
                                model: this.model
                            });
                            return this
                        };
                        b.prototype.renderMemberList = function() {
                            var b,
                            c,
                            d;
                            d = this.model;
                            b = $(this.el).find(".card-detail-members");
                            c = $(this.el).find(".no-mems");
                            b.find(".member").not(".js-change-card-members").remove();
                            b.toggleClass("hide", d.memberList.length === 0);
                            c.toggleClass("hide", d.memberList.length !== 0);
                            d.memberList.forEach(function(c) {
                                c = c.getView(Oa, "carddetail_" + d.cid, {
                                    parent: d
                                });
                                return b.append(c.render().el)
                            });
                            return this
                        };
                        b.prototype.renderBadges = function() {
                            var b,
                            c,
                            d,
                            e;
                            e = this.model;
                            d = !1;
                            c = $(this.el).find(".due-date");
                            c.empty();
                            b = $(this.el).find(".badges");
                            b.empty();
                            e.badgeList.forEach(k(function(e) {
                                e.get("hasDueDate") ?
                                (e = e.toJSON(), d = !0, c.html(w.fill("card_detail_date", e, {
                                    editable: this.model.editable()
                                }))) : (e = e.getView(E, "carddetail"), b.append(e.render().el))
                            },
                            this));
                            $(this.el).find(".js-add-due-date").toggle(!d);
                            return this
                        };
                        b.prototype.renderLabels = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            b = _.filter(this.model.getLabels(),
                            function(b) {
                                return b.isActive
                            });
                            c = $(this.el).find(".card-labels");
                            c.empty().toggleClass("hide", b.length === 0);
                            e = 0;
                            for (f = b.length; e < f; e++) d = b[e],
                            c.append(w.fill("label", d));
                            return this
                        };
                        b.prototype.renderVotes =
                        function() {
                            var b,
                            c;
                            b = $(this.el).find(".vote-widget");
                            c = this.model.toJSON();
                            c.voted = _.include(this.model.get("idMembersVoted"), h.myId());
                            c.nVotes = this.model.get("idMembersVoted").length;
                            c.hasVotes = c.nVotes;
                            c.singleVote = c.nVotes === 1;
                            c.justYourVote = c.nVotes === 1 && c.voted;
                            c.canVote = this.model.getBoard().canVote(h.me());
                            b.html(w.fill("votes", c));
                            return this
                        };
                        b.prototype.renderChecklists = function() {
                            var b,
                            c;
                            c = this.model;
                            b = $(this.el).find(".checklists.window-module");
                            b.empty();
                            c.checklistList.forEach(function(d) {
                                d =
                                d.getView(Ia, c.cid, {
                                    card: c
                                });
                                b.append(d.render().el)
                            });
                            return this
                        };
                        b.prototype.renderAttachments = function() {
                            var b,
                            c,
                            d;
                            d = this.model;
                            $(this.el).find(".attachments .uploader");
                            c = $(this.el).find(".attachments .attachment-list");
                            b = $(this.el).find(".attachments .no-attachments");
                            c.empty().toggleClass("hide", d.attachmentList.length === 0);
                            b.toggleClass("hide", d.attachmentList.length !== 0);
                            d.attachmentList.forEach(function(b) {
                                b = b.getView(H, "card", {
                                    card: d
                                });
                                c.append(b.render().el)
                            });
                            return this
                        };
                        b.prototype.startUpload =
                        function(b) {
                            var c,
                            d,
                            e,
                            f;
                            Y("fileUpload", this.model);
                            f = _.uniqueId("iframe");
                            e = $(b.target);
                            c = $(this.el).find(".js-file-too-large").hide();
                            d = $("<iframe>").attr("name", f).css("display", "none").appendTo("body").load(function() {
                                $("body.error", d.contents()).text() && c.show();
                                return setTimeout(function() {
                                    return d.remove()
                                },
                                1E3)
                            });
                            e.closest("form").attr("target", f).find("input[name=token]").val(h.myToken()).end().submit();
                            setTimeout(function() {
                                return e.val("")
                            },
                            100)
                        };
                        b.prototype.submitComment = function(b) {
                            var c,
                            d,
                            e;
                            d = this.model;
                            if (! (b.type === "keypress" && (!((c = b.keyCode) === ub || c === Aa) || !b.ctrlKey))) return z.stopPropagation(b),
                            c = $(this.el).find(".comment-text"),
                            e = $.trim(c.val()),
                            c.val(""),
                            d.addComment(e),
                            U.cancelEdits(),
                            b.type === "keypress" && c[0].focus(),
                            !1
                        };
                        b.prototype.changeMembers = function(b) {
                            z.stop(b);
                            b = $(this.el).find(".js-change-card-members");
                            L.toggle({
                                elem: b[0],
                                top: 35,
                                view: this.model.getView(ea)
                            })
                        };
                        b.prototype.inputComment = function(b) {
                            z.stopPropagation(b);
                            b = $(this.el).find(".comment");
                            U.cancelEdits(b.find(".comment-text"));
                            b.addClass("focus")
                        };
                        b.prototype.addChecklist = function() {
                            var b;
                            b = this.model;
                            return b.onId(function() {
                                return b.getBoard().checklistList.create({
                                    name: "Checklist"
                                },
                                {
                                    success: function(c) {
                                        return c.onId(function(d) {
                                            var e;
                                            b.addChecklist(d);
                                            e = c.getView(Ia, b.cid, {
                                                card: b
                                            });
                                            return _.defer(function() {
                                                e.input.focus()
                                            })
                                        })
                                    }
                                })
                            })
                        };
                        b.prototype.addChecklistMenu = function(b) {
                            z.preventDefault(b);
                            L.toggle({
                                elem: b.target,
                                top: 35,
                                view: this.model.getView(m)
                            });
                            return ! 1
                        };
                        b.prototype.addDueDate = function(b) {
                            z.preventDefault(b);
                            L.toggle({
                                elem: b.target,
                                top: 35,
                                view: this.model.getView(uc)
                            });
                            return ! 1
                        };
                        b.prototype.vote = function(b) {
                            z.preventDefault(b);
                            this.model.vote(!0);
                            return ! 1
                        };
                        b.prototype.unvote = function(b) {
                            z.preventDefault(b);
                            this.model.vote(!1);
                            return ! 1
                        };
                        return b
                    } (),
                    ea = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.initialize = function() {
                            this.model.memberList.onAddRemove(this.render)
                        };
                        b.prototype.events = {};
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e;
                            d = this.model;
                            e = $(this.el);
                            b = d.getBoard().memberList;
                            c = d.memberList;
                            b = b.reject(function(b) {
                                return c.include(b)
                            });
                            e.html(N.to_html(w.select_members, {
                                assigned_members: c.toJSON(),
                                available_members: _.map(b,
                                function(b) {
                                    return b.toJSON()
                                })
                            }));
                            e.find("div[idMember]").click(function() {
                                var b,
                                c,
                                e;
                                c = $(this).attr("idMember");
                                b = "assigned-to-" + Models.Member.get(c).get("username");
                                e = $(d.view.el);
                                $(this).parent().hasClass("assigned-members") ? (d.removeMember(c), e.removeClass(b)) : d.addMember(c);
                                return I.refreshMemberFilters(c)
                            });
                            return this
                        };
                        return b
                    } (),
                    ra = function() {
                        function b() {
                            this.close = k(this.close, this);
                            this.editLabels = k(this.editLabels, this);
                            this.moveCard = k(this.moveCard, this);
                            this.changeMembers = k(this.changeMembers, this);
                            this.doClicks = k(this.doClicks, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        var c;
                        y(b, fa);
                        b.prototype.events = {
                            "click .js-change-card-members": "changeMembers",
                            "click .js-edit-labels": "editLabels",
                            "click .js-move-card": "moveCard",
                            "click .js-close-card": "close"
                        };
                        b.prototype.render = function() {
                            $(this.el).html(N.to_html(w.card_menu_popover, c));
                            return this
                        };
                        c = [];
                        b.prototype.doClicks = function() {
                            return ! DragSort.sorting
                        };
                        b.prototype.changeMembers = function(b) {
                            var c;
                            c = this.model;
                            z.preventDefault(b);
                            if (!this.doClicks()) return ! 1;
                            z.stopPropagation(b);
                            L.fill({
                                view: c.getView(ea)
                            })
                        };
                        b.prototype.moveCard = function(b) {
                            z.stop(b);
                            L.fill({
                                view: this.model.getView(Qa)
                            })
                        };
                        b.prototype.editLabels = function(b) {
                            z.stop(b);
                            L.fill({
                                view: this.model.getView(J)
                            })
                        };
                        b.prototype.close = function() {
                            var b,
                            c;
                            c = this.model;
                            b = c.getBoard();
                            Y("closeCard", b);
                            c.set({
                                closed: !0
                            });
                            c.save();
                            L.hide()
                        };
                        return b
                    } (),
                    Qa = function() {
                        function b() {
                            this.cancelChange = k(this.cancelChange, this);
                            this.commitChange = k(this.commitChange, this);
                            this.updatePositionList = k(this.updatePositionList, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.events = {
                            "change .select-list": "updatePositionList",
                            "click .js-commit-position": "commitChange",
                            "click .js-cancel-position": "cancelChange"
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            c = this.model;
                            b = {
                                lists: [],
                                positions: []
                            };
                            c.getBoard().listList.each(function(d) {
                                var e;
                                if (!d.get("closed")) {
                                    e = d.toJSON();
                                    if (d.id === c.get("idList")) e.selected = !0;
                                    return b.lists.push(e)
                                }
                            });
                            c.getList().cardList.indexOf(c);
                            $(this.el).html(N.to_html(w.move_card, b));
                            this.updatePositionList();
                            return this
                        };
                        b.prototype.updatePositionList = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            e = this.model;
                            c = $(this.el).find(".select-list");
                            d = $(this.el).find(".select-position");
                            c = c.find("option:selected").val();
                            c = e.getBoard().listList.get(c);
                            f = e.getList();
                            f = c === f;
                            b = c.cardList.filter(function(b) {
                                return ! b.get("closed")
                            });
                            c = b.length + (f ? -1: 0);
                            f = f ? _.indexOf(b, e) : -1;
                            d.empty();
                            for (e = 0; 0 <= c ? e <= c: e >= c; 0 <= c ? e++:e--) b = e + 1,
                            e === f ? b += " (current)": c > 0 && (e === 0 ? b += " (top)": e === c && (b += " (bottom)")),
                            b = $("<option>").val(e).text(b).appendTo(d),
                            e === f && b.attr("selected", "selected")
                        };
                        b.prototype.commitChange = function() {
                            var b,
                            c,
                            d;
                            d = this.model;
                            b = $(this.el).find(".select-list");
                            c = $(this.el).find(".select-position");
                            b = b.find("option:selected").val();
                            c = Number(c.find("option:selected").val().replace(/\D/g, "")) - 1;
                            b = d.getBoard().listList.get(b);
                            d.moveToList(b, c);
                            L.hide()
                        };
                        b.prototype.cancelChange = function() {
                            return L.hide()
                        };
                        return b
                    } (),
                    J = function() {
                        function b() {
                            this.toggleLabel = k(this.toggleLabel, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            this.model.bind("change:labels", this.render)
                        };
                        b.prototype.events = {
                            "click .card-label": "toggleLabel"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = {
                                labels: this.model.getLabels(),
                                showShortcuts: this.options.showShortcuts
                            };
                            $(this.el).html(N.to_html(w.card_edit_labels, b));
                            return this
                        };
                        b.prototype.toggleLabel = function(b) {
                            if (b = $(b.target).closest("[label]").attr("label")) this.model.toggleLabel(b),
                            this.options.hideOnSelect && L.hide()
                        };
                        return b
                    } ();
                    A("action") && (d = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.initialize = function() {
                            return this.date = new Date(this.get("date"))
                        };
                        b.prototype.getModel = function() {
                            return this.collection.options.model
                        };
                        b.prototype.isMember = function(b) {
                            return this.get("idMemberCreator") === b.id
                        };
                        return b
                    } (), e = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ba);
                        b.prototype.getMember = function(b) {
                            return Models.Member.get(b)
                        };
                        return b
                    } (), c = function() {
                        function b() {
                            this.sync = k(this.sync, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ca);
                        b.prototype.model = d;
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        b.prototype.comparator = function(b) {
                            return /^placeholder/.test(b.id) ? (b = parseInt(b.id.substr(11)),
                            -new Date(2020, 1, 1) - b) : -ja.parse(b.get("date")) || 0
                        };
                        b.prototype.sync = function(b, c, d) {
                            return d(ModelAction.actions)
                        };
                        b.prototype.getEntityLists = function(b) {
                            return (new e).getEntityLists(this.models, b)
                        };
                        b.prototype.renderTo = function(b, c) {
                            var d,
                            e,
                            g,
                            h,
                            i,
                            j,
                            c = _.extend({},
                            {
                                compact: !0
                            },
                            c);
                            g = this.getEntityLists(c);
                            b.empty();
                            j = [];
                            h = 0;
                            for (i = g.length; h < i; h++) {
                                e = g[h];
                                d = _.detect(this.models,
                                function(b) {
                                    return b.id === e.db_id
                                });
                                if ("oldest" in c && d.date < c.oldest) break;
                                d = d.getView(f, e._id, {
                                    entityList: e.entities,
                                    children: e.children,
                                    date: e.date,
                                    opts: c
                                });
                                j.push($(b).append(d.render().el))
                            }
                            return j
                        };
                        return b
                    } (), f = function() {
                        function b() {
                            this.clickComment = k(this.clickComment, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.initialize = function(b) {
                            this.entityList = b.entityList;
                            this.date = b.date;
                            this.children = b.children;
                            this.opts = b.opts
                        };
                        b.prototype.destructor = function() {};
                        b.prototype.events = {
                            "click .action-comment": "clickComment"
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i;
                            R("render", "rendering action");
                            g = this.opts;
                            e = {
                                entities: this.entityList,
                                date: this.date,
                                children: this.children,
                                hasChildren: !!this.children
                            };
                            if (g.showBoard && (c = Models.Board.get((h = this.model.get("data")) != null ? (i = h.board) != null ? i.id: void 0: void 0), c != null)) e.board = c.toJSON({
                                prefs: !0,
                                url: !0
                            });
                            if (g.showOrganization && (c = Models.Organization.get((b = this.model.get("data")) != null ? (f = b.organization) != null ? f.id: void 0: void 0), c != null)) e.organization = c.toJSON({
                                prefs: !0,
                                url: !0
                            });
                            g.compact ? e.entities = e.entities.slice(1) :
                            e.entities[0].noAvatar = !0;
                            d = this.getContext();
                            b = function(b) {
                                var c,
                                e,
                                f,
                                h,
                                i;
                                i = [];
                                f = 0;
                                for (h = b.length; f < h; f++) {
                                    c = b[f];
                                    c[c.type + "Type"] = !0;
                                    if (c.type === "comment") {
                                        e = {
                                            convertNewlines: !0
                                        };
                                        if (c.embedly && !g.compact) e.embedlyUrlData = JSON.parse(c.embedly),
                                        c.hasEmbedly = !0;
                                        c.html = Ja.textAsHtml(c.text, e)
                                    }
                                    i.push(c && (c.id || c.idContext) ? c.isContext = c.id === d.id || c.idContext === d.id: void 0)
                                }
                                return i
                            };
                            if (e.children) {
                                i = e.children;
                                c = 0;
                                for (h = i.length; c < h; c++) f = i[c],
                                b(f.entities)
                            }
                            b(e.entities);
                            e.showAttachmentPreview = !g.compact;
                            b = {
                                entity: w.entity
                            };
                            R("actions", e);
                            $(this.el).html(N.to_html(w.action, e, b));
                            if (e = Models.Member.get(this.entityList[0].id)) e = new vc({
                                model: e,
                                showStatus: !1
                            }),
                            $(this.el).find(".action-member-placeholder").replaceWith(e.render().el);
                            ja.update(this.el);
                            return this
                        };
                        b.prototype.getContext = function() {
                            return this.opts.model
                        };
                        b.prototype.clickComment = function(b) {
                            var c;
                            if (!$(b.target).is("a") && this.getContext().typeName === "Board") return c = _.detect(this.entityList,
                            function(b) {
                                return b.type === "card"
                            }),
                            this.getContext().getCard(c.id).getView(Ga).showDetail(b)
                        };
                        return b
                    } ());
                    A("notification") && (hb = function() {
                        function b() {
                            this.markRead = k(this.markRead, this);
                            this.getExpandedData = k(this.getExpandedData, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Notification";
                        b.prototype.getModel = function() {
                            return this.collection.options.model
                        };
                        b.prototype.getExpandedData = function() {
                            var b,
                            c,
                            d,
                            e;
                            c = _.extend(this.toJSON().data, {
                                date: this.get("date"),
                                isUnread: this.get("isUnread")
                            });
                            c[this.get("type")] = !0;
                            c.member = Models.Member.get(this.get("idMemberCreator"));
                            d = function(b) {
                                var d,
                                e,
                                f,
                                g;
                                f = _.keys(b)[0];
                                d = z.capitalize(f);
                                e = b[f];
                                return (g = e.id, Ha.call(h.me().get("id" + d + "sInvited"), g) >= 0) && !_.any(Models.Notification.all(),
                                function(b) {
                                    return b.get("type") === "invitedTo" + d && b.get("data")[f].id === e.id && b.get("date") > c.date
                                })
                            };
                            b = c.board;
                            e = c.organization;
                            if (this.get("type").indexOf("invitedTo") === 0) {
                                if (b != null) c.stillInvited = d({
                                    board: b
                                });
                                if (e != null) c.stillInvited = d({
                                    organization: e
                                })
                            }
                            return c
                        };
                        b.prototype.markRead = function() {
                            this.set({
                                isUnread: !1
                            });
                            Models.Notification.trigger("change",
                            this);
                            return h.me().api.markNotificationRead({
                                idNotification: this.id
                            })
                        };
                        return b
                    } (), T = function() {
                        function b() {
                            this.rejectInvitation = k(this.rejectInvitation, this);
                            this.acceptInvitation = k(this.acceptInvitation, this);
                            this.handleInvitation = k(this.handleInvitation, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.enablePopupMenu = !0;
                        b.prototype.showStatus = !1;
                        b.prototype.events = {
                            "click .js-accept-invitation": "acceptInvitation",
                            "click .js-reject-invitation": "rejectInvitation"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.getExpandedData();
                            b.entities = (new ka).getEntityList(this.model.toJSON());
                            b.entities.shift(1);
                            R("notifications", b);
                            $(this.el).html(N.to_html(w.notification, b, {
                                entity: w.entity
                            }));
                            ja.update(this.el);
                            b = b.member.getView(gb, "" + this.uniqueId() + "_" + this.model.cid, {
                                enablePopupMenu: this.enablePopupMenu,
                                showStatus: this.showStatus,
                                goToBoardProfile: !1,
                                goToProfile: this.goToProfile
                            });
                            $(this.el).find(".notification-member-placeholder").replaceWith(b.render().el);
                            return this
                        };
                        b.prototype.handleInvitation = function(b, c) {
                            var d;
                            d = this.model.get("data")[b.toLowerCase()].id;
                            return h.me().api.respondToInvitation({
                                accepted: c,
                                idModel: d,
                                modelType: b
                            },
                            k(function(c) {
                                var d;
                                d = {};
                                d["id" + b + "s"] = c["id" + b + "s"];
                                d["id" + b + "sInvited"] = c["id" + b + "sInvited"];
                                h.me().set(d);
                                h.me().save();
                                this.render()
                            },
                            this))
                        };
                        b.prototype.acceptInvitation = function() {
                            $(this.el).find(".js-accept-invitation").attr("disabled", "disabled");
                            if (this.model.get("type") === "invitedToBoard") return this.handleInvitation("Board",
                            !0);
                            else if (this.model.get("type") === "invitedToOrganization") return this.handleInvitation("Organization", !0)
                        };
                        b.prototype.rejectInvitation = function() {
                            if (this.model.get("type") === "invitedToBoard") return this.handleInvitation("Board", !1);
                            else if (this.model.get("type") === "invitedToOrganization") return this.handleInvitation("Organization", !1)
                        };
                        return b
                    } (), ka = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, cc);
                        b.prototype.getMember = function(b) {
                            return Models.Member.get(b)
                        };
                        return b
                    } (),
                    j = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, T);
                        b.prototype.goToProfile = !0;
                        return b
                    } (), Fa = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, T);
                        b.prototype.goToProfile = !1;
                        return b
                    } (), ob = function() {
                        function b() {
                            this.render = k(this.render, this);
                            this.markUnread = k(this.markUnread, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.markUnread = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            d = this.menuRows;
                            f = [];
                            for (b in d) c = d[b],
                            c.model.get("isUnread") &&
                            f.push((e = Models.Notification.get(b)) != null ? e.markRead() : void 0);
                            return f
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            c = this.model;
                            this.menuRows = {};
                            b = 0;
                            $(this.el).empty();
                            e = Models.Notification.sortedByDateDescending();
                            f = 0;
                            for (g = e.length; f < g; f++) {
                                d = e[f];
                                if (b > 4) break;
                                b++;
                                this.menuRows[d.id] = d.getView(j, "header");
                                $(this.el).append(this.menuRows[d.id].render().el)
                            }
                            b = function() {
                                var b,
                                c,
                                e,
                                f;
                                e = Models.Notification.sortedByDateDescending().slice(5);
                                f = [];
                                b = 0;
                                for (c = e.length; b < c; b++) d = e[b],
                                d.get("isUnread") &&
                                f.push(d);
                                return f
                            } ().length;
                            b = b === 0 ? "": " (" + b + " more unread)";
                            e.length === 0 && $(this.el).append('<div class="empty">No Notifications</div>');
                            $(this.el).append(N.to_html(w.menu, {
                                menu_cards: [{
                                    name: "See All Notifications" + b,
                                    url: "/" + c.get("username") + "/notifications"
                                }]
                            }));
                            return this
                        };
                        return b
                    } ());
                    A("badge") && (u = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Badge";
                        return b
                    } (), C = function() {
                        function b() {
                            this.getCard = k(this.getCard, this);
                            this.update = k(this.update,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ca);
                        b.prototype.model = u;
                        b.prototype.initialize = function(b, c) {
                            var d;
                            this.options = c;
                            this.bind("change:pos", this.sort);
                            d = this.getCard();
                            d.bind("change:badges", this.update);
                            d.bind("change:closed", this.update);
                            Models.Notification.bind("add", this.update);
                            Models.Notification.bind("change", this.update);
                            Models.Notification.bind("remove", this.update);
                            setInterval(this.update, 36E5);
                            this.update()
                        };
                        b.prototype.update = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i,
                            j;
                            d = this.options.model;
                            c = d.get("badges");
                            b = []; (new Date).getTime();
                            if (c != null) c.description && b.push(new u({
                                hasDesc: !0
                            })),
                            c.comments && b.push(new u({
                                hasComments: !0,
                                className: "comments",
                                count: c.comments
                            })),
                            c.attachments && b.push(new u({
                                hasAttachments: !0,
                                count: c.attachments
                            })),
                            c.checkItems && b.push(new u({
                                hasTasks: !0,
                                count: c.checkItemsChecked,
                                total: c.checkItems,
                                hasTotal: !0,
                                className: c.checkItems === c.checkItemsChecked ? "complete": ""
                            })),
                            c.due && (g = ja.parse(c.due), e = new Date, f = "", g < e ? (f = "due-late", i = !0) : f = (g - e) / 36E5 < 8 ? (h = !0, "due-soon") :
                            "due-future", b.push(new u({
                                hasDueDate: !0,
                                date: g,
                                dateText: ja.toLongString(g),
                                shortDueDate: g.toString("MMM d"),
                                className: f,
                                isDueSoon: h,
                                isLate: i
                            }))),
                            c.fogbugz && b.push(new u({
                                hasFogBugzLink: !0,
                                fogBugzUrl: c.fogbugz,
                                click: function() {
                                    return q.open(c.fogbugz, "FogBugz")
                                }
                            })),
                            d.get("closed") && b.push(new u({
                                isArchived: !0
                            })),
                            (e = function() {
                                var b,
                                c,
                                e,
                                f,
                                g;
                                e = Models.Notification.all();
                                g = [];
                                b = 0;
                                for (c = e.length; b < c; b++) j = e[b],
                                j.get("isUnread") && ((f = j.get("data").card) != null ? f.id: void 0) === d.id && d.id && g.push(1);
                                return g
                            } ().length) &&
                            b.push(new u({
                                hasUnreadNotifications: !0,
                                count: e,
                                className: "unread-notification"
                            })),
                            this.refresh(b)
                        };
                        b.prototype.getCard = function() {
                            return this.options.model
                        };
                        return b
                    } (), E = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "badge";
                        b.prototype.events = {
                            click: "click"
                        };
                        b.prototype.initialize = function() {
                            var b,
                            c;
                            b = this.model.get("className");
                            c = this.model.get("highlight");
                            b && $(this.el).addClass(b);
                            c && $(this.el).addClass("highlight")
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON();
                            b.single = b.count === 1;
                            $(this.el).html(N.to_html(w.badges, b));
                            return this
                        };
                        b.prototype.click = function(b) {
                            var c;
                            if (c = this.model.get("click")) return z.stop(b),
                            c(b, this.model)
                        };
                        return b
                    } ());
                    A("checklist") && (mb = function() {
                        function b() {
                            this.editable = k(this.editable, this);
                            this.getCheckItem = k(this.getCheckItem, this);
                            this.getCompletedCount = k(this.getCompletedCount, this);
                            this.getBoard = k(this.getBoard, this);
                            this.withIdParents = k(this.withIdParents, this);
                            b.__super__.constructor.apply(this,
                            arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Checklist";
                        b.prototype.initialize = function() {
                            return Api.init(this)
                        };
                        b.prototype.postInitialize = function() {
                            var b;
                            this.checkItemList = new Va([], {
                                model: this
                            });
                            b = k(function() {
                                var b;
                                b = this.checkItemList.filter(function(b) {
                                    return /^placeholder/.test(b.id)
                                });
                                this.checkItemList.refresh(this.get("checkItems"), {
                                    model: this
                                });
                                return this.checkItemList.add(b)
                            },
                            this);
                            b();
                            this.bind("change:checkItems", b);
                            return this.setReady()
                        };
                        b.prototype.withIdParents = function(b) {
                            return this.getBoard().onId(function(c) {
                                return b([c])
                            })
                        };
                        b.prototype.getBoard = function() {
                            var b;
                            b = this.collection.options.model;
                            switch (b.typeName) {
                            case "Board":
                                return b;
                            case "Card":
                                return b.getBoard();
                            default:
                                return null
                            }
                        };
                        b.prototype.getCompletedCount = function(b) {
                            var c;
                            c = 0;
                            this.checkItemList.each(function(d) {
                                var e;
                                e = b.checkItemStateList.detect(function(b) {
                                    return b.get("idCheckItem") === d.id
                                });
                                if ((e != null ? e.get("state") : void 0) === "complete") return c++
                            });
                            return c
                        };
                        b.prototype.getCheckItem = function(b) {
                            return this.checkItemList.get(b)
                        };
                        b.prototype.editable =
                        function() {
                            return this.getBoard().editable()
                        };
                        b.prototype.calcPos = function(b, c) {
                            return z.calcPos(b, this.checkItemList, c)
                        };
                        return b
                    } (), $a = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, xa);
                        b.prototype.model = mb;
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        b.prototype.comparator = function(b) {
                            return b.get("name")
                        };
                        b.prototype.idList = function() {
                            return this.pluck("_id")
                        };
                        return b
                    } (), m = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this,
                            arguments)
                        }
                        y(b, fa);
                        b.prototype.render = function() {
                            $(this.el).html(w.fill("checklist_add_menu", []));
                            return this
                        };
                        return b
                    } (), Za = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "CheckItem";
                        b.prototype.initialize = function() {
                            return Api.init(this)
                        };
                        b.prototype.postInitialize = function() {
                            return this.setReady()
                        };
                        b.prototype.withIdParents = function(b) {
                            var c;
                            c = this.getChecklist();
                            return c.onId(function(d) {
                                c.withIdParents(function(c) {
                                    b([d].concat(c))
                                })
                            })
                        };
                        b.prototype.getChecklist =
                        function() {
                            return this.collection.options.model
                        };
                        b.prototype.editable = function() {
                            return this.getChecklist().editable()
                        };
                        b.prototype.getContext = function() {
                            return this.getChecklist()
                        };
                        b.prototype.move = function(b) {
                            this.set("pos", this.getChecklist().calcPos(b, this));
                            this.save();
                            this.collection.sort({
                                silent: !0
                            })
                        };
                        return b
                    } (), Va = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, xa);
                        b.prototype.model = Za;
                        b.prototype.initialize = function(b, c) {
                            this.options = c;
                            this.bind("change:pos", this.sort)
                        };
                        b.prototype.comparator = function(b) {
                            return b.get("pos")
                        };
                        return b
                    } (), Nb = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.className = "check-item task";
                        b.prototype.events = {
                            "click .checkbox": "toggleState",
                            "click .js-delete-item": "delete",
                            "click .js-convert-item-to-card": "convertToCard",
                            movecheckitem: "moveCheckItem"
                        };
                        b.prototype.getCheckItemState = function() {
                            return this.options.checkItemState
                        };
                        b.prototype.getCard = function() {
                            return this.options.card
                        };
                        b.prototype.customSet = function(b, c) {
                            return b === "name" ? (this.model.withIdParents(k(function(b) {
                                return this.model.api.changeName({
                                    name: c,
                                    idCard: this.getCard().id,
                                    idParents: b
                                })
                            },
                            this)), !0) : !1
                        };
                        b.prototype.render = function() {
                            var b,
                            c;
                            c = this.model.toJSON();
                            b = this.getCheckItemState();
                            c.state = b != null ? b.get("state") : void 0;
                            c.checked = c.state === "complete";
                            $(this.el).html(w.fill("check_item", c, {
                                editable: this.model.editable()
                            })).toggleClass("complete", c.checked);
                            return this
                        };
                        b.prototype.toggleState = function() {
                            var b,
                            c;
                            this.model.editable() && (c = !$(this.el).hasClass("complete"), $(this.el).toggleClass("complete", c), b = this.getCard(), b.api.setChecklistTaskState({
                                state: c ? "complete": "",
                                idCheckItem: this.model.id
                            }))
                        };
                        b.prototype["delete"] = function(b) {
                            z.stop(b);
                            this.model.destroy()
                        };
                        b.prototype.convertToCard = function(b) {
                            Y("convertCheckItemToCard");
                            z.stop(b);
                            this.model.withIdParents(k(function(b) {
                                this.model.getChecklist().checkItemList.remove(this.model);
                                this.model.api.convertToCard({
                                    idCard: this.getCard().id,
                                    idParents: b
                                })
                            },
                            this))
                        };
                        b.prototype.moveCheckItem = function(b, c) {
                            this.model.move(c.item.parent().children().index(c.item))
                        };
                        return b
                    } (), Ia = function() {
                        function b() {
                            this.addTask = k(this.addTask, this);
                            this.cancelItemEditing = k(this.cancelItemEditing, this);
                            this.renderCheckItems = k(this.renderCheckItems, this);
                            this.renderName = k(this.renderName, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.className = "checklist";
                        b.prototype.events = {
                            "keypress .new-task-text": "submitTask",
                            "click .js-add-checklist-item": "submitTask",
                            "click .js-cancel-checklist-item": "cancelItemEditing",
                            "click .new-task-text": "focusTaskInput",
                            "focus .new-task-text": "inputTask",
                            "click .js-delete-item": "delete",
                            "sortstop .task-list": "sortStop"
                        };
                        b.prototype.initialize = function() {
                            var b;
                            b = this.model;
                            b.checkItemList.onAddRemove(this.renderCheckItems);
                            b.bind("change:name", this.renderName);
                            this.getCard().checkItemStateList.bind("change:state", this.renderCheckItems).onAddRemove(this.renderCheckItems);
                            return this.nextPos =
                            0
                        };
                        b.prototype.commitEdits = function(b) {
                            if (fa.prototype.commitEdits.apply(this, arguments)) return this.model.checkItemList.length || this.input.val("").focus(),
                            !0
                        };
                        b.prototype.getCard = function() {
                            return this.options.card
                        };
                        b.prototype.render = function() {
                            R("render", "rendering checklist state " + this.model.get("name"));
                            $(this.el).html(w.fill("checklist", this.model.toJSON(), {
                                editable: this.model.editable()
                            })).find(".task-list").sortable({
                                axis: "y",
                                containment: ".window-main-col",
                                tolerance: "pointer",
                                placeholder: "task placeholder",
                                items: ".task",
                                start: function(b, c) {
                                    var d;
                                    d = $(c.helper).height();
                                    return $(c.placeholder).height(d)
                                }
                            });
                            this.input = $(this.el).find("input.new-task-text");
                            this.input.fixPlaceholder();
                            return this.renderName().renderCheckItems()
                        };
                        b.prototype.renderName = function() {
                            $(this.el).find("div.checklist-title div[attr=name] .current").text(this.model.get("name"));
                            return this
                        };
                        b.prototype.renderCheckItems = function() {
                            var b,
                            c,
                            d,
                            e;
                            e = $(this.el).find(".task-list");
                            e.empty();
                            b = this.getCard();
                            this.model.checkItemList.each(k(function(c) {
                                var t;
                                var d,
                                f;
                                d = b.checkItemStateList.detect(function(b) {
                                    return b.get("idCheckItem") === c.id
                                });
                                t = c.getView(Nb, "card_" + b.cid + "_" + this.model.cid + "_" + ((f = d != null ? d.cid: void 0) != null ? f: ""), {
                                    card: b,
                                    checkItemState: d
                                }),
                                d = t;
                                return e.append(d.render().el)
                            },
                            this));
                            c = this.model.getCompletedCount(this.getCard());
                            d = this.model.checkItemList.length;
                            c = d > 0 ? Math.round(100 * c / d) : 0;
                            $(this.el).find(".progress-current").width(c + "%");
                            $(this.el).find(".progress-percentage").text(c + "%");
                            return this
                        };
                        b.prototype.cancelItemEditing =
                        function(b) {
                            $(b.target).closest(".new-task").find(".new-task-text").val("");
                            U.cancelEdits();
                            return ! 1
                        };
                        b.prototype.addTask = function(b) {
                            var c,
                            d;
                            c = this.model;
                            d = c.checkItemList.length > 0 ? c.checkItemList.at(c.checkItemList.length - 1).get("pos") + 16384: 16384;
                            if (this.nextPos > d) d = this.nextPos;
                            d += Math.floor(Math.random() * 1024);
                            this.nextPos = d + 16384;
                            c.withIdParents(k(function(e) {
                                var f,
                                e = {
                                    name: b,
                                    type: "check",
                                    pos: d,
                                    idParents: e
                                };
                                f = c.checkItemList.addPlaceholder(e);
                                return c.api.addTask(e, k(function(b) {
                                    f();
                                    if (b.checkItems) return this.model.set({
                                        checkItems: b.checkItems
                                    })
                                },
                                this), f)
                            },
                            this))
                        };
                        b.prototype.inputTask = function() {
                            U.cancelEdits(this.input);
                            $(this.el).find(".new-task").addClass("focus");
                            setTimeout(k(function() {
                                return $(this.input).select()
                            },
                            this), 10)
                        };
                        b.prototype.focusTaskInput = function() {
                            $(this.input).focus()
                        };
                        b.prototype.submitTask = function(b) {
                            var c;
                            if (b.type !== "keypress" || z.isSubmitKey(b)) if (z.stopPropagation(b), c = jQuery.trim(this.input.val()), c !== "") return this.addTask(c),
                            this.input.val(""),
                            b.type === "keypress" ? this.input.select().focus() : U.cancelEdits(),
                            !1
                        };
                        b.prototype["delete"] = function() {
                            this.getCard().removeChecklist(this.model.id)
                        };
                        b.prototype.sortStop = function(b, c) {
                            z.stopPropagation(b);
                            c.item.trigger("movecheckitem", [c])
                        };
                        return b
                    } ());
                    A("checkitemstate") && (Fb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "CheckItemState";
                        b.prototype.postInitialize = function() {
                            return this.setReady()
                        };
                        b.prototype.withIdParents = function(b) {
                            var c;
                            c = this.getCard();
                            return c.onId(function(d) {
                                return c.withIdParents(function(c) {
                                    return b([d].concat(c))
                                })
                            })
                        };
                        b.prototype.getCard = function() {
                            return this.collection.options.model
                        };
                        return b
                    } (), Mb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, xa);
                        b.prototype.model = Fb;
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        return b
                    } ());
                    A("datePicker") && (uc = function() {
                        function b() {
                            this.render = k(this.render, this);
                            this.updateDate = k(this.updateDate, this);
                            this.dateKeyDown = k(this.dateKeyDown, this);
                            this.removeDueDate = k(this.removeDueDate, this);
                            this.submitDueDate = k(this.submitDueDate, this);
                            this.cancelDueDate =
                            k(this.cancelDueDate, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {};
                        b.prototype.events = {
                            "click .js-cancel-edit": "cancelDueDate",
                            "click .js-save-edit": "submitDueDate",
                            "click .js-remove-date": "removeDueDate",
                            "keydown .js-dpicker-date-input": "dateKeyDown",
                            "blur .js-dpicker-date-input": "updateDate"
                        };
                        b.prototype._closeDialog = function(b) {
                            z.stop(b);
                            return L.hide()
                        };
                        b.prototype._getDate = function() {
                            var b,
                            c;
                            b = $(this.el).find(".js-dpicker-date-input").val();
                            c =
                            $(this.el).find(".js-dpicker-time-input").val();
                            return Date.parse("" + b + " " + c)
                        };
                        b.prototype.cancelDueDate = function(b) {
                            return this._closeDialog(b)
                        };
                        b.prototype.submitDueDate = function(b) {
                            var c;
                            if (c = this._getDate()) return this._closeDialog(b),
                            this.model.api.setDueDate({
                                dueDate: c
                            });
                            else z.stop(b)
                        };
                        b.prototype.removeDueDate = function(b) {
                            this._closeDialog(b);
                            return this.model.api.setDueDate({
                                dueDate: null
                            })
                        };
                        b.prototype.dateKeyDown = function(b) {
                            if (z.isSubmitKey(b)) return this.updateDate(b)
                        };
                        b.prototype.updateDate =
                        function() {
                            var b;
                            b = $(this.el).find(".js-dpicker-date-input");
                            return $(this.el).find(".js-dpicker-cal").datepicker("setDate", Date.parse(b.val()))
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            i,
                            j,
                            v,
                            k,
                            l,
                            m;
                            c = (b = this.model.get("badges")) != null ? b.due: void 0;
                            b = this.model.toJSON();
                            b.hasDueDate = c != null;
                            $(this.el).html(w.fill("date_picker", b, {
                                editable: h.isMe(this.model)
                            }));
                            i = $(this.el).find(".js-dpicker-time-input");
                            j = $(this.el).find(".js-dpicker-time-select");
                            d = $(this.el).find(".js-dpicker-date-input");
                            b = $(this.el).find(".js-dpicker-cal");
                            c = c ? ja.parse(c) : Date.today().add({
                                days: 1,
                                hours: 12
                            });
                            b.datepicker({
                                altField: ".js-dpicker-date-input",
                                defaultDate: c,
                                showOtherMonths: !0,
                                selectOtherMonths: !0
                            });
                            d.val(c.toString("MM/dd/yyyy"));
                            i.val(c.toString("h:mm tt"));
                            f = ["AM", "PM"];
                            b = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
                            v = 0;
                            for (l = f.length; v < l; v++) {
                                d = f[v];
                                k = 0;
                                for (m = b.length; k < m; k++) e = b[k],
                                g = '<option value="' + e + ":00 " + d + '">' + e + ":00 " + d + "</option>",
                                e = '<option value="' + e + ":30 " + d + '">' + e + ":30 " + d + "</option>",
                                j.append(g, e)
                            }
                            c =
                            c.toString("h:00 tt");
                            j.find('option[value="' + c + '"]').attr("selected", !0);
                            j.change(function() {
                                var b;
                                b = j.find("option:selected").val();
                                return i.val(b)
                            });
                            if (WindowSize.fSmall || WindowSize.fExtraSmall) i.hide(),
                            j.addClass("show");
                            return this
                        };
                        return b
                    } ());
                    A("attachment") && (F = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, ma);
                        b.prototype.typeName = "Attachment";
                        b.prototype.initialize = function() {};
                        b.prototype.postInitialize = function() {
                            return this.setReady()
                        };
                        b.prototype.withIdParents =
                        function(b) {
                            var c;
                            c = this.getCard();
                            return c.onId(function(d) {
                                return c.withIdParents(function(c) {
                                    return b([d].concat(c))
                                })
                            })
                        };
                        b.prototype.getCard = function() {
                            return this.collection.options.model
                        };
                        b.prototype.editable = function() {
                            return this.getCard().editable()
                        };
                        return b
                    } (), B = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, xa);
                        b.prototype.model = F;
                        b.prototype.comparator = function(b) {
                            return - ja.parse(b.get("date")) || 0
                        };
                        b.prototype.initialize = function(b, c) {
                            this.options = c
                        };
                        return b
                    } (),
                    H = function() {
                        function b() {
                            this.deleteAttachment = k(this.deleteAttachment, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.className = "attachment";
                        b.prototype.events = {
                            "click .js-delete-attachment": "deleteAttachment"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON();
                            b.size = Ja.bytes(b.bytes);
                            $(this.el).addClass("clearfix").html(w.fill("attachment", b, {
                                editable: this.model.editable()
                            }));
                            ja.update(this.el);
                            return this
                        };
                        b.prototype.deleteAttachment =
                        function() {
                            return this.model.getCard().api.deleteAttachment(this.model.id)
                        };
                        return b
                    } ());
                    if (A("organization")) ib = function() {
                        function b() {
                            this.invited = k(this.invited, this);
                            this.owned = k(this.owned, this);
                            this.ownedByMember = k(this.ownedByMember, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Ya);
                        b.prototype.typeName = "Organization";
                        b.prototype.nameAttr = "displayName";
                        b.prototype.initialize = function() {
                            Api.init(this)
                        };
                        b.prototype.postInitialize = function() {
                            var b,
                            c;
                            this.invitationList = new jc(this.get("invitations") ||
                            [], {
                                model: this
                            });
                            this.boardList = new X;
                            this.memberList = new ta;
                            b = k(function() {
                                this.memberList.refresh(Models.Member.getList(_.pluck(this.get("memberships"), "idMember") || []), {
                                    model: this
                                })
                            },
                            this);
                            this.bind("change:memberships", b);
                            b();
                            b = k(function() {
                                this.boardList.refresh(Models.Board.getList(this.get("idBoards")))
                            },
                            this);
                            c = k(function() {
                                this.invitationList.refresh(this.get("invitations"))
                            },
                            this);
                            this.bind("change:idBoards", b);
                            this.bind("change:invitations", c);
                            b();
                            this.setReady()
                        };
                        b.prototype.prefNames =
                        ["permissionLevel"];
                        b.prototype.editable = function() {
                            var b,
                            c;
                            b = h.me();
                            c = _.detect(this.get("memberships"), k(function(c) {
                                return c.idMember === b.id
                            },
                            this));
                            return b && (c != null ? c.memberType: void 0) === "admin"
                        };
                        b.prototype.getMemberType = function(b) {
                            return MemberOwner.getMemberType.call(this, b)
                        };
                        b.prototype.isMember = function(b) {
                            var c;
                            return (c = this.getMemberType(b)) === "normal" || c === "admin"
                        };
                        b.prototype.ownedByMember = function(b) {
                            return this.getMemberType(b) === "admin"
                        };
                        b.prototype.owned = function() {
                            return this.getMemberType(h.me()) ===
                            "admin"
                        };
                        b.prototype.invited = function() {
                            return this.getMemberType(h.me()) === "invited"
                        };
                        b.prototype.responseToInvite = function(b, c) {
                            var d;
                            d = h.me();
                            return d.api.respondToInvitation({
                                accepted: b,
                                idModel: this.id,
                                token: $.cookie("invite-token-" + this.id),
                                modelType: "Board"
                            },
                            function(e) {
                                b && (d.set({
                                    idBoards: e.idBoards,
                                    idBoardsInvited: e.idBoardsInvited
                                }), d.save());
                                typeof c === "function" && c()
                            })
                        };
                        b.prototype.responseToInvite = function(b, c) {
                            h.me().api.respondToInvitation({
                                accepted: b,
                                idModel: this.id,
                                token: $.cookie("invite-token-" +
                                this.id),
                                modelType: "Organization"
                            },
                            c)
                        };
                        b.prototype.acceptInvite = function(b) {
                            return this.responseToInvite(!0, b)
                        };
                        b.prototype.rejectInvite = function(b) {
                            return this.responseToInvite(!1, b)
                        };
                        b.prototype.toJSON = function(c) {
                            var d;
                            c == null && (c = {});
                            d = b.__super__.toJSON.apply(this, arguments);
                            if (c.url) d.url = Controller.getOrganizationUrl(this.get("name"));
                            return d
                        };
                        return b
                    } (),
                    q.OrganizationList = Backbone.Collection.extend({
                        model: ib,
                        initialize: function() {
                            _.bindAll(this, "sync");
                            this.bind("change:name", this.sort)
                        },
                        comparator: function(b) {
                            var c;
                            return ((c = b.get("name")) != null ? c.toUpperCase() : void 0) || ""
                        },
                        sync: function(b, c, d) {
                            d(Models.Organization.all())
                        }
                    }),
                    Jb = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.initialize = function() {
                            this.model.bindEvents(this.render, "change:name", "change:displayName")
                        };
                        b.prototype.events = {
                            "click .js-accept-invite": "acceptInvite",
                            "click .js-reject-invite": "rejectInvite"
                        };
                        b.prototype.render = function() {
                            var b;
                            b =
                            this.model.toJSON({
                                prefs: !0,
                                url: !0
                            });
                            $(this.el).html(w.fill("org_detail", b, {
                                editable: this.model.editable(),
                                invited: this.model.invited()
                            }));
                            setTimeout(k(function() {
                                this.renderMainContent()
                            },
                            this), 0);
                            return this
                        };
                        b.prototype.setActiveView = function(b) {
                            $(b).addClass("active")
                        };
                        b.prototype.acceptInvite = function() {
                            $(this.el).find(".js-accept-invite").attr("disabled", "disabled");
                            return this.model.acceptInvite(function() {
                                return q.navigate()
                            })
                        };
                        b.prototype.rejectInvite = function() {
                            return this.model.rejectInvite(function() {
                                return q.navigate()
                            })
                        };
                        return b
                    } (),
                    ac = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.View);
                        b.prototype.tagName = "ul";
                        b.prototype.initialize = function() {
                            _.bindAll(this, "render");
                            this.model.organizationList.bind("change:closed", this.render).bind("refresh", this.render).bind("add", this.render).bind("remove", this.render)
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e;
                            b = this.model;
                            $(this.el).html("");
                            e = b.organizationList.models;
                            b = 0;
                            for (d = e.length; b < d; b++) c = e[b],
                            c = new mc({
                                model: c
                            }),
                            $(this.el).append(c.render().el);
                            return this
                        };
                        return b
                    } (),
                    mc = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.View);
                        b.prototype.tagName = "li";
                        b.prototype.initialize = function() {
                            _.bindAll(this, "render")
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON({
                                prefs: !0,
                                url: !0
                            });
                            $(this.el).html(N.to_html(w.member_organization, b));
                            return this
                        };
                        return b
                    } (),
                    qc = function() {
                        function b() {
                            this.renderMembers = k(this.renderMembers, this);
                            this.renderBoards = k(this.renderBoards, this);
                            this.renderMainContent = k(this.renderMainContent,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Jb);
                        b.prototype.initialize = function() {
                            b.__super__.initialize.apply(this, arguments);
                            this.model.memberList.bind("change:status", this.renderMembers).onAddRemove(this.renderMembers);
                            this.model.boardList.onAddRemove(this.renderMainContent)
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = this.model.toJSON();
                            b.websiteHref = z.sanitizeWebAddress(b.website);
                            b.empty = this.model.boardList.length === 0;
                            b.descriptionHtml = Ja.textAsHtml(b.description, {
                                convertNewlines: !0
                            });
                            $(this.el).find(".window-main-col").html(w.fill("org_profile", b, {
                                editable: this.model.editable()
                            }));
                            this.renderMembers().renderBoards();
                            this.setActiveView(".js-org-profile");
                            return this
                        };
                        b.prototype.renderBoards = function() {
                            var b;
                            b = new na({
                                model: this.model,
                                idOrganizations: [this.model.id]
                            });
                            $(this.el).find(".list-boards").html(b.render().el);
                            return this
                        };
                        b.prototype.renderMembers = function() {
                            MemberOwner.renderMembers.call(this, ".list-org-members", Eb);
                            return this
                        };
                        return b
                    } (),
                    gc = function() {
                        function b() {
                            this.renderMainContent =
                            k(this.renderMainContent, this);
                            this.setValue = k(this.setValue, this);
                            this.getValue = k(this.getValue, this);
                            this.selectOption = k(this.selectOption, this);
                            this.setPermissionLevel = k(this.setPermissionLevel, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Jb);
                        b.prototype.events = {
                            "click .js-save-changes": "saveChanges",
                            "click .pref-options a": "selectOption"
                        };
                        b.prototype.setPermissionLevel = function(b) {
                            var c;
                            c = $(this.el).find(".pref-options");
                            c.find("a").removeClass("active");
                            c.find("a[value='" + b + "']").addClass("active");
                            $(this.el).find('input[name="permissionLevel"]').val(b)
                        };
                        b.prototype.selectOption = function(b) {
                            b = $(b.target).closest("a");
                            b.hasClass("disabled") || this.setPermissionLevel(b.attr("value"))
                        };
                        b.prototype.getValue = function(b) {
                            return $(this.el).find("[name=" + b + "]").val()
                        };
                        b.prototype.setValue = function(b, c) {
                            return $(this.el).find("[name=" + b + "]").val(c)
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = this.model.toJSON({
                                prefs: !0
                            });
                            $(this.el).find(".window-main-col").html(w.fill("org_account", b, {
                                editable: this.model.editable()
                            }));
                            this.setActiveView(".js-org-account");
                            return this
                        };
                        b.prototype.saveChanges = function(b) {
                            var c,
                            d,
                            e,
                            f,
                            g,
                            h;
                            e = this;
                            z.preventDefault(b);
                            b = {};
                            h = ["displayName", "name", "website", "description"];
                            f = 0;
                            for (g = h.length; f < g; f++) c = h[f],
                            b[c] = this.getValue(c);
                            b.prefs = {};
                            h = this.model.prefNames;
                            f = 0;
                            for (g = h.length; f < g; f++) c = h[f],
                            b.prefs[c] = this.getValue(c);
                            b.name = b.name.toLowerCase();
                            this.setValue("name", b.name);
                            d = b.name;
                            return this.model.save(b, {
                                waitForServer: !0,
                                success: function() {
                                    Controller.organizationProfileView(d)
                                },
                                error: function(b, c) {
                                    $(e.el).find(".error").text(c != null ? c: "error").show();
                                    z.scrollToTop()
                                }
                            })
                        };
                        return b
                    } (),
                    pc = function() {
                        function b() {
                            this.renderMembers = k(this.renderMembers, this);
                            this.renderMainContent = k(this.renderMainContent, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Jb);
                        b.prototype.initialize = function() {
                            b.__super__.initialize.apply(this, arguments);
                            this.model.memberList.bind("change:status", this.renderMembers).bind("refresh", this.renderMembers).bind("add", this.renderMembers).bind("remove",
                            this.renderMembers)
                        };
                        b.prototype.renderMainContent = function() {
                            var b;
                            b = new kb({
                                model: this.model
                            });
                            $(this.el).find(".window-main-col").html(b.render().el);
                            this.renderMembers();
                            this.setActiveView(".js-org-members");
                            return this
                        };
                        b.prototype.renderMembers = function() {
                            return MemberOwner.renderMembers.call(this, ".list-org-members", Eb)
                        };
                        return b
                    } (),
                    kb = function() {
                        function b() {
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, yb);
                        b.prototype.className = "org-member-modal";
                        b.prototype.templates = {
                            main: w.org_members_manage,
                            member: w.org_member_search_result,
                            email: w.org_email_search_result
                        };
                        b.prototype.rpcSearchFunctionName = "searchOrganizationMembers";
                        b.prototype.initialize = function() {
                            b.__super__.initialize.call(this, this.model.invitationList)
                        };
                        return b
                    } (),
                    hc = function() {
                        function b() {
                            this.autoName = k(this.autoName, this);
                            this.lockName = k(this.lockName, this);
                            this._set = k(this._set, this);
                            this._get = k(this._get, this);
                            this._findInput = k(this._findInput, this);
                            this.selectOption = k(this.selectOption, this);
                            this.setPermissionLevel = k(this.setPermissionLevel,
                            this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, fa);
                        b.prototype.events = {
                            "click .js-create-org": "createOrg",
                            "keydown input[name='displayName']": "autoName",
                            "input input[name='displayName']": "autoName",
                            "keydown input[name='orgname']": "lockName",
                            "click .pref-options a": "selectOption"
                        };
                        b.prototype.initialize = function() {
                            _.bindAll(this, "render");
                            this.autoName = _.throttle(this.autoName, 10)
                        };
                        b.prototype.render = function() {
                            $(this.el).html(w.fill("org_create", {},
                            {
                                editable: !0
                            }));
                            return this
                        };
                        b.prototype.setPermissionLevel =
                        function(b) {
                            var c;
                            c = $(this.el).find(".pref-options");
                            c.find("a").removeClass("active");
                            c.find("a[value='" + b + "']").addClass("active");
                            $(this.el).find('input[name="permissionLevel"]').val(b)
                        };
                        b.prototype.selectOption = function(b) {
                            b = $(b.target).closest("a");
                            b.hasClass("disabled") || this.setPermissionLevel(b.attr("value"))
                        };
                        b.prototype.createOrg = function(b) {
                            var c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i;
                            e = this._get("displayName");
                            f = this._get("orgname");
                            i = this._get("website");
                            d = $(this.el).find("textarea[name=description]")[0].value;
                            g = this._get("permissionLevel");
                            h = this;
                            c = $(h.el).find(".js-create-org");
                            c.attr("disabled", "disabled");
                            this.model.organizationList.create({
                                displayName: e,
                                name: f,
                                website: i,
                                description: d,
                                prefs: {
                                    permissionLevel: g
                                }
                            },
                            {
                                success: function() {
                                    Controller.organizationProfileView(f)
                                },
                                error: function(b, d) {
                                    c.removeAttr("disabled");
                                    $(h.el).find(".error").text(d != null ? d: "error").show();
                                    z.scrollToTop()
                                }
                            });
                            z.preventDefault(b)
                        };
                        b.prototype._findInput = function(b) {
                            return $(this.el).find("input[name='" + b + "']")
                        };
                        b.prototype._get =
                        function(b) {
                            return this._findInput(b).val()
                        };
                        b.prototype._set = function(b, c) {
                            this._findInput(b).val(c)
                        };
                        b.prototype.lockName = function() {
                            if (this._get("orgname") !== this.autoName) return this.nameLocked = !0
                        };
                        b.prototype.autoName = function() {
                            var b;
                            if (!this.nameLocked) this.autoName = b = this._get("displayName").toLowerCase().replace(/[^a-z0-9]/ig, ""),
                            this._set("orgname", b)
                        };
                        return b
                    } (),
                    lc = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName =
                        "ul";
                        b.prototype.initialize = function(c) {
                            this.idMember = c.idMember;
                            b.__super__.initialize.apply(this, arguments);
                            this.model.boardInvitedList.bind("change", this.render).bind("refresh", this.render).bind("add", this.render).bind("remove", this.render)
                        };
                        b.prototype.render = function() {
                            $(this.el).html(N.to_html(w.member_invitation_list, {
                                model: "Organization"
                            }));
                            $(this.el).find(".js-list-invitations").html("");
                            this.model.organizationInvitedList.forEach(k(function(b) {
                                b = new kc({
                                    model: b
                                });
                                return $(this.el).find(".js-list-invitations").append(b.render().el)
                            },
                            this));
                            return this
                        };
                        return b
                    } (),
                    kc = function() {
                        function b() {
                            this.rejectInvitation = k(this.rejectInvitation, this);
                            this.acceptInvitation = k(this.acceptInvitation, this);
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.tagName = "li";
                        b.prototype.events = {
                            "click .js-accept-invitation": "acceptInvitation",
                            "click .js-reject-invitation": "rejectInvitation"
                        };
                        b.prototype.render = function() {
                            var b;
                            b = this.model.toJSON({
                                url: !0
                            });
                            $(this.el).html(N.to_html(w.member_invitation,
                            b));
                            return this
                        };
                        b.prototype.acceptInvitation = function() {
                            $(this.el).find(".js-accept-invitation").attr("disabled", "disabled");
                            return this.model.acceptInvite()
                        };
                        b.prototype.rejectInvitation = function() {
                            return this.model.rejectInvite()
                        };
                        return b
                    } ();
                    A("upgrade") && (ec = function() {
                        function b() {
                            this.render = k(this.render, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, Backbone.View);
                        b.prototype.render = function(b) {
                            var c,
                            d;
                            c = (d = b != null ? b.timeInSeconds: void 0) != null ? d: 60;
                            c = Math.floor(c / 60);
                            return $(this.el).html(w.fill("upgrade",
                            {
                                stopped: b != null ? b.stopped: void 0,
                                timeInMinutes: c,
                                plural: c > 1
                            }))
                        };
                        b.prototype.events = {
                            "click .js-upgrade": "upgrade",
                            "click .js-stop-upgrade": "stopUpgrade"
                        };
                        b.prototype.upgrade = function() {
                            Controller.upgradeNow();
                            return ! 1
                        };
                        b.prototype.stopUpgrade = function() {
                            Controller.stopUpgrade();
                            return ! 1
                        };
                        return b
                    } ());
                    if (A("window_size")) q.WindowSize = new(function() {
                        function b() {
                            this.calc = k(this.calc, this)
                        }
                        b.prototype.calc = function() {
                            var b;
                            b = $(q).width();
                            this.fExtraLarge = !0;
                            this.fExtraSmall = this.fSmall = this.fMedium =
                            this.fLarge = !1;
                            if (b >= 851 && b <= 1280) this.fLarge = !0;
                            if (b >= 701 && b <= 850) this.fMedium = !0;
                            if (b >= 501 && b <= 700) this.fSmall = !0;
                            if (b <= 500) this.fExtraSmall = !0;
                            if (this.fMedium || this.fSmall || this.fExtraSmall || this.fLarge) this.fExtraLarge = !1;
                            $("body").toggleClass("extra-large-window", this.fExtraLarge);
                            $("body").toggleClass("large-window", this.fLarge);
                            $("body").toggleClass("medium-window", this.fMedium);
                            $("body").toggleClass("small-window", this.fSmall);
                            return $("body").toggleClass("extra-small-window", this.fExtraSmall)
                        };
                        return b
                    } ());
                    A("window_resize_watcher", !0) && $(function() {
                        var b;
                        WindowSize.calc();
                        b = null;
                        return $(q).resize(function() {
                            clearTimeout(b);
                            b = setTimeout(WindowSize.calc, 200)
                        })
                    });
                    if (A("list_guide")) q.ListGuide = new(function() {
                        function b() {
                            this.scroll = k(this.scroll, this);
                            this.fix_list_guide = k(this.fix_list_guide, this);
                            this.calc_visible_lists = k(this.calc_visible_lists, this);
                            this.build_and_calc = k(this.build_and_calc, this);
                            this.calc_num_cards = k(this.calc_num_cards, this);
                            this.calc = k(this.calc, this);
                            this.build =
                            k(this.build, this);
                            this.reset = k(this.reset, this)
                        }
                        b.prototype.reset = function() {
                            $(".list-guide").height("").css({
                                position: "",
                                top: "",
                                "max-height": ""
                            });
                            return $(".list-guide-wrapper").height("").css({
                                "max-height": ""
                            })
                        };
                        b.prototype.build = function() {
                            var b,
                            c;
                            if ((b = $("#board")) && b.position()) if (c = $(q).height(), b = $(document).scrollTop(), WindowSize.fMedium || WindowSize.fSmall) return b < 100 ? ($(".list-guide").css({
                                "max-height": c - 90
                            }), $(".list-guide-wrapper").css({
                                "max-height": c - 98
                            })) : ($(".list-guide").css({
                                "max-height": c -
                                20
                            }), $(".list-guide-wrapper").css({
                                "max-height": c - 28
                            }))
                        };
                        b.prototype.calc = function() {
                            var b,
                            c,
                            d,
                            e,
                            f;
                            if ((b = $("#board")) && b.position()) if (f = $(".list"), c = $(".list-guide"), d = c.find(".list-guide-wrapper"), e = $(".list:first").width(), d.empty(), f.each(function() {
                                var b,
                                c;
                                c = $(this);
                                b = [];
                                b.list_name = c.find(".list-title .current").text();
                                b.list_card_count = c.find(".list-card").length;
                                return d.append(w.fill("list_guide_link", b))
                            }), $(".list-link").each(function(b) {
                                var d,
                                g,
                                h,
                                i;
                                h = $(this);
                                d = $(f[b]);
                                g = b * (e + 14);
                                b = 0;
                                d =
                                d.position();
                                WindowSize.fExtraSmall && (b = c.height() + 20);
                                i = d.top + 100 + b;
                                return h.click(function(b) {
                                    z.stopPropagation(b);
                                    return WindowSize.fLarge || WindowSize.fExtraLarge ? $(".list-area-wrapper").animate({
                                        scrollLeft: g
                                    },
                                    150) : WindowSize.fExtraSmall ? $(document).scrollTop(i - 42) : $(document).scrollTop(i - 32)
                                })
                            }), WindowSize.fLarge || WindowSize.fExtraLarge) return ListGuide.calc_visible_lists()
                        };
                        b.prototype.calc_num_cards = function() {
                            var b;
                            b = $(".list");
                            return $(".list-link").each(function(c) {
                                c = $(b[c]).find(".list-card").length;
                                return $(this).find(".list-link-count").html(c)
                            })
                        };
                        b.prototype.build_and_calc = function() {
                            this.build();
                            return this.calc()
                        };
                        b.prototype.calc_visible_lists = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            if ((b = $("#board")) && b.position()) return $(".first-visible-link").removeClass("first-visible-link"),
                            $(".last-visible-link").removeClass("last-visible-link"),
                            f = $(".list"),
                            d = $(".list-link"),
                            e = $(".list-guide"),
                            e.find(".list-guide-wrapper"),
                            d.removeClass("visible"),
                            c = b.position().left,
                            g = b.width() + c,
                            f.each(function(b) {
                                var e,
                                f,
                                h;
                                e = $(this);
                                if (WindowSize.fLarge || WindowSize.fExtraLarge) if (h = e.position(), f = h.left, e = h.left + e.width(), f >= c && e <= g) return $(d[b]).addClass("visible")
                            }),
                            $(".list-link.visible").first().addClass("first-visible-link"),
                            $(".list-link.visible").last().addClass("last-visible-link")
                        };
                        b.prototype.fix_list_guide = function() {
                            var b;
                            $(q).height();
                            b = $(document).scrollTop();
                            b < 100 ? b = 38: b -= 30;
                            return $(".list-guide").css({
                                position: "absolute"
                            }).animate({
                                top: b
                            },
                            150)
                        };
                        b.prototype.scroll = function() {
                            return ListGuide.fix_list_guide()
                        };
                        return b
                    } ());
                    A("layout") && (U = new(function() {
                        function b() {
                            this.isEditing = k(this.isEditing, this);
                            this.calc_surface = k(this.calc_surface, this);
                            this.clearNewCard = k(this.clearNewCard, this);
                            this.blurNewCard = k(this.blurNewCard, this);
                            this.cancelEdits = k(this.cancelEdits, this);
                            this.remove_layout_helpers = k(this.remove_layout_helpers, this)
                        }
                        b.prototype.remove_layout_helpers = function() {
                            I.calcState = "";
                            ListGuide.reset();
                            $("body").removeClass("layout-horiz-scroll");
                            $("#board").height("");
                            $(".list-area-wrapper").height("");
                            $(".list-card").removeClass("last-card");
                            $(".last-list").removeClass("last-list");
                            $(".list-area").width("").height("");
                            $(".list").width("");
                            $(".list-cards").css({
                                "max-height": ""
                            });
                            return $(".board-actions-list").css({
                                "max-height": ""
                            })
                        };
                        b.prototype.cancelEdits = function(b) {
                            $(".edit-controls").remove();
                            $(".editing").removeClass("editing");
                            $(".comment").removeClass("focus");
                            $(".new-task").removeClass("focus");
                            $("input").not(b || "none").blur();
                            return $("textarea").not(b || "none").blur()
                        };
                        b.prototype.blurNewCard =
                        function() {
                            return $(".add-list-card").each(function() {
                                var b;
                                b = $(this);
                                return b.hasClass("focus") && (b.find(".new-card").val() === "" || b.find(".new-card").hasClass("placeholder")) ? (b.removeClass("greyed"), b.removeClass("focus"), b.closest(".list").find(".list-cards").css({
                                    maxHeight: "+=70"
                                })) : b.addClass("greyed")
                            })
                        };
                        b.prototype.clearNewCard = function(b) {
                            if (b) return $(b.target).parent().find(".new-card").val("").blur(),
                            this.blurNewCard()
                        };
                        b.prototype.calc_surface = function() {
                            var b,
                            c;
                            $("#surface").height("");
                            c = $(q).height();
                            b = $(document).height();
                            $(document).width();
                            b > c && (b += 20);
                            $("#surface").height(b);
                            return $("#footer").show()
                        };
                        b.prototype.isEditing = function() {
                            return $(".editing").length + $(".comment.focus").length + $(".new-task.focus").length > 0
                        };
                        return b
                    } ()));
                    if (A("drag_sort")) q.DragSort = new(function() {
                        function b() {
                            this.scrollWhileSorting = k(this.scrollWhileSorting, this);
                            this.scrollListFromUI = k(this.scrollListFromUI, this);
                            this.refresh = k(this.refresh, this);
                            this.refreshDraggable = k(this.refreshDraggable,
                            this);
                            this.refreshCardSortable = k(this.refreshCardSortable, this);
                            this.refreshListSortable = k(this.refreshListSortable, this);
                            $(document).mousemove(k(function(b) {
                                this.mouseX = b.pageX;
                                return this.mouseY = b.pageY
                            },
                            this))
                        }
                        b.prototype.refreshListSortable = function() {
                            return $(".js-list-sortable").sortable({
                                containment: "#board",
                                handle: ".list-header",
                                tolerance: "pointer",
                                revert: "100",
                                placeholder: "list placeholder",
                                scroll: !1,
                                start: function(b, c) {
                                    var d,
                                    e;
                                    e = $(c.helper).width();
                                    d = $(c.helper).height();
                                    $(c.placeholder).width(e).height(d);
                                    DragSort.sorting = !0;
                                    return DragSort.scrollWhileSorting()
                                },
                                stop: function(b) {
                                    z.stopPropagation(b);
                                    $(".first-list").removeClass("first-list");
                                    $(".last-list").removeClass("last-list");
                                    b = $(".list");
                                    b.first().addClass("first-list");
                                    b.last().addClass("last-list");
                                    setTimeout(function() {
                                        DragSort.sorting = !1;
                                        return I.calc()
                                    },
                                    50);
                                    return I.calc()
                                }
                            })
                        };
                        b.prototype.refreshCardSortable = function() {
                            return $(".js-sortable").sortable({
                                connectWith: ".js-sortable",
                                revert: "100",
                                containment: "#surface",
                                placeholder: "list-card placeholder",
                                scroll: !1,
                                start: function(b, c) {
                                    var d;
                                    d = $(c.helper).height() + 2;
                                    $(c.placeholder).height(d);
                                    DragSort.scrollListFromUI(c);
                                    DragSort.sorting = !0;
                                    return DragSort.scrollWhileSorting()
                                },
                                stop: function(b) {
                                    z.stopPropagation(b);
                                    setTimeout(function() {
                                        return DragSort.sorting = !1
                                    },
                                    50);
                                    return DragSort.scrollList = null
                                },
                                over: function(b, c) {
                                    return DragSort.scrollListFromUI(c)
                                },
                                custom: {
                                    refreshContainers: function() {
                                        var b,
                                        c,
                                        d,
                                        e,
                                        f;
                                        f = [];
                                        for (c = e = this.containers.length - 1; e <= 0 ? c <= 0: c >= 0; e <= 0 ? c++:c--) b = this.containers[c].element,
                                        d = $(b).closest(".list"),
                                        d.length && (b = d),
                                        d = b.offset(),
                                        this.containers[c].containerCache.left = d.left,
                                        this.containers[c].containerCache.top = d.top,
                                        this.containers[c].containerCache.width = b.outerWidth(),
                                        f.push(this.containers[c].containerCache.height = b.outerHeight());
                                        return f
                                    }
                                }
                            })
                        };
                        b.prototype.refreshDraggable = function() {
                            return $(".assignable-members .member").draggable({
                                revert: "invalid",
                                revertDuration: 150,
                                zIndex: 100,
                                helper: "clone",
                                stop: function(b) {
                                    return z.stopPropagation(b)
                                }
                            })
                        };
                        b.prototype.refresh = function() {
                            this.refreshListSortable();
                            this.refreshCardSortable();
                            return this.refreshDraggable()
                        };
                        b.prototype.scrollListFromUI = function(b) {
                            var c;
                            return DragSort.scrollList = b != null ? (c = b.placeholder) != null ? c.parents(".list-cards")[0] : void 0: void 0
                        };
                        b.prototype.scrollWhileSorting = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g;
                            if (this.sorting) {
                                if (WindowSize.fSmall || WindowSize.fExtraSmall) d = $(q).scrollTop(),
                                b = d + $(q).height() - 30,
                                this.mouseY < d ? q.scrollBy(0, -10) : this.mouseY > b && q.scrollBy(0, 10);
                                else if (b = $("#board"), c = b.offset(), d = c.left + 30, e = c.left + b.width() - 30,
                                f = c.top + 30, c = c.top + b.height() - 30, this.mouseX < d) b[0].scrollLeft -= 10;
                                else if (this.mouseX > e) b[0].scrollLeft += 10;
                                else if (((g = this.scrollList) != null ? g.scrollTop: void 0) != null) this.mouseY < f ? this.scrollList.scrollTop -= 10: this.mouseY > c && (this.scrollList.scrollTop += 10);
                                return setTimeout(this.scrollWhileSorting, 10)
                            }
                        };
                        return b
                    } ());
                    A("popover") && (L = new(function() {
                        function b() {
                            this.init = k(this.init, this)
                        }
                        var c,
                        d,
                        e;
                        d = c = e = null;
                        b.prototype.init = function() {
                            return e = $(".pop-over")
                        };
                        b.prototype.calc_top = function() {
                            var b,
                            c,
                            d;
                            d = $(q).height();
                            b = e.height() + 16;
                            c = e.position().top;
                            c + b > d && (c = d - b - 8);
                            return e.css({
                                top: c
                            })
                        };
                        b.prototype.fill = function(b) {
                            e.html("");
                            if (b.view) b = b.view,
                            e.prepend(b.render().el),
                            b.delegateEvents();
                            return this.calc_top()
                        };
                        b.prototype.show = function(b) {
                            var f,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m,
                            n,
                            v;
                            j = $(q).width();
                            this.hide();
                            this.clear();
                            U.cancelEdits(b.elActive);
                            c = b.elem;
                            if (b.view) m = b.view,
                            e.prepend(m.render().el),
                            m.delegateEvents();
                            if (c.el) c = c.el;
                            h = $(c).width() * 1 + $(c).css("paddingLeft").replace("px", "") * 1 + $(c).css("paddingRight").replace("px",
                            "") * 1 + $(c).css("border-left-width").replace("px", "") * 1 + $(c).css("border-right-width").replace("px", "") * 1;
                            n = e.width() + 16;
                            f = $(c).offset().left;
                            g = f + n + 16;
                            v = $(q).height();
                            i = $("#board").length === 1;
                            e.css({
                                left: -1E4,
                                top: -1E4,
                                maxHeight: i && WindowSize.fLarge || WindowSize.fExtraLarge ? v - 30: ""
                            }).show();
                            l = e.height() + 16;
                            m = $(c).offset().top + (_.isNumber(b.top) ? b.top: 28);
                            k = m + l;
                            if (i && WindowSize.fLarge || WindowSize.fExtraLarge) v = $(q).height(),
                            k > v && (m = v - l - 8);
                            g > j && (f = f - n + h, f < 0 && (f = j - n - 5));
                            e.css({
                                left: f,
                                top: m
                            });
                            typeof b.shown ===
                            "function" && b.shown(e);
                            d = b.hidden
                        };
                        b.prototype.toggle = function(b) {
                            return c === b.elem ? this.hide() : this.show(b)
                        };
                        b.prototype.hide = function() {
                            c = null;
                            e.hide();
                            typeof d === "function" && d(e);
                            return d = null
                        };
                        b.prototype.clear = function() {
                            return e.css({
                                left: "",
                                top: ""
                            }).html("")
                        };
                        b.prototype.isVisible = function() {
                            return e.is(":visible")
                        };
                        return b
                    } ()), $(L.init));
                    A("dialog") && (W = new(function() {
                        function b() {
                            this.init = k(this.init, this)
                        }
                        var c,
                        d,
                        e,
                        f;
                        f = e = d = c = null;
                        b.prototype.init = function() {
                            c = $(".window");
                            d = c.find(".window-wrapper");
                            d.click(function(b) {
                                $(b.target).is("a[href^='/']") || (z.stopPropagation(b), U.cancelEdits(), L.hide())
                            })
                        };
                        b.prototype.calc_pos = function() {
                            var b;
                            $("body").hasClass("window-up") && (d.width("1"), WindowSize.fSmall || WindowSize.fExtraSmall ? (b = $(document).width(), d.width(b - 22)) : d.width(""), b = ($(q).width() - c.width()) / 2, c.css({
                                left: b
                            }))
                        };
                        b.prototype.getViewName = function() {
                            return f
                        };
                        b.prototype.show = function(b) {
                            var g,
                            h;
                            g = $.extend({
                                location: "center"
                            },
                            b);
                            L.hide();
                            U.blurNewCard();
                            this.clear();
                            e = g.hide;
                            $(".active-card").removeClass("active-card");
                            $("body").addClass("window-up");
                            f = (h = b.view) != null ? h.className: void 0;
                            if (b.view) this.view = b.view,
                            d.html(this.view.render().el),
                            this.view.delegateEvents();
                            else if (b.html) this.view = null,
                            d.html(b.html);
                            c.css({
                                left: -1E4,
                                top: -1E4
                            });
                            if (WindowSize.fSmall || WindowSize.fExtraSmall) g = $(document).width(),
                            d.width(g - 16);
                            g = ($(q).width() - c.width()) / 2;
                            h = $(q).scrollTop();
                            c.css({
                                left: g,
                                top: h <= 100 || WindowSize.fLarge || WindowSize.fExtraLarge ? 50: h + 10
                            }).show(); (WindowSize.fLarge || WindowSize.fExtraLarge) && $(".window-overlay").scrollTop("0");
                            U.calc_surface();
                            c.find(".js-submit-okay").click(function() {
                                var d,
                                e,
                                f,
                                g,
                                h;
                                e = c.find("form:first");
                                h = e.find(".non-empty");
                                f = 0;
                                for (g = h.length; f < g; f++) if (d = h[f], /^\s*$/.test($(d).val())) return;
                                W.hide();
                                typeof b.okay === "function" && b.okay({
                                    form: e
                                })
                            });
                            c.find(".js-submit-cancel").click(function() {
                                W.hide();
                                typeof b.cancel === "function" && b.cancel()
                            });
                            c.find("input[type=submit]").click(function(b) {
                                z.preventDefault(b)
                            })
                        };
                        b.prototype.hide = function(b) {
                            typeof e === "function" && e(b);
                            this.view = e = null;
                            c.hide();
                            $("body").removeClass("window-up");
                            U.calc_surface()
                        };
                        b.prototype.clear = function() {
                            d.width("");
                            d.empty()
                        };
                        b.prototype.isVisible = function() {
                            return c.is(":visible")
                        };
                        return b
                    } ()), $(W.init));
                    A("board_layout") && (I = new(function() {
                        function b() {
                            this.refreshLayout = k(this.refreshLayout, this);
                            this.refreshLayoutImmediately = k(this.refreshLayoutImmediately, this);
                            this.clearAllCardFilters = k(this.clearAllCardFilters, this);
                            this.refreshMemberFilters = k(this.refreshMemberFilters, this);
                            this.calc = k(this.calc, this);
                            this.restoreScrolls = k(this.restoreScrolls,
                            this);
                            this.saveScrolls = k(this.saveScrolls, this);
                            this.getBoard = k(this.getBoard, this);
                            this.calc_board = k(this.calc_board, this);
                            this.calc_widgets_height = k(this.calc_widgets_height, this);
                            this.fMyCardsFilter = this.fHorizScroll = !1;
                            WindowSize.calc()
                        }
                        b.prototype.calc_widgets_height = function() {
                            var b,
                            c,
                            d;
                            b = $(q).height();
                            $("#board");
                            c = $(".board-widget");
                            d = 0;
                            c.each(function() {
                                var b;
                                if (!$(this).hasClass("board-widget-actions")) return b = $(this).height(),
                                d = d + b + 16
                            });
                            return $(".board-actions-list").css({
                                "max-height": b -
                                114 - d
                            })
                        };
                        b.prototype.calc_board = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            h;
                            U.remove_layout_helpers();
                            h = $(q).height();
                            b = $("#board");
                            c = b.width();
                            d = $(".list");
                            d.first().addClass("first-list");
                            d.last().addClass("last-list");
                            f = d.length;
                            e = Math.floor(f * 179);
                            $(".list-area-wrapper").unbind("scroll");
                            WindowSize.calc();
                            if (WindowSize.fLarge || WindowSize.fExtraLarge) {
                                try {
                                    if (this.fHorizScroll) g = this.fHorizScroll
                                } catch(i) {}
                                this.fHorizScroll = e > c;
                                g === !0 && this.fHorizScroll === !1 && ($(".list-area-wrapper").css({
                                    overflow: "scroll"
                                }),
                                $(".list-area-wrapper").scrollLeft(0), $(".list-area-wrapper").css({
                                    overflow: ""
                                }));
                                e = Math.floor(c / f - 14);
                                e > 320 && (e = 320);
                                this.fHorizScroll && (e = 165, $("body").addClass("layout-horiz-scroll"), $(".list-guide").height(h - 92), $(".list-guide-wrapper").height(h - 96), c = _.debounce(ListGuide.calc_visible_lists, 150), $(".list-area-wrapper").scroll(c));
                                $(".list").width(e);
                                $(".list-area").width((e + 14) * f);
                                this.calc_widgets_height();
                                d.each(function() {
                                    var c,
                                    d,
                                    e,
                                    f;
                                    d = $(this);
                                    f = d.find(".list-header").height();
                                    c = 148;
                                    I.fHorizScroll &&
                                    (c += 22);
                                    $(b).hasClass("permission-public") && (c -= 36);
                                    e = d.find(".list-cards");
                                    c = h - f - c;
                                    d.find(".add-list-card").hasClass("focus") && (c -= 64);
                                    return e.css({
                                        "max-height": c
                                    })
                                });
                                b.css({
                                    height: h - 102
                                });
                                $(".list-area-wrapper").height(b.height())
                            } else WindowSize.fMedium ? (d = _.debounce(ListGuide.fix_list_guide, 150), $(document).scroll(d)) : WindowSize.fSmall && (d = _.debounce(ListGuide.fix_list_guide, 150), $(document).scroll(d));
                            return ListGuide.build_and_calc()
                        };
                        b.prototype.getBoard = function() {
                            if (q.boardView && boardView.model) return boardView.model
                        };
                        b.prototype.saveScrolls = function() {
                            var b;
                            b = this.getBoard();
                            return ! b ? void 0: b.listList.each(function(b) {
                                return b.getView(eb).saveScroll()
                            })
                        };
                        b.prototype.restoreScrolls = function() {
                            var b;
                            b = this.getBoard();
                            return ! b ? void 0: b.listList.each(function(b) {
                                return b.getView(eb).restoreScroll()
                            })
                        };
                        b.prototype.calc = function() {
                            var b,
                            c,
                            d;
                            d = $(q).width();
                            c = $(q).height();
                            b = $("#board").find(".list-area .list").length;
                            b = [d, c, b].join(",");
                            return b !== I.calcState ? (I.calcState = b, R("layout", "calc"), $("body").hasClass("window-up") &&
                            $(".window-wrapper").width("1"), ListGuide.reset(), $(document).unbind("scroll"), WindowSize.calc(), I.calc_board(), W.calc_pos(), U.calc_surface()) : R("layout", "calc (ignored)")
                        };
                        b.prototype.refreshMemberFilters = function() {
                            var b;
                            b = $("#board");
                            if (b.length > 0 && b.hasClass("filtering")) return $(".list-card").removeClass("assigned-to-member"),
                            b.attr("class").split(/\s+/).map(function(b) {
                                if (b.match(/^filtering-assigned-to-*/)) return b = b.replace(/filtering-/, "."),
                                $(".list-cards").find(b).addClass("assigned-to-member")
                            })
                        };
                        b.prototype.clearAllCardFilters = function() {
                            var b;
                            this.fMyCardsFilter = !1;
                            b = $("#board");
                            b.removeClass("filtering filtering-green-label filtering-yellow-label filtering-orange-label filtering-red-label filtering-purple-label filtering-blue-label filtering-assigned-members");
                            b.attr("class").split(/\s+/).map(function(c) {
                                if (c.match(/^filtering-assigned-to-*/)) return b.removeClass(c)
                            });
                            $(".list-card").removeClass("assigned-to-member");
                            $(".js-filter-cards").removeClass("is-on");
                            return $(".card-filter .js-filter-toggle.active").removeClass("active")
                        };
                        b.prototype.refreshLayoutImmediately = function() {
                            R("render", "refreshing layout");
                            if (I.refreshTimeout) clearTimeout(I.refreshTimeout),
                            I.refreshTimeout = null;
                            I.calc();
                            return DragSort.refresh()
                        };
                        b.prototype.refreshLayout = function() {
                            if (!I.refreshTimeout) return BaordLayout.refreshTimeout = setTimeout(I.refreshLayoutImmediately, 100)
                        };
                        return b
                    } ()));
                    A("controller") && (sc = function() {
                        function c() {
                            this.syncError = k(this.syncError, this);
                            this.stopUpgrade = k(this.stopUpgrade, this);
                            this.upgradeNow = k(this.upgradeNow, this);
                            this.upgradeClient = k(this.upgradeClient, this);
                            this.defaultView = k(this.defaultView, this);
                            c.__super__.constructor.apply(this, arguments)
                        }
                        y(c, Backbone.Controller);
                        c.prototype.initialize = function() {
                            return $(rpc).bind("reconnected", k(function() {
                                return this.refreshSubscribedModels()
                            },
                            this))
                        };
                        c.prototype.routes = {
                            "": "defaultView",
                            browse: "browseView",
                            notes: "releaseNotesView",
                            landing: "landingView",
                            search: "searchView",
                            "board/:id": "boardView",
                            "board/:slug/:id": "boardSlugView",
                            "board/:slug/:id/:username": "memberBoardProfileView",
                            help: "manualView",
                            about: "manualView",
                            glossary: "manualView",
                            shortcuts: "manualView",
                            questions: "manualView",
                            "org/create": "organizationCreateView",
                            "org/:id": "organizationById",
                            "card/board/:idBoard/:idCard": "cardBoardContextView",
                            "card/board/:slug/:idBoard/:idCard": "cardSlugBoardContextView",
                            "card/:username/:idBoard/:idCard": "cardMemberContextView",
                            "card/:username/:slug/:idBoard/:idCard": "cardSlugMemberContextView",
                            ":orgname/members": "organizationMembersView",
                            ":username/boards": "memberBoardsView",
                            ":username/notifications": "memberNotificationsView",
                            ":name/account": "userOrOrgAccountView",
                            ":name/?": "userOrOrgProfileView"
                        };
                        c.prototype.viewType = "none";
                        c.prototype.idBoardCurrent = null;
                        c.prototype.setLocation = function(b) {
                            var c,
                            d;
                            d = b.title;
                            c = b.location;
                            b = b.unreadCount;
                            if (d) this.title = d;
                            if (b != null) this.unreadCount = b;
                            if (this.title) d = this.unreadCount ? "(" + this.unreadCount + ") ": "",
                            document.title = "" + d + this.title + " | Trello";
                            if (c) / ^# / .test(c) && (c = c.substr(1)),
                            this.saveLocation(c),
                            this.location = c
                        };
                        c.prototype.load = function(b) {
                            return this.setLocation({
                                location: b
                            })
                        };
                        c.prototype.getPermanentOrganizationUrl = function(b) {
                            return "/org/" + b
                        };
                        c.prototype.getOrganizationUrl = function(b) {
                            return "/" + b
                        };
                        c.prototype.getOrganizationAccountUrl = function(b) {
                            return "/" + b + "/account"
                        };
                        c.prototype.getOrganizationMembersUrl = function(b) {
                            return "/" + b + "/members"
                        };
                        c.prototype.getBoardUrl = function(b) {
                            var c,
                            d;
                            return (c = (d = Models.Board.get(b)) != null ? d.get("name") : void 0) ? "/board/" + z.makeSlug(c) + "/" + b: "/board/" + b
                        };
                        c.prototype.getMemberBoardProfileUrl = function(b, c) {
                            return "" + this.getBoardUrl(c) +
                            "/" + b
                        };
                        c.prototype.saveBoardLocation = function(b) {
                            this.setLocation({
                                title: Models.Board.get(b).get("name"),
                                location: this.getBoardUrl(b)
                            })
                        };
                        c.prototype.getMemberProfileUrl = function(b) {
                            b == null && (b = h.myUsername());
                            return "/" + b
                        };
                        c.prototype.getMemberNotificationsUrl = function(b) {
                            b == null && (b = h.myUsername());
                            return "/" + b + "/notifications"
                        };
                        c.prototype.getMemberBoardsUrl = function(b) {
                            b == null && (b = h.myUsername());
                            return b === h.myUsername() ? "/": "/" + b + "/boards"
                        };
                        c.prototype.getMemberAccountUrl = function(b) {
                            b == null &&
                            (b = h.myUsername());
                            return "/" + b + "/account"
                        };
                        c.prototype.getMemberProfileCardUrl = function(b, c, d) {
                            return "card/board/" + c + "/" + d
                        };
                        c.prototype.getPermanentCardUrl = function(b, c, d) {
                            return d ? "/card/" + d.get("username") + "/" + b + "/" + c: "/card/board/" + b + "/" + c
                        };
                        c.prototype.getCardUrl = function(b, c) {
                            var d,
                            e;
                            d = b.getBoard();
                            e = b.get("name");
                            return this.getCardUrlWithoutModels(d.id, b.id, e, c)
                        };
                        c.prototype.getCardUrlWithoutModels = function(b, c, d, e) {
                            return e ? "/card/" + e.get("username") + "/" + z.makeSlug(d) + "/" + b + "/" + c: "/card/board/" +
                            z.makeSlug(d) + "/" + b + "/" + c
                        };
                        c.prototype.saveCardLocation = function(b, c) {
                            var d;
                            b.getBoard();
                            d = b.getBoard().get("name");
                            return this.setLocation({
                                title: "" + b.get("name") + " on " + d,
                                location: this.getCardUrl(b, c)
                            })
                        };
                        c.prototype.saveMemberBoardProfileLocation = function(b, c) {
                            return this.setLocation({
                                title: "" + b.get("fullName"),
                                location: this.getMemberBoardProfileUrl(b.get("username"), c)
                            })
                        };
                        c.prototype.saveBrowseLocation = function() {
                            this.setLocation({
                                title: "Public Boards",
                                location: "browse"
                            })
                        };
                        c.prototype.saveSearchLocation =
                        function() {
                            this.setLocation({
                                title: "Search",
                                location: "search"
                            })
                        };
                        c.prototype.saveOrganizationCreateLocation = function() {
                            this.setLocation({
                                title: "Create Organization",
                                location: "org/create"
                            })
                        };
                        c.prototype.onMemberView = function() {
                            return this.viewType === "member"
                        };
                        c.prototype.onAnyOrganizationView = function() {
                            return this.viewType === "organization"
                        };
                        c.prototype.onOrganizationView = function(b) {
                            return this.onAnyOrganizationView() && this.idOrganizationCurrent === b
                        };
                        c.prototype.onAnyBoardView = function() {
                            return this.viewType ===
                            "board"
                        };
                        c.prototype.onBoardView = function(b) {
                            return this.onAnyBoardView() && this.idBoardCurrent === b
                        };
                        c.prototype.onBrowseView = function() {
                            return this.viewType === "browse"
                        };
                        c.prototype.defaultView = function() {
                            return h.isLoggedIn() ? this.memberBoardsView() : this.landingView()
                        };
                        c.prototype.startNewView = function(b, c) {
                            this.viewType = b;
                            if (this.onAnyBoardView()) {
                                if (!this.onBoardView(c)) rpc.subscribeTo("Board", c),
                                this.idBoardCurrent = c
                            } else rpc.subscribeTo("Board", null),
                            this.idBoardCurrent = null;
                            if (this.onAnyOrganizationView()) {
                                if (!this.onOrganizationView(c)) rpc.subscribeTo("Organization",
                                c),
                                this.idOrganizationCurrent = c
                            } else rpc.subscribeTo("Organization", null),
                            this.idOrganizationCurrent = null;
                            U.calcState = "";
                            this.showSpinner()
                        };
                        c.prototype.refreshSubscribedModels = function() {
                            rpc.resync(this.idBoardCurrent, this.idOrganizationCurrent, h.myId());
                            rpc.invoke("subscribeToBoard", [this.idBoardCurrent]);
                            return rpc.invoke("subscribeToOrganization", [this.idOrganizationCurrent])
                        };
                        c.prototype.clearPreviousView = function() {
                            L.hide();
                            W.hide();
                            $("#content").html("");
                            $("#surface").height("");
                            $("body").scrollTop("0").removeClass("fixed-content").removeClass("adaptive-content").removeClass("full-content")
                        };
                        c.prototype.boardSlugView = function(b, c, d) {
                            this.boardView(c, d)
                        };
                        c.prototype.boardView = function(b, c) {
                            var d;
                            d = {};
                            _.isString(b) ? d.idBoard = b: d.board = b;
                            this.displayBoard(d, c)
                        };
                        c.prototype.displayBoard = function(b, c) {
                            var d,
                            e,
                            f,
                            g,
                            i,
                            j,
                            l;
                            R("controller", ["boardView", b.idBoard]);
                            i = k(function() {
                                return this.displayErrorPage({
                                    errorType: "boardNotFound"
                                })
                            },
                            this);
                            if ((g = b.idBoard || ((e = b.board) != null ? e.id: void 0)) && !b.board) if (e = Models.Board.get(g), !(e != null && e.isPartiallyLoaded())) b.board = e;
                            if (!g) return i();
                            d = b.board &&
                            this.onBoardView(g);
                            f = this.attachSpinnerCallback(c);
                            this.startNewView("board", g);
                            j = k(function(c) {
                                var e,
                                g,
                                h,
                                i;
                                q.boardView = e = c.getView(ha);
                                d || (this.clearPreviousView(), this.showHeader(), $("body").addClass("full-content"), $("#content").html(e.render().el), I.refreshLayoutImmediately());
                                if (b.idCard) h = k(function(b) {
                                    b.getView(Ga).showDetail(k(function() {
                                        this.saveBoardLocation(c.id)
                                    },
                                    this));
                                    return this.saveCardLocation(b)
                                },
                                this),
                                (g = c.getCard(b.idCard)) ? h(g) : Models.loadCardData(b.idCard, k(function() {
                                    g = c.getCard(b.idCard);
                                    return h(g)
                                },
                                this));
                                else if (b.usernameBoardProfile)(i = Models.Member.find("username", b.usernameBoardProfile)[0]) != null && i.viewBoardProfile(c.id);
                                else c.onId(k(function() {
                                    this.saveBoardLocation(c.id)
                                },
                                this));
                                typeof f === "function" && f(q.boardView)
                            },
                            this);
                            b.board ? ((l = h.me()) != null && l.clearCache(), j(b.board)) : b.idBoard ? Models.loadCurrentBoardData(b.idBoard, k(function() {
                                var c;
                                this.clearPreviousView();
                                c = Models.Board.get(b.idBoard);
                                if (!c) return i();
                                j(c)
                            },
                            this),
                            function() {
                                return i()
                            }) : i()
                        };
                        c.prototype.memberBoardProfileView =
                        function(b, c, d, e) {
                            this.displayBoard({
                                idBoard: c,
                                usernameBoardProfile: d
                            },
                            e)
                        };
                        c.prototype.landingView = function() {
                            return this.staticView("Organize anything, together.", h.isLoggedIn() ? "/landing": "/", "landing", {
                                bodyClass: "adaptive-content"
                            },
                            {
                                typekit: !0
                            })
                        };
                        c.prototype.searchView = function(b) {
                            var c,
                            d;
                            R("controller", ["searchView"]);
                            d = this;
                            c = this.attachSpinnerCallback(b);
                            d.startNewView("search");
                            Models.loadHeaderData(function() {
                                var b,
                                e;
                                d.clearPreviousView();
                                b = /[&?]q=([^&]+)/.exec(location.search);
                                e = "";
                                b && (e =
                                unescape(b[1]));
                                b = new rc({},
                                e);
                                d.showHeader();
                                $("body").addClass("fixed-content");
                                $("#content").html(b.render().el);
                                d.saveSearchLocation();
                                typeof c === "function" && c(b);
                                return U.calc_surface()
                            })
                        };
                        c.prototype.organizationById = function(b, c) {
                            Models.loadOrgNameById(b, k(function(d) {
                                var e;
                                return (e = _.detect(d.organizations,
                                function(b) {
                                    return b.id === d.idOrganization
                                })) ? this.organizationProfileView(e.name, b, c) : this.displayErrorPage()
                            },
                            this))
                        };
                        c.prototype.organizationCreateView = function(b) {
                            var c;
                            R("controller",
                            ["organizationCreateView"]);
                            c = this;
                            b = this.attachSpinnerCallback(b);
                            c.startNewView("createOrganization");
                            Models.loadMemberBoardsData("me",
                            function() {
                                var d;
                                c.clearPreviousView();
                                $("body").addClass("fixed-content");
                                d = Models.Organization.all();
                                d = new hc({
                                    model: {
                                        organizationList: new OrganizationList(d)
                                    }
                                });
                                $("#content").html(d.render().el);
                                c.showHeader();
                                c.saveOrganizationCreateLocation();
                                typeof b === "function" && b(d)
                            },
                            function() {
                                c.displayErrorPage()
                            });
                            U.calc_surface()
                        };
                        c.prototype.organizationProfileView =
                        function(b, c, d) {
                            this.displayOrganizationPage({
                                orgname: b,
                                loadFn: "loadUserOrOrgData",
                                viewClass: qc,
                                getLocation: this.getOrganizationUrl,
                                idOrganization: c,
                                callback: d
                            })
                        };
                        c.prototype.organizationAccountView = function(b, c, d) {
                            this.displayOrganizationPage({
                                orgname: b,
                                loadFn: "loadUserOrOrgData",
                                viewClass: gc,
                                getLocation: this.getOrganizationAccountUrl,
                                idOrganization: c,
                                callback: d,
                                adminOnly: !0
                            })
                        };
                        c.prototype.organizationMembersView = function(b, c) {
                            Models.loadUserOrOrgData(b, k(function(d) {
                                this.displayOrganizationPage({
                                    orgname: b,
                                    loadFn: "loadUserOrOrgData",
                                    viewClass: pc,
                                    getLocation: this.getOrganizationMembersUrl,
                                    idOrganization: d.idOrganization,
                                    callback: c,
                                    adminOnly: !0
                                })
                            },
                            this))
                        };
                        c.prototype.userOrOrgProfileView = function(b, c) {
                            b == null && (b = "me");
                            this.userOrOrgView(b, this.memberProfileView, this.organizationProfileView, c)
                        };
                        c.prototype.userOrOrgAccountView = function(b, c) {
                            b == null && (b = "me");
                            this.userOrOrgView(b, this.memberAccountView, this.organizationAccountView, c)
                        };
                        c.prototype.userOrOrgView = function(b, c, d, e) {
                            return Models.loadUserOrOrgData(b,
                            k(function(f) {
                                f.idMember != null ? c.call(this, b, e) : f.idOrganization != null ? d.call(this, b, f.idOrganization, e) : this.displayErrorPage({
                                    errorType: "notFound",
                                    callback: e
                                })
                            },
                            this), k(function() {
                                this.displayErrorPage({
                                    errorType: "notFound",
                                    callback: e
                                })
                            },
                            this))
                        };
                        c.prototype.displayOrganizationPage = function(b) {
                            var c,
                            d,
                            e;
                            e = b.orgname;
                            R("controller", ["organization"]);
                            d = this;
                            c = this.attachSpinnerCallback(b.callback);
                            d.startNewView("organization", b.idOrganization);
                            Models[b.loadFn](e,
                            function(f) {
                                var g;
                                d.clearPreviousView();
                                f = Models.Organization.get(f.idOrganization); ! f.owned() && b.adminOnly ? d.organizationProfileView(e, b.idOrganization) : (g = f.getView(b.viewClass), d.showHeader(), $("body").addClass("fixed-content"), $("#content").html(g.render().el), g = "" + f.get("displayName") + " (" + f.get("name") + ")", d.setLocation({
                                    title: g,
                                    location: b.getLocation(f.get("name"))
                                }), typeof c === "function" && c(f))
                            },
                            function() {
                                d.displayErrorPage({
                                    errorType: "organizationNotFound"
                                })
                            });
                            U.calc_surface()
                        };
                        c.prototype.memberProfileView = function(b, c) {
                            b == null &&
                            (b = "me");
                            Y("memberProfilePage");
                            this.displayMemberPage({
                                username: b,
                                loadFn: "loadUserOrOrgData",
                                viewClass: qa,
                                getLocation: k(function(b) {
                                    return this.getMemberProfileUrl(b)
                                },
                                this),
                                callback: c
                            })
                        };
                        c.prototype.memberNotificationsView = function(b, c) {
                            b == null && (b = "me");
                            Y("memberNotificationsPage");
                            this.displayMemberPage({
                                username: b,
                                loadFn: "loadNotificationData",
                                viewClass: Ea,
                                getLocation: k(function(b) {
                                    return this.getMemberNotificationsUrl(b)
                                },
                                this),
                                callback: c
                            })
                        };
                        c.prototype.memberBoardsView = function(b, c, d) {
                            b == null &&
                            (b = "me");
                            Y("memberBoardsPage");
                            this.displayMemberPage(_.extend({
                                username: b,
                                loadFn: "loadMemberBoardsData",
                                viewClass: Bb,
                                getLocation: k(function(b) {
                                    return this.getMemberBoardsUrl(b)
                                },
                                this),
                                callback: d
                            },
                            c))
                        };
                        c.prototype.memberAccountView = function(b, c) {
                            Y("memberAccountPage");
                            this.displayMemberPage({
                                username: "me",
                                loadFn: "loadUserOrOrgData",
                                viewClass: zb,
                                getLocation: k(function(b) {
                                    return this.getMemberAccountUrl(b)
                                },
                                this),
                                callback: c
                            })
                        };
                        c.prototype.displayMemberPage = function(c) {
                            var d,
                            e,
                            f,
                            g,
                            i,
                            j;
                            i = c.username;
                            f =
                            c.loadFn;
                            j = c.viewClass;
                            e = c.getLocation;
                            d = c.callback;
                            g = c.message;
                            i == null && (i = h.myUsername());
                            R("controller", ["memberBoardsView"]);
                            d = this.attachSpinnerCallback(d);
                            this.startNewView("memberBoardsView");
                            Models[f](i, k(function(f) {
                                var h,
                                i;
                                this.clearPreviousView();
                                h = Models.Member.get(f.idMember);
                                f = h.getView(j, void 0, {
                                    isMore: f.isMore
                                });
                                this.showHeader();
                                $("body").addClass("fixed-content");
                                $("#content").html(f.render().el);
                                i = "" + h.get("fullName") + " (" + h.get("username") + ")";
                                c.idCard && c.idBoard ? (f = Models.Board.get(c.idBoard),
                                f = f.getCard(c.idCard), f.getView(Ga).showDetail(function() {
                                    this.setLocation({
                                        title: i,
                                        location: e(h.get("username"))
                                    })
                                }), this.saveCardLocation(f, h)) : this.setLocation({
                                    title: i,
                                    location: e(h.get("username"))
                                });
                                typeof d === "function" && d(h);
                                g != null && b.flash(g.text, "confirm")
                            },
                            this), k(function() {
                                this.displayErrorPage({
                                    errorType: "notFound"
                                })
                            },
                            this));
                            U.calc_surface()
                        };
                        c.prototype.cardSlugBoardContextView = function(b, c, d, e) {
                            this.cardBoardContextView(c, d, e)
                        };
                        c.prototype.cardBoardContextView = function(b, c, d) {
                            this.displayBoard({
                                idBoard: b,
                                idCard: c
                            },
                            d)
                        };
                        c.prototype.cardSlugMemberContextView = function(b, c, d, e, f) {
                            this.cardMemberContextView(b, d, e, f)
                        };
                        c.prototype.cardMemberContextView = function(b, c, d, e) {
                            this.displayMemberPage({
                                idBoard: c,
                                idCard: d,
                                loadFn: "loadUserOrOrgData",
                                username: b,
                                viewClass: qa,
                                getLocation: k(function(b) {
                                    return this.getMemberProfileCardUrl(b, c, d)
                                },
                                this)
                            },
                            e)
                        };
                        c.prototype.browseView = function(b) {
                            var c,
                            d;
                            R("controller", ["browseView"]);
                            d = this;
                            c = this.attachSpinnerCallback(b);
                            d.startNewView("browse");
                            Models.loadPublicBoardsData(function() {
                                var b,
                                e;
                                d.clearPreviousView();
                                e = function() {
                                    var c,
                                    d,
                                    e,
                                    f;
                                    e = Models.Board.all();
                                    f = [];
                                    c = 0;
                                    for (d = e.length; c < d; c++) b = e[c],
                                    b.isPublic() && f.push(b);
                                    return f
                                } ();
                                e = new ba({
                                    model: {
                                        boardList: new X(e)
                                    }
                                });
                                d.showHeader();
                                $("#content").html(w.fill("browse", {}));
                                $("#boards").html(e.render().el);
                                d.saveBrowseLocation();
                                $("body").addClass("fixed-content");
                                typeof c === "function" && c(e);
                                U.calc_surface()
                            })
                        };
                        c.prototype.manualView = function(b) {
                            var c,
                            d,
                            e;
                            Y("manual");
                            d = document.location.hash ? document.location.hash.substr(1) : document.location.pathname.substr(1);
                            e = z.capitalize(d);
                            c = function(b, c) {
                                var f;
                                f = {
                                    is_static: b === "static",
                                    is_board: b === "board",
                                    manual_content: w["manual_" + d]
                                };
                                f[d] = !0;
                                f.title = e;
                                f = w.fill("manual_base", f);
                                return c(f)
                            };
                            this.onAnyBoardView() ? (c("board", k(function(b) {
                                return W.show({
                                    html: b,
                                    hide: k(function() {
                                        return Controller.saveBoardLocation(this.idBoardCurrent)
                                    },
                                    this)
                                })
                            },
                            this)), this.setLocation({
                                title: e,
                                location: d
                            })) : this.staticView(e, d,
                            function(b) {
                                return c("static", b)
                            },
                            {},
                            "fixed-content", b)
                        };
                        c.prototype.releaseNotesView = function(b) {
                            Y("releaseNotes");
                            this.staticView("Release Notes", "notes",
                            function(b) {
                                $.get("/data/notes", b)
                            },
                            {},
                            "fixed-content", b)
                        };
                        c.prototype.staticView = function(b, c, d, e, f, g) {
                            var h,
                            i;
                            if (_.isFunction(e) || !e) g = e,
                            e = {};
                            R("controller", [c + "View"]);
                            i = this;
                            h = this.attachSpinnerCallback(g);
                            i.startNewView(c);
                            Models.loadHeaderData(function() {
                                var g;
                                i.clearPreviousView();
                                i.showHeader();
                                g = function(d) {
                                    $("body").addClass(f);
                                    $("#content").html(d);
                                    i.setLocation({
                                        title: b,
                                        location: c
                                    });
                                    typeof h === "function" && h();
                                    return U.calc_surface()
                                };
                                _.isFunction(d) ?
                                d(g) : g(w.fill(d, e))
                            })
                        };
                        c.prototype.showHeader = function() {
                            var b;
                            b = h.me();
                            $("#header-user").html(b.getView(Qb).render().el)
                        };
                        c.prototype.displayErrorPage = function(b) {
                            b.errorType && (b[b.errorType] = !0);
                            this.staticView("Error", null, "error", b, b.callback)
                        };
                        c.prototype.showSpinner = function() {
                            b.showLoading()
                        };
                        c.prototype.hideSpinner = function() {
                            b.hide()
                        };
                        c.prototype.attachSpinnerCallback = function(b) {
                            var c;
                            c = this;
                            return function(d) {
                                c.hideSpinner();
                                return typeof b === "function" ? b(d) : void 0
                            }
                        };
                        c.prototype.goBack =
                        function() {
                            Backbone.history.ignoreNext();
                            q.history.back()
                        };
                        c.prototype.versionCheck = function(b) {
                            return 0 === lb.compareStringVersions(b, tc) ? !0: !1
                        };
                        c.prototype.upgradeClient = function() {
                            var c,
                            d;
                            if (!this.upgrading) return this.upgrading = !0,
                            d = 360,
                            c = 1800,
                            Monitor.getStatus() === "active" && (d = 60, c = 300),
                            d = Math.floor(d + Math.random() * c),
                            c = d * 1E3,
                            b.showHtml((new ec).render({
                                timeInSeconds: d
                            }), "confirm"),
                            setTimeout(k(function() {
                                if (this.upgrading) return this.upgradeNow()
                            },
                            this), c)
                        };
                        c.prototype.upgradeNow = function() {
                            b.hideAll();
                            return q.location.reload()
                        };
                        c.prototype.stopUpgrade = function() {
                            this.upgrading = !1;
                            return b.showHtml((new ec).render({
                                stopped: !0
                            }), "confirm")
                        };
                        c.prototype.syncError = function() {
                            b.show("Disconnected for too long, reloading page", "error");
                            return q.location.reload()
                        };
                        return c
                    } (),
                    function() {
                        var b,
                        c,
                        d,
                        e;
                        c = q.location;
                        d = !(!q.history || !q.history.pushState || z.isAndroid());
                        b = /^#*/;
                        e = /^\/*/;
                        _.extend(Backbone.History.prototype, {
                            loadUrl: _.wrap(Backbone.History.prototype.loadUrl,
                            function(b) {
                                if (this.shouldIgnoreNext) this.shouldIgnoreNext =
                                !1,
                                this.fragment = this.getFragment();
                                else return b.apply(this)
                            }),
                            ignoreNext: function() {
                                return this.shouldIgnoreNext = !0
                            },
                            getFragment: function(c) {
                                c = c || q.location;
                                return d ? c.pathname.replace(e, "") : c.hash.replace(b, "")
                            },
                            start: function() {
                                var b,
                                e;
                                if (d) $(q).bind("popstate", this.checkUrl);
                                else if ("onhashchange" in q) if (c.pathname === "/") $(q).bind("hashchange", this.checkUrl);
                                else {
                                    e = "/#" + c.pathname;
                                    c.replace(e);
                                    return
                                }
                                b = this;
                                $(function() {
                                    $("body").delegate('a[href^="/"]', "click",
                                    function(c) {
                                        var d; ! c.ctrlKey &&
                                        !c.metaKey && !c.shiftKey && (d = $(this).attr("href"), L.hide(), /\/(about|glossary|shortcuts|help|questions)/.test(d) || W.hide(!0), !$(this).hasClass("js-real-link") && !/\/(logout|login|signup|forgot)/i.test(d) && (z.preventDefault(c), b.saveLocation(d, !0), b.checkUrl()))
                                    })
                                });
                                q.navigate = function(c) {
                                    var d;
                                    d = c || location.pathname;
                                    c || (h.check(), h.isLoggedIn() && /^\/landing$/.test(d) && (d = "/"));
                                    b.saveLocation(d, !0);
                                    return b.loadUrl()
                                };
                                $(q).bind("navigate",
                                function(b, c) {
                                    q.navigate(c)
                                });
                                this.loadUrl()
                            },
                            saveLocation: function(f,
                            g) {
                                f = (f || "").replace(b, "").replace(e, "");
                                if (this.fragment !== f) {
                                    if (!g) this.fragment = f;
                                    d ? history.pushState({
                                        ts: new Date
                                    },
                                    document.title, "" + c.protocol + "//" + c.host + "/" + f) : q.location.hash = f
                                }
                            }
                        })
                    } ());
                    A("alert") && (b = new(function() {
                        function b() {
                            this.hide = k(this.hide, this);
                            this.hideAll = k(this.hideAll, this);
                            this.showHtml = k(this.showHtml, this);
                            this.show = k(this.show, this);
                            this._show = k(this._show, this);
                            this.showLoading = k(this.showLoading, this);
                            this.showReconnectFailed = k(this.showReconnectFailed, this);
                            this.showConnecting =
                            k(this.showConnecting, this);
                            $(rpc).bind("connecting", k(function() {
                                return this.showConnectingTimeout = setTimeout(k(function() {
                                    this.showConnectingTimeout = null;
                                    return this.showConnecting()
                                },
                                this), 500)
                            },
                            this));
                            $(rpc).bind("reconnect_failed", this.showReconnectFailed);
                            $(rpc).bind("connect", k(function() {
                                this.showConnectingTimeout && clearTimeout(this.showConnectingTimeout);
                                return this.hide()
                            },
                            this))
                        }
                        var c;
                        c = null;
                        b.prototype.showConnecting = function() {
                            return this.show("Attempting to restore connection.  Changes made now may not be saved.",
                            "error")
                        };
                        b.prototype.showReconnectFailed = function() {
                            return this.show("Can't connect to Trello. Reload the page to try again.", "error")
                        };
                        b.prototype.showLoading = function() {
                            return this.show("Loading", "warning")
                        };
                        b.prototype._show = function(b, d) {
                            c != null && (clearTimeout(c), c = null);
                            b.apply($("#notification")).removeClass("warning error confirm info").addClass(d).show()
                        };
                        b.prototype.show = function(b, c) {
                            return this._show(function() {
                                return this.text(b)
                            },
                            c)
                        };
                        b.prototype.showHtml = function(b, c) {
                            return this._show(function() {
                                return this.html(b)
                            },
                            c)
                        };
                        b.prototype.hideAll = function() {
                            this.persistedAlert = null;
                            this.hide()
                        };
                        b.prototype.hide = function() {
                            c != null && (clearTimeout(c), c = null);
                            $("#notification").empty().css({
                                top: ""
                            }).hide();
                            this.persistedAlert && this.show(this.persistedAlert.msg, this.persistedAlert.type)
                        };
                        b.prototype.persist = function(b, c, d) {
                            this.persistedAlert = {
                                msg: b,
                                type: c
                            };
                            this.hide();
                            if (d) return setTimeout(this.hideAll, d - new Date)
                        };
                        b.prototype.flash = function(b, d) {
                            $("#notification").text(b).removeClass("warning error confirm info").addClass(d).show();
                            c = setTimeout(this.hide, 2E3)
                        };
                        return b
                    } ()));
                    if (A("desktop_notification")) q.DesktopNotifications = function() {
                        var b,
                        c;
                        b = q.webkitNotifications;
                        return c = {
                            exists: function() {
                                return b != null
                            },
                            permission: function() {
                                return c.exists() ? b.checkPermission() : 2
                            },
                            enabled: function() {
                                return c.permission() === 0
                            },
                            denied: function() {
                                return c.permission() === 2
                            },
                            notEnabled: function() {
                                return c.permission() === 1
                            },
                            requestPermission: function(d) {
                                if (c.notEnabled()) return b.requestPermission(d)
                            },
                            notify: function(d) {
                                var e,
                                f;
                                e = d.html;
                                if (c.enabled() &&
                                e) f = Math.floor(Math.random() * 1E5),
                                localStorage["notification_" + f] = e,
                                e = b.createHTMLNotification("/notify.html#" + f),
                                e.onclose = function() {
                                    var b;
                                    b = localStorage["notification_response_" + f];
                                    delete localStorage["notification_response_" + f];
                                    typeof d.close === "function" && d.close(b)
                                },
                                e.onclick = function() {
                                    q.focus();
                                    this.cancel();
                                    typeof d.click === "function" && d.click(this)
                                },
                                e.show()
                            }
                        }
                    } ();
                    A("alert") && (b = new(function() {
                        function b() {
                            this.hide = k(this.hide, this);
                            this.hideAll = k(this.hideAll, this);
                            this.showHtml = k(this.showHtml,
                            this);
                            this.show = k(this.show, this);
                            this._show = k(this._show, this);
                            this.showLoading = k(this.showLoading, this);
                            this.showReconnectFailed = k(this.showReconnectFailed, this);
                            this.showConnecting = k(this.showConnecting, this);
                            $(rpc).bind("connecting", k(function() {
                                return this.showConnectingTimeout = setTimeout(k(function() {
                                    this.showConnectingTimeout = null;
                                    return this.showConnecting()
                                },
                                this), 500)
                            },
                            this));
                            $(rpc).bind("reconnect_failed", this.showReconnectFailed);
                            $(rpc).bind("connect", k(function() {
                                this.showConnectingTimeout &&
                                clearTimeout(this.showConnectingTimeout);
                                return this.hide()
                            },
                            this))
                        }
                        var c;
                        c = null;
                        b.prototype.showConnecting = function() {
                            return this.show("Attempting to restore connection.  Changes made now may not be saved.", "error")
                        };
                        b.prototype.showReconnectFailed = function() {
                            return this.show("Can't connect to Trello. Reload the page to try again.", "error")
                        };
                        b.prototype.showLoading = function() {
                            return this.show("Loading", "warning")
                        };
                        b.prototype._show = function(b, d) {
                            c != null && (clearTimeout(c), c = null);
                            b.apply($("#notification")).removeClass("warning error confirm info").addClass(d).show()
                        };
                        b.prototype.show = function(b, c) {
                            return this._show(function() {
                                return this.text(b)
                            },
                            c)
                        };
                        b.prototype.showHtml = function(b, c) {
                            return this._show(function() {
                                return this.html(b)
                            },
                            c)
                        };
                        b.prototype.hideAll = function() {
                            this.persistedAlert = null;
                            this.hide()
                        };
                        b.prototype.hide = function() {
                            c != null && (clearTimeout(c), c = null);
                            $("#notification").empty().css({
                                top: ""
                            }).hide();
                            this.persistedAlert && this.show(this.persistedAlert.msg, this.persistedAlert.type)
                        };
                        b.prototype.persist = function(b, c, d) {
                            this.persistedAlert = {
                                msg: b,
                                type: c
                            };
                            this.hide();
                            if (d) return setTimeout(this.hideAll, d - new Date)
                        };
                        b.prototype.flash = function(b, d) {
                            $("#notification").text(b).removeClass("warning error confirm info").addClass(d).show();
                            c = setTimeout(this.hide, 2E3)
                        };
                        return b
                    } ()));
                    A("keyboard") && $(function() {
                        var b,
                        c,
                        d,
                        e,
                        f,
                        g;
                        if (document.elementFromPoint) return d = c = -1,
                        b = null,
                        f = "",
                        g = function() {
                            b = null;
                            return f = ""
                        },
                        e = function(c, d) {
                            f = c;
                            return b = d
                        },
                        $(document).mousemove(_.throttle(function(b) {
                            c = b.pageX;
                            d = b.pageY
                        },
                        25)),
                        $(document).keydown(_.throttle(function(i) {
                            var j,
                            k,
                            l,
                            m;
                            if (! (W.isVisible() && ((j = W.view) != null ? (k = j.model) != null ? k.typeName: void 0: void 0) !== "Card" || L.isVisible() && !b || $(document.activeElement).is("input,textarea") || i.ctrlKey || i.altKey || i.metaKey || i.shiftKey && !((l = i.which) === tb || l === db))) {
                                j = function() {
                                    return Y("keyboardShortcuts")
                                };
                                switch (i.which) {
                                case vb:
                                    j();
                                    if (h.me() && h.isLoggedIn() && (j = h.me(), i = $("#board"), m = I.fMyCardsFilter, I.clearAllCardFilters(), !m)) i.addClass("filtering filtering-assigned-members"),
                                    m = j.get("username"),
                                    j = ".assigned-to-" + m,
                                    i.addClass("filtering-assigned-to-" +
                                    m),
                                    $(".list-cards").find(j).addClass("assigned-to-member"),
                                    $(".js-filter-cards").addClass("is-on"),
                                    I.fMyCardsFilter = !0;
                                    return;
                                case Gb:
                                    j();
                                    I.clearAllCardFilters();
                                    return
                                }
                                k = document.elementFromPoint(c, d);
                                if (l = $(k).closest(".list-card")) if (k = W.isVisible() ? (m = W.view) != null ? m.model: void 0: b || l.data("card")) if (m = k.getBoard().isMemberPublic(h.me()), z.stop(i), b) {
                                    if (!m) {
                                        if (f === "labels") switch (i.which) {
                                        case Sa:
                                        case jb:
                                        case la:
                                        case cb:
                                        case rb:
                                        case sb:
                                            l = i.which - Sa,
                                            l < k.labels.length && (j(), k.toggleLabel(k.labels[l]))
                                        }
                                        L.hide();
                                        f = b = null
                                    }
                                } else {
                                    if (!m) {
                                        m = !0;
                                        switch (i.which) {
                                        case Sb:
                                        case Rb:
                                            k.close();
                                            break;
                                        case db:
                                            k.moveToNextList();
                                            break;
                                        case tb:
                                            k.moveToPrevList();
                                            break;
                                        case Tb:
                                            k.toggleMember(h.myId());
                                            break;
                                        case Da:
                                            W.isVisible() ? $(W.view.el).find(".js-card-menu").click() : L.toggle({
                                                elem: l.find(".js-card-menu")[0],
                                                pointer: "right",
                                                location: "center",
                                                view: k.getView(ea, "keyboard", {
                                                    hideOnEnter: !0
                                                }),
                                                shown: function(b) {
                                                    return b.find(".filter-members").select().focus()
                                                }
                                            });
                                            break;
                                        case Hb:
                                            W.isVisible() ? $(W.view.el).find(".js-edit-labels").click() :
                                            (e("labels", k), L.toggle({
                                                elem: l,
                                                view: k.getView(J, "keyboard", {
                                                    showShortcuts: !0,
                                                    hideOnSelect: !0
                                                }),
                                                pointer: "right",
                                                location: "center",
                                                hidden: g
                                            }));
                                            break;
                                        case Sa:
                                        case jb:
                                        case la:
                                        case cb:
                                        case rb:
                                        case sb:
                                            l = i.which - Sa;
                                            l < k.labels.length && k.toggleLabel(k.labels[l]);
                                            break;
                                        default:
                                            m = !1,
                                            R("keyboard", i.which)
                                        }
                                        m && j()
                                    }
                                    switch (i.which) {
                                    case Ib:
                                        j(),
                                        k.toggleVote()
                                    }
                                }
                            }
                        },
                        250))
                    });
                    if (A("trellis-client")) {
                        if (q.unsupported) return;
                        tc = "0.7.82";
                        document.domain = document.domain;
                        $(function() {
                            q.Controller = new sc;
                            Backbone.history.start()
                        })
                    }
                    if (A("doc_init")) $(document).ready(function() {
                        var b;
                        q.hide_pop_over_and_modal = function() {
                            L.hide();
                            W.hide();
                            return $(".active-card").removeClass("active-card")
                        };
                        WindowSize.calc();
                        b = _.throttle(function() {
                            I.saveScrolls();
                            I.calc();
                            return I.restoreScrolls()
                        },
                        300);
                        $(q).resize(b);
                        q.orientationchange = W.calc_pos;
                        "placeholder" in document.createElement("input") || $("input[placeholder], textarea[placeholder]").live({
                            focus: function() {
                                var b;
                                b = $(this);
                                if (b.hasClass("placeholder")) return b.removeClass("placeholder").val("")
                            },
                            blur: function() {
                                var b;
                                b = $(this);
                                if (b.val().trim() ===
                                "") return b.addClass("placeholder").val(b.attr("placeholder"))
                            }
                        });
                        $(".window-overlay").click(function(b) {
                            if (!$(b.target).is("a[href^='/']")) return z.stopPropagation(b),
                            hide_pop_over_and_modal(b),
                            U.cancelEdits()
                        });
                        $(".js-toggle-login-popover").live("click",
                        function(b) {
                            z.stop(b);
                            return L.toggle({
                                elem: b.target,
                                top: 37,
                                view: h.me().getView(wb)
                            })
                        });
                        $(".js-show-search").click(function() {
                            return $(this).closest(".header-wrapper").toggleClass("show-search")
                        });
                        $(".window-wrapper").click(function(b) {
                            if (!$(b.target).is("a[href^='/']")) if ($(b.target).is("a") &&
                            $(b.target).attr("href") !== "#") z.stopPropagation(b);
                            else if ($(b.target).is("input")) z.stopPropagation(b);
                            else if (z.stop(b), L.hide(), $(b.target).hasClass("js-close-window")) return hide_pop_over_and_modal(b)
                        });
                        $("#surface").click(function(b) {
                            if ($(b.target).is("input") || $(b.target).is("textarea")) z.stopPropagation(b);
                            else return hide_pop_over_and_modal(b),
                            U.cancelEdits(),
                            U.blurNewCard()
                        });
                        $("a[href=#]").live("click",
                        function(b) {
                            return z.preventDefault(b)
                        });
                        return $(document).keyup(function(b) {
                            if (b.keyCode ===
                            27) return U.isEditing() ? U.cancelEdits() : L.isVisible() ? L.hide() : (W.hide(), U.blurNewCard(), $(".active-card").removeClass("active-card"), $("input").blur(), $("textarea").blur())
                        })
                    }),
                    $.fn.fixPlaceholder = function() {
                        if ("placeholder" in document.createElement("input")) return this;
                        this.filter("input[placeholder], textarea[placeholder]").each(function() {
                            var b;
                            b = $(this);
                            return b.addClass("placeholder").val(b.attr("placeholder"))
                        });
                        return this
                    };
                    A("browser") && $(document).ready(function() {
                        var b;
                        b = new(function() {
                            function b() {
                                this.searchVersion =
                                k(this.searchVersion, this);
                                this.searchString = k(this.searchString, this);
                                this.browser = this.searchString(this.dataBrowser) || "unknown-browser";
                                this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "unknown-browser-version";
                                this.OS = this.searchString(this.dataOS) || "unknown-os"
                            }
                            b.prototype.searchString = function(b) {
                                var c,
                                d,
                                e;
                                d = 0;
                                for (e = b.length; d < e; d++) if (c = b[d], this.versionSearchString = c.versionSearch || c.identity, c.string && c.string.indexOf(c.subString) !== -1 || c.prop) return c.identity
                            };
                            b.prototype.searchVersion = function(b) {
                                var c;
                                c = b.indexOf(this.versionSearchString);
                                return c === -1 ? void 0: parseFloat(b.substring(c + this.versionSearchString.length + 1))
                            };
                            b.prototype.dataBrowser = [{
                                string: navigator.userAgent,
                                subString: "Chrome",
                                identity: "Chrome"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "OmniWeb",
                                versionSearch: "OmniWeb/",
                                identity: "OmniWeb"
                            },
                            {
                                string: navigator.vendor,
                                subString: "Apple",
                                identity: "Safari",
                                versionSearch: "Version"
                            },
                            {
                                prop: q.opera,
                                identity: "Opera"
                            },
                            {
                                string: navigator.vendor,
                                subString: "iCab",
                                identity: "iCab"
                            },
                            {
                                string: navigator.vendor,
                                subString: "KDE",
                                identity: "Konqueror"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "Firefox",
                                identity: "Firefox"
                            },
                            {
                                string: navigator.vendor,
                                subString: "Camino",
                                identity: "Camino"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "Netscape",
                                identity: "Netscape"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "MSIE",
                                identity: "Explorer",
                                versionSearch: "MSIE"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "Gecko",
                                identity: "Mozilla",
                                versionSearch: "rv"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "Mozilla",
                                identity: "Netscape",
                                versionSearch: "Mozilla"
                            }];
                            b.prototype.dataOS = [{
                                string: navigator.platform,
                                subString: "Win",
                                identity: "Windows"
                            },
                            {
                                string: navigator.platform,
                                subString: "Mac",
                                identity: "Mac"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "iPhone",
                                identity: "iPhone"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "iPod",
                                identity: "iPod"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "iPad",
                                identity: "iPad"
                            },
                            {
                                string: navigator.userAgent,
                                subString: "Android",
                                identity: "Android"
                            },
                            {
                                string: navigator.platform,
                                subString: "Linux",
                                identity: "Linux"
                            }];
                            return b
                        } ());
                        $("body").addClass(b.browser.toLowerCase());
                        $("body").addClass(("" + b.browser + "-" + b.version).toLowerCase());
                        return $("body").addClass(b.OS.toLowerCase())
                    });
                    A("time") && (Lb = new(function() {
                        function b() {}
                        b.prototype.delta = null;
                        b.prototype.updateServerTime = function(b) {
                            this.delta = new Date(b) - new Date;
                            return R("time", "delta", this.delta)
                        };
                        b.prototype.serverToClient = function(b) {
                            return new Date(new Date(b) - this.delta)
                        };
                        return b
                    } ()));
                    if (A("dates")) q.Dates = ja = new(function() {
                        function b() {}
                        var c,
                        d;
                        d = "";
                        c = function() {
                            var b,
                            c,
                            e;
                            b = ja.parse($(this).attr("dt"));
                            b = Lb.serverToClient(b);
                            e = Math.abs((d - b.getTime()) / 1E3);
                            c = b > d;
                            $(this).text(function() {
                                var d;
                                return e < 10 ? c ? "now": "just now": e < 120 ? c ? "in a minute": "a minute ago": (d = Math.floor(e / 60), d < 60 ? c ? "in " + d + " minutes": "" + d + " minutes ago": d < 120 ? c ? "in an hour": "an hour ago": (d = Math.floor(d / 60), d < 24 ? c ? "in " + d + " hours": "" + d + " hours ago": d < 48 ? c ? "tomorrow": "yesterday": (d = Math.floor(d / 24), d < 3 ? c ? "in " + d + " days": "" + d + " days ago": "" + (b.getMonth() + 1) + "/" + b.getDate() +
                                "/" + b.getFullYear())))
                            });
                            $(this).is("[title]") || $(this).attr("title", "" + b.toLocaleDateString() + " " + b.toLocaleTimeString())
                        };
                        b.prototype.update = function(b) {
                            d = (new Date).getTime();
                            $(b).find(".date[dt]").each(c)
                        };
                        b.prototype.parse = function(b) {
                            var c;
                            b == null && (b = "");
                            c = new Date(b);
                            return isNaN(c) ? new Date(b.replace(/-/g, "/").replace(/T|Z|\.\d+/g, " ") + " GMT") : c
                        };
                        b.prototype.toLongString = function(b) {
                            var c;
                            c = Date.today();
                            return c.getYear() === b.getYear() ? c.getMonth() === b.getMonth() && c.getDate() === b.getDate() ?
                            "Today at " + b.toString("h:mm tt") : "" + b.toString("MMM d") + " at " + b.toString("h:mm tt") : "" + b.toString("MMM d, yyyy") + " at " + b.toString("h:mm tt")
                        };
                        return b
                    } ()),
                    $(function() {
                        return setInterval(function() {
                            ja.update("body")
                        },
                        1E4)
                    });
                    A("adminAlert") && (n = new(function() {
                        function c() {}
                        c.prototype.show = function(c) {
                            var d,
                            e,
                            f;
                            d = c.alertType;
                            e = c.data;
                            f = c.date;
                            c = c.dateExpires;
                            ja.parse(f);
                            c = ja.parse(c);
                            switch (d) {
                            case "text":
                                return b.persist(e.text, "info", Lb.serverToClient(c))
                            }
                        };
                        c.prototype.process = function(b) {
                            if (b.length) return this.show(b[0])
                        };
                        return c
                    } ()), $(rpc).bind("adminAlert",
                    function(b, c) {
                        return n.show(c.deltas.msg)
                    }));
                    A("search") && (Ma = new(function() {
                        function b() {}
                        b.prototype.getResults = function(b, c, d) {
                            var e;
                            e = c.limit;
                            c = c.partial;
                            e == null && (e = 5);
                            c == null && (c = !0);
                            b = {
                                query: b,
                                limit: e,
                                partial: c
                            };
                            if (Controller.onAnyBoardView()) b.idBoard = Controller.idBoardCurrent;
                            return $.post("/api/app/search", {
                                token: h.myToken(),
                                data: b
                            },
                            d)
                        };
                        b.prototype.navigateToSearch = function(b) {
                            return $(q).triggerHandler("navigate", "/search?q=" + escape(b))
                        };
                        b.prototype.init =
                        function() {
                            var b;
                            b = new Kb;
                            return $("#header-search").html(b.render().el)
                        };
                        return b
                    } ()), Kb = function() {
                        function b() {
                            this.doSearch = k(this.doSearch, this);
                            this.updateSearch = k(this.updateSearch, this);
                            this.submitSearch = k(this.submitSearch, this);
                            this.doSearchDebounced = _.debounce(this.doSearch, 250);
                            this.submitted = !1;
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.events = {
                            "input #search-text": "updateSearch",
                            "keydown #search-text": "updateSearch",
                            "click #search-submit": "submitSearch"
                        };
                        b.prototype.render =
                        function() {
                            $(this.el).html(w.fill("search_input"));
                            return this
                        };
                        b.prototype.submitSearch = function(b) {
                            z.stop(b);
                            this.submitted = !0;
                            L.hide();
                            z.stop(b);
                            return Ma.navigateToSearch($("#search-text").val())
                        };
                        b.prototype.updateSearch = function(b) {
                            return z.isSubmitKey(b.keyCode) ? this.submitSearch(b) : (this.submitted = !1, this.doSearchDebounced())
                        };
                        b.prototype.doSearch = function() {
                            var b,
                            c;
                            if (!this.submitted) if (b = $(this.el).find("#search-text"), c = b.val(), c.length < 3) L.hide();
                            else return Ma.getResults(c, {
                                limit: 5,
                                partial: !0
                            },
                            k(function(d) {
                                if (!this.searchResultsView) this.searchResultsView = new bc({
                                    truncated: !0
                                });
                                this.searchResultsView.setResults(d);
                                this.searchResultsView.setQuery(c);
                                return L.show({
                                    elem: b,
                                    top: b.outerHeight() + 8,
                                    view: this.searchResultsView,
                                    elActive: b
                                })
                            },
                            this))
                        };
                        return b
                    } (), bc = function() {
                        function b() {
                            this.showAllResults = k(this.showAllResults, this);
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.setResults = function(b) {
                            this.results = b
                        };
                        b.prototype.setQuery = function(b) {
                            this.query = b
                        };
                        b.prototype.events =
                        {
                            "click .js-all-search-results": "showAllResults"
                        };
                        b.prototype.getHighlights = function(b, c, d) {
                            var e,
                            f,
                            g,
                            h;
                            f = RegExp("(.*?)(" + c.join("|") + ")", "ig");
                            g = [];
                            e = 0;
                            b = b.replace(/\s+/g, " ");
                            for (h = function(b, c, e) {
                                return ! d || b.length < 40 ? b: e ? (e = /^.{30}\w*/.exec(b)) && e[0].length < b.length ? e[0] + "...": b: c ? (c = /\w*?.{30}$/.exec(b)) && c[0].length < b.length ? "..." + c[0] : b: (e = /^.{20}\w*/.exec(b), c = /\w*?.{20}$/.exec(b), e && c && e[0].length + c[0].length < b.length ? e[0] + "..." + c[0] : b)
                            }; c = f.exec(b);) e = c[1],
                            e.length && g.push({
                                isHit: !1,
                                text: h(c[1],
                                g.length === 0, !1)
                            }),
                            g.push({
                                isHit: !0,
                                text: c[2]
                            }),
                            e = f.lastIndex;
                            e < b.length && g.push({
                                isHit: !1,
                                text: h(b.substr(e), g.length === 0, !0)
                            });
                            return N.to_html(w.search_highlights, {
                                results: g
                            })
                        };
                        b.prototype.render = function() {
                            var b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l,
                            m;
                            d = [];
                            if (this.results != null) {
                                i = ["card", "board", "org", "member"];
                                e = 0;
                                for (g = i.length; e < g; e++) if (b = i[e], (j = this.results[b]) != null && j.length) {
                                    d.push({
                                        isCategoryLabel: !0,
                                        categoryClass: b,
                                        category: (k = this.results[b]) != null ? (l = k[0]) != null ? l.category: void 0: void 0
                                    });
                                    m = this.results[b];
                                    f = 0;
                                    for (h = m.length; f < h; f++) {
                                        c = m[f];
                                        c.categoryClass = b;
                                        c["is" + z.capitalize(b)] = !0;
                                        if (c.label != null) c.labelHTML = this.getHighlights(c.label, this.results.terms, !1);
                                        if (c.matchText != null) c.matchTextHTML = this.getHighlights(c.matchText, this.results.terms, !0);
                                        d.push(c)
                                    }
                                }
                            }
                            b = {
                                list: d,
                                empty: d.length === 0,
                                loading: !this.results,
                                truncated: this.options.truncated
                            };
                            $(this.el).html(w.fill("search_results", b));
                            return this
                        };
                        b.prototype.showAllResults = function() {
                            L.hide();
                            return Ma.navigateToSearch(this.query)
                        };
                        return b
                    } (),
                    rc = function() {
                        function b(c, d) {
                            this.searchResultsView = new bc({
                                truncated: !1
                            });
                            this.searchResultsView.setQuery(d);
                            Ma.getResults(d, {
                                limit: 100,
                                partial: !1
                            },
                            k(function(b) {
                                this.searchResultsView.setResults(b);
                                return this.searchResultsView.render()
                            },
                            this));
                            b.__super__.constructor.apply(this, arguments)
                        }
                        y(b, S);
                        b.prototype.className = "search-results-page-contents";
                        b.prototype.render = function() {
                            $(this.el).empty().append(this.searchResultsView.render().el);
                            return this
                        };
                        return b
                    } (), $(function() {
                        return Ma.init()
                    }));
                    A("desktopNotification", !0) && $(function() {
                        var b;
                        if (q.localStorage && (setTimeout(function() {
                            return q.close()
                        },
                        1E4), b = location.hash.substr(1), /^\d+$/.test(b))) return b = "notification_" + parseInt(b),
                        $("#desktop-notification>div").html(localStorage[b]),
                        delete localStorage[b]
                    })
                }).call(this)
            }
        })(window);